$schema: "pipeline.schema.v1"
serviceGroup: Microsoft.Azure.ARO.HCP.ACM
rolloutName: ACM Rollout
resourceGroups:
- name: global
  resourceGroup: '{{ .global.rg }}'
  subscription: '{{ .global.subscription.key }}'
  steps:
  - name: output
    action: ARM
    template: templates/output-global.bicep
    parameters: ./../dev-infrastructure/configurations/output-global.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
- name: management
  resourceGroup: '{{ .mgmt.rg }}'
  subscription: '{{ .mgmt.subscription.key }}'
  steps:
  - name: deploy-mce-crds
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Helm
    releaseName: 'mce-crds'
    releaseNamespace: 'multicluster-engine'
    chartDir: ./deploy/helm/multicluster-engine-crds
    valuesFile: multicluster-engine-crds.values.yaml
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
  - name: deploy-mce
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Helm
    releaseName: 'mce'
    releaseNamespace: 'multicluster-engine'
    chartDir: ./deploy/helm/multicluster-engine
    valuesFile: multicluster-engine.values.yaml
    dependsOn:
    - resourceGroup: management
      step: deploy-mce-crds
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
  - name: deploy-mce-config
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Helm
    releaseName: 'mce-config'
    releaseNamespace: 'multicluster-engine'
    chartDir: ./deploy/helm/multicluster-engine-config
    valuesFile: multicluster-engine-config.values.yaml
    dependsOn:
    - resourceGroup: management
      step: deploy-mce
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
  - name: deploy-policies
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Helm
    releaseName: 'policy'
    releaseNamespace: 'open-cluster-management-policies'
    chartDir: ./deploy/helm/policies
    valuesFile: policies.values.yaml
    dependsOn:
    - resourceGroup: management
      step: deploy-mce-config
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
