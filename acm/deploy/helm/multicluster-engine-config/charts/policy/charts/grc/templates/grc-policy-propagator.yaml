apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grc
    component: ocm-policy-propagator
  name: grc-policy-propagator
  namespace: {{ .Values.global.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.hubconfig.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grc
      component: ocm-policy-propagator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: governance-policy-propagator
      creationTimestamp: null
      labels:
        app: grc
        component: ocm-policy-propagator
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
                - arm64
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - grcpolicypropagator
              topologyKey: topology.kubernetes.io/zone
            weight: 70
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - grcpolicypropagator
              topologyKey: kubernetes.io/hostname
            weight: 35
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=0.0.0.0:8383
        - --enable-webhooks=false
        command:
        - governance-policy-propagator
        env:
        - name: WATCH_NAMESPACE
          value: ""
        - name: WATCH_NAMESPACE_COMPLIANCE_EVENTS_STORE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: governance-policy-propagator
        image: "{{ .Values.global.registryOverride}}/{{ .Values.global.imageOverrides.governance_policy_propagator }}"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - ls
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        name: governance-policy-propagator
        ports:
        - containerPort: 9443
          name: webhook-http
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - ls
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 25m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: open-cluster-management-image-pull-credentials
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
      serviceAccount: grc-sa
      serviceAccountName: grc-sa
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/infra
        operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
