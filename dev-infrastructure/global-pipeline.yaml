#
# Purpose: Manage global infrastructure for ARO HCP
# Managed Resources:
# * global ARO HCP parent zones and ensures proper delegation
# * global Grafana instance
# * global MSI for Shell Step executions
# * SVC and OCP ACRs
# * image mirroring jobs
#
$schema: "pipeline.schema.v1"
serviceGroup: Microsoft.Azure.ARO.HCP.Global
rolloutName: Global Resource Rollout
resourceGroups:
- name: global
  resourceGroup: '{{ .global.rg }}'
  subscription: '{{ .global.subscription.key }}'
  steps:
  - name: infra
    action: ARM
    template: templates/global-infra.bicep
    parameters: configurations/global-infra.tmpl.bicepparam
    deploymentLevel: ResourceGroup
  - name: output
    action: ARM
    template: templates/output-global.bicep
    parameters: configurations/output-global.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
    dependsOn:
    - resourceGroup: global
      step: infra
  - name: onecert-private-kv-issuer
    action: SetCertificateIssuer
    secretKeyVault:
      configRef: ev2.assistedId.certificate.keyVault
    secretName:
      configRef: ev2.assistedId.certificate.name
    applicationId:
      configRef: ev2.assistedId.applicationId
    vaultBaseUrl:
      input:
        resourceGroup: global
        step: output
        name: globalKeyVaultUrl
    issuer:
      value: OneCertV2-PrivateCA
  - name: certificates
    action: ARM
    template: templates/global-certificates.bicep
    parameters: configurations/global-certificates.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    dependsOn:
    - resourceGroup: global
      step: onecert-private-kv-issuer
  - name: housekeeping
    action: Shell
    command: ./global-housekeeping.sh
    workingDir: ./scripts
    dryRun:
      variables:
      - name: DRY_RUN
        value: "true"
    variables:
    - name: GLOBAL_RESOURCE_GROUP
      configRef: global.rg
    shellIdentity:
      input:
        resourceGroup: global
        step: output
        name: globalMSIId
    dependsOn:
    - resourceGroup: global
      step: infra
  - name: grafana-dashboards
    action: Shell
    omitFromServiceGroupCompletion: true
    command: make grafana
    workingDir: ./../observability/
    dependsOn:
    - resourceGroup: global
      step: housekeeping
    - resourceGroup: global
      step: infra
    dryRun:
      variables:
      - name: DRY_RUN
        value: "true"
    variables:
    - name: GRAFANA_NAME
      configRef: monitoring.grafanaName
    - name: GLOBAL_RESOURCEGROUP
      configRef: global.rg
    shellIdentity:
      input:
        resourceGroup: global
        step: output
        name: globalMSIId
  # creates DNS delegation for the ARO HCP global SVC zone
  - name: svcChildZone
    action: DelegateChildZone
    parentZone:
      configRef: dns.parentZoneName
    childZone:
      configRef: dns.svcParentZoneName
    dependsOn:
    - resourceGroup: global
      step: infra
  # creates DNS delegation for the ARO HCP global CX zone
  - name: cxChildZone
    action: DelegateChildZone
    parentZone:
      configRef: dns.parentZoneName
    childZone:
      configRef: dns.cxParentZoneName
    dependsOn:
    - resourceGroup: global
      step: infra
  # create global ARO HCP ACRs for OCP and SVC images
  - name: acrs
    action: ARM
    template: templates/global-acr.bicep
    parameters: configurations/global-acr.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    dependsOn:
    - resourceGroup: global
      step: infra
  # ingests secrets into the global KV
  - name: decrypt-and-ingest-secrets
    action: SecretSync
    keyVault: '{{ .global.keyVault.name }}'
    configurationFile: 'data/encryptedsecrets.yaml'
    encryptionKey: 'secretSyncKey'
    dependsOn:
    - resourceGroup: global
      step: infra
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
