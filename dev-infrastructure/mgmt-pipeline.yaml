#
# Purpose: Manage management cluster and supporting infra for its services
# Managed Resources:
# * AKS MGMT cluster
# * MSI, CX and MGMT Key Vaults with OneCert registration
# * metrics collection
# * MI, certificate and RBAC for Maestro
#
$schema: "pipeline.schema.v1"
serviceGroup: Microsoft.Azure.ARO.HCP.Management.Infra
rolloutName: Management Cluster Rollout
resourceGroups:
- name: global
  resourceGroup: '{{ .global.rg }}'
  subscription: '{{ .global.subscription.key }}'
  steps:
  - name: output
    action: ARM
    template: templates/output-global.bicep
    parameters: configurations/output-global.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
- name: service
  resourceGroup: '{{ .svc.rg }}'
  subscription: '{{ .svc.subscription.key }}'
  steps:
  - name: output
    action: ARM
    omitFromServiceGroupCompletion: true
    template: templates/output-svc.bicep
    parameters: configurations/output-svc.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
    externalDependsOn:
    - serviceGroup: Microsoft.Azure.ARO.HCP.Service.Infra
      resourceGroup: service
      step: cluster
- name: regional
  resourceGroup: '{{ .regionRG }}'
  subscription: '{{ .svc.subscription.key }}'
  steps:
  - name: output
    action: ARM
    template: templates/output-region.bicep
    parameters: configurations/output-region.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
- name: management
  resourceGroup: '{{ .mgmt.rg }}'
  subscription: '{{ .mgmt.subscription.key }}'
  steps:
  - name: rpRegistration
    action: ProviderFeatureRegistration
    providerConfigRef: mgmt.subscription.providers
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
  - name: infra
    action: ARM
    template: templates/mgmt-infra.bicep
    parameters: configurations/mgmt-infra.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    variables:
    - name: logAnalyticsWorkspaceId
      input:
        resourceGroup: regional
        step: output
        name: logAnalyticsWorkspaceId
    - name: globalMSIId
      input:
        resourceGroup: global
        step: output
        name: globalMSIId
    dependsOn:
    - resourceGroup: management
      step: rpRegistration
  - name: cs-akv-permissions
    action: ARM
    omitFromServiceGroupCompletion: true
    template: templates/cs-mgmt-akv-permissions.bicep
    parameters: configurations/cs-mgmt-akv-permissions.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    variables:
    - name: clusterServiceMIResourceId
      input:
        resourceGroup: service
        step: output
        name: cs
    - name: msiRefresherMIResourceId
      input:
        resourceGroup: service
        step: output
        name: msiRefresher
    dependsOn:
    - resourceGroup: management
      step: infra
  - name: infra-output
    action: ARM
    template: templates/mgmt-infra-lookup.bicep
    parameters: configurations/mgmt-infra-lookup.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
    dependsOn:
    - resourceGroup: management
      step: infra
  # Configure certificate issuers for the MC KVs
  - name: cx-oncert-public-kv-issuer
    action: SetCertificateIssuer
    secretKeyVault:
      configRef: ev2.assistedId.certificate.keyVault
    secretName:
      configRef: ev2.assistedId.certificate.name
    applicationId:
      configRef: ev2.assistedId.applicationId
    vaultBaseUrl:
      input:
        resourceGroup: management
        step: infra-output
        name: cxKeyVaultUrl
    issuer:
      value: OneCertV2-PublicCA
  - name: oncert-private-kv-issuer
    action: SetCertificateIssuer
    secretKeyVault:
      configRef: ev2.assistedId.certificate.keyVault
    secretName:
      configRef: ev2.assistedId.certificate.name
    applicationId:
      configRef: ev2.assistedId.applicationId
    vaultBaseUrl:
      input:
        resourceGroup: management
        step: infra-output
        name: mgmtKeyVaultUrl
    issuer:
      value: OneCertV2-PrivateCA
  - name: oncert-public-kv-issuer
    action: SetCertificateIssuer
    secretKeyVault:
      configRef: ev2.assistedId.certificate.keyVault
    secretName:
      configRef: ev2.assistedId.certificate.name
    applicationId:
      configRef: ev2.assistedId.applicationId
    vaultBaseUrl:
      input:
        resourceGroup: management
        step: infra-output
        name: mgmtKeyVaultUrl
    issuer:
      value: OneCertV2-PublicCA
  # Build the MC
  - name: cluster
    action: ARM
    template: templates/mgmt-cluster.bicep
    parameters: configurations/mgmt-cluster.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    variables:
    - name: ocpAcrResourceId
      input:
        resourceGroup: global
        step: output
        name: ocpAcrResourceId
    - name: svcAcrResourceId
      input:
        resourceGroup: global
        step: output
        name: svcAcrResourceId
    - name: globalMSIId
      input:
        resourceGroup: global
        step: output
        name: globalMSIId
    - name: azureMonitoringWorkspaceId
      input:
        resourceGroup: regional
        step: output
        name: azureMonitoringWorkspaceId
    - name: hcpAzureMonitoringWorkspaceId
      input:
        resourceGroup: regional
        step: output
        name: hcpAzureMonitoringWorkspaceId
    - name: maestroEventGridNamespaceId
      input:
        resourceGroup: regional
        step: output
        name: maestroEventGridNamespaceId
    - name: logAnalyticsWorkspaceId
      input:
        resourceGroup: regional
        step: output
        name: logAnalyticsWorkspaceId
    dependsOn:
    - resourceGroup: management
      step: cx-oncert-public-kv-issuer
    - resourceGroup: management
      step: oncert-private-kv-issuer
    - resourceGroup: management
      step: oncert-public-kv-issuer
  - name: nsp
    action: ARM
    omitFromServiceGroupCompletion: true
    template: templates/mgmt-nsp.bicep
    parameters: configurations/mgmt-nsp.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    variables:
    - name: serviceClusterSubscriptionId
      input:
        resourceGroup: service
        step: output
        name: subscriptionId
    dependsOn:
    - resourceGroup: management
      step: cluster
    - resourceGroup: management
      step: infra
  - name: cluster-output
    action: ARM
    template: templates/output-mgmt-cluster.bicep
    parameters: configurations/output-mgmt-cluster.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
    dependsOn:
    - resourceGroup: regional
      step: output
    - resourceGroup: management
      step: cluster
  - name: prometheus
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Shell
    command: make -C ../observability/prometheus deploy
    dryRun:
      variables:
      - name: DRY_RUN
        value: "true"
    variables:
    - name: PROMETHEUS_OPERATOR_REGISTRY
      configRef: mgmt.prometheus.prometheusOperator.image.registry
    - name: PROMETHEUS_OPERATOR_REPOSITORY
      configRef: mgmt.prometheus.prometheusOperator.image.repository
    - name: PROMETHEUS_OPERATOR_DIGEST
      configRef: mgmt.prometheus.prometheusOperator.image.digest
    - name: PROMETHEUS_CONFIG_RELOADER_REGISTRY
      configRef: mgmt.prometheus.prometheusConfigReloader.image.registry
    - name: PROMETHEUS_CONFIG_RELOADER_REPOSITORY
      configRef: mgmt.prometheus.prometheusConfigReloader.image.repository
    - name: PROMETHEUS_CONFIG_RELOADER_DIGEST
      configRef: mgmt.prometheus.prometheusConfigReloader.image.digest
    - name: PROMETHEUS_SPEC_REGISTRY
      configRef: mgmt.prometheus.prometheusSpec.image.registry
    - name: PROMETHEUS_SPEC_REPOSITORY
      configRef: mgmt.prometheus.prometheusSpec.image.repository
    - name: PROMETHEUS_SPEC_DIGEST
      configRef: mgmt.prometheus.prometheusSpec.image.digest
    - name: PROMETHEUS_SPEC_REPLICAS
      configRef: mgmt.prometheus.prometheusSpec.replicas
    - name: PROMETHEUS_SPEC_SHARDS
      configRef: mgmt.prometheus.prometheusSpec.shards
    - name: PROMETHEUS_SPEC_VERSION
      configRef: mgmt.prometheus.prometheusSpec.version
    - name: PROMETHEUS_NAMESPACE_LABEL
      configRef: mgmt.prometheus.namespaceLabel
    - name: RESOURCE_GROUP
      configRef: mgmt.rg
    - name: CLUSTER_NAME
      configRef: mgmt.aks.name
    - name: CS_ENVIRONMENT
      configRef: clustersService.environment
    - name: DCR_REMOTE_WRITE_URL
      input:
        resourceGroup: management
        step: cluster-output
        name: dcrRemoteWriteUrl
    - name: HCP_DCR_REMOTE_WRITE_URL
      input:
        resourceGroup: management
        step: cluster-output
        name: hcpDcrRemoteWriteUrl
    - name: PROMETHEUS_UAMI_CLIENT_ID
      input:
        resourceGroup: management
        step: cluster-output
        name: prometheusUAMIClientId
    dependsOn:
    - resourceGroup: management
      step: cluster
    shellIdentity:
      input:
        resourceGroup: global
        step: output
        name: globalMSIId
  - name: acrpull
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Helm
    releaseName: acrpull
    releaseNamespace: acrpull
    chartDir: ./../acrpull/deploy
    valuesFile: ./../acrpull/deploy/values.yaml
    dependsOn:
    - resourceGroup: management
      step: prometheus
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
  - name: storageclass
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Helm
    releaseName: 'default-sc'
    releaseNamespace: 'default-sc'
    chartDir: ../mgmt-fixes/deploy/default-sc
    valuesFile: ../mgmt-fixes/default-sc.values.yaml
    dependsOn:
    - resourceGroup: management
      step: cluster
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
  - name: mitigations
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Helm
    releaseName: 'mitigations'
    releaseNamespace: 'aro-hcp-mitigations'
    chartDir: ../mgmt-fixes/deploy/mitigations
    valuesFile: ../mgmt-fixes/mitigations.values.yaml
    dependsOn:
    - resourceGroup: management
      step: cluster
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
  - name: kubelet-ds
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Helm
    releaseName: 'mgmt-fixes'
    releaseNamespace: 'kubelet-ds'
    chartDir: ../mgmt-fixes/deploy/kubelet-ds
    valuesFile: ../mgmt-fixes/kubelet-ds.values.yaml
    dependsOn:
    - resourceGroup: management
      step: cluster
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
  - name: arobit-output
    action: ARM
    template: templates/arobit-lookup.bicep
    parameters: configurations/arobit-lookup.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
    dependsOn:
    - resourceGroup: management
      step: cluster
  - name: arobit
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Helm
    releaseName: 'arobit'
    releaseNamespace: 'arobit'
    chartDir: ../observability/arobit/deploy
    valuesFile: ../observability/arobit/values-mgmt.yaml
    dependsOn:
    - resourceGroup: management
      step: prometheus
    inputVariables:
      tenantId:
        resourceGroup: management
        step: arobit-output
        name: tenantId
      msiClientId:
        resourceGroup: management
        step: arobit-output
        name: msiClientId
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
  - name: kube-events
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Helm
    releaseName: kube-events
    releaseNamespace: monitoring
    chartDir: ./../observability/kube-events/deploy
    valuesFile: ./../observability/kube-events/values.yaml
    dependsOn:
    - resourceGroup: management
      step: cluster
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
