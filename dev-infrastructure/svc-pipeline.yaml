$schema: "pipeline.schema.v1"

# This pipelines installes the infrastructure for the ARO HCP SVC cluster
#
# - create the SVC Key Vault and sets up the OneCert issuer
# - create the AKS SVC cluster
# - create MIs and CosmosDB and Azure permissions for the RP
# - create MIs, Postgres DB and OIDC storage and Azure permission for Cluster Service
# - create MIs, Postgres DB and Azure permissions for the Maestro Server
# - configures and lifecycles Istio on the SVC cluster

serviceGroup: Microsoft.Azure.ARO.HCP.Service.Infra
rolloutName: Service Cluster Rollout
resourceGroups:
# Query parameters from global deployment, e.g. ACR resource IDs
- name: {{ .global.rg }}
  subscription: {{ .global.subscription }}
  steps:
  - name: global-output
    action: ARM
    template: templates/output-global.bicep
    parameters: configurations/output-global.tmpl.bicepparam
    deploymentLevel: ResourceGroup
# Query parameters from regional deployment, e.g. Azure Monitor workspace ID
- name: {{ .regionRG }}
  subscription: {{ .svc.subscription }}
  steps:
  - name: region-output
    action: ARM
    template: templates/output-region.bicep
    parameters: configurations/output-region.tmpl.bicepparam
    deploymentLevel: ResourceGroup
- name: {{ .svc.rg }}
  subscription: {{ .svc.subscription }}
  steps:
  # Create SVC KV
  - name: svc-infra
    action: ARM
    template: templates/svc-infra.bicep
    parameters: configurations/svc-infra.tmpl.bicepparam
    deploymentLevel: ResourceGroup
  # Configure certificate issuers for the SVC KV
  - name: svc-kv-issuer
    action: SetCertificateIssuer
    dependsOn:
      - svc-infra
    vaultBaseUrl:
      input:
        name: svcKeyVaultUrl
        step: svc-infra
    provider:
      name: provider
      value: OneCertV2-PrivateCA
  # Deploy the SVC cluster and service infrastructure
  - name: svc
    action: ARM
    template: templates/svc-cluster.bicep
    parameters: configurations/svc-cluster.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    variables:
    - name: ocpAcrResourceId
      input:
        step: global-output
        name: ocpAcrResourceId
    - name: svcAcrResourceId
      input:
        step: global-output
        name: svcAcrResourceId
    - name: azureMonitoringWorkspaceId
      input:
        step: region-output
        name: azureMonitoringWorkspaceId
    dependsOn:
    #- svc-kv-issuer
    - svc-infra
    - global-output
    - region-output
# Now that we have the SVC cluster, we can configure istio.
- name: {{ .svc.rg }}
  subscription: {{ .svc.subscription }}
  aksCluster: {{ .aksName }}
  steps:
  # - update workload to use istio on version svc.istio.targetVersion
  - name: istio
    action: Shell
    command: scripts/istio.sh
    variables:
    - name: TARGET_VERSION
      configRef: svc.istio.targetVersion
    - name: ISTIOCTL_VERSION
      configRef: svc.istio.istioctlVersion
    - name: ISTIO_INGRESS_GATEWAY_IP_ADDRESS_NAME
      configRef: svc.istio.ingressGatewayIPAddressName
    - name: TAG
      configRef: svc.istio.tag
    - name: SVC_RESOURCEGROUP
      configRef: svc.rg
    dependsOn:
    - svc
