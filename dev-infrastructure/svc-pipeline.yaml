$schema: "pipeline.schema.v1"
serviceGroup: Microsoft.Azure.ARO.HCP.Service.Infra
rolloutName: Service Cluster Rollout
resourceGroups:
- name: {{ .svc.rg }}
  subscription: {{ .svc.subscription }}
  aksCluster: {{ .aksName }}
  steps:
  # Create SVC KV
  - name: svc-infra
    action: ARM
    template: templates/svc-infra.bicep
    parameters: configurations/svc-infra.tmpl.bicepparam
    deploymentLevel: ResourceGroup
  # Configure certificate issuers for the SVC KV
  - name: svc-oncert-private-kv-issuer
    action: SetCertificateIssuer
    dependsOn:
      - svc-infra
    vaultBaseUrl:
      input:
        name: svcKeyVaultUrl
        step: svc-infra
    provider:
      name: provider
      value: OneCertV2-PrivateCA
  - name: svc-oncert-public-kv-issuer
    action: SetCertificateIssuer
    dependsOn:
      - svc-infra
    vaultBaseUrl:
      input:
        name: svcKeyVaultUrl
        step: svc-infra
    provider:
      name: provider
      value: OneCertV2-PublicCA
  - name: svc
    action: ARM
    template: templates/svc-cluster.bicep
    parameters: configurations/svc-cluster.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    dependsOn:
    - svc-oncert-private-kv-issuer
    - svc-oncert-public-kv-issuer
  - name: istio
    action: Shell
    command: scripts/istio.sh
    variables:
    - name: TARGET_VERSION
      configRef: svc.istio.targetVersion
    - name: ISTIOCTL_VERSION
      configRef: svc.istio.istioctlVersion
    - name: ISTIO_INGRESS_GATEWAY_IP_ADDRESS_NAME
      configRef: svc.istio.ingressGatewayIPAddressName
    - name: TAG
      configRef: svc.istio.tag
    - name: SVC_RESOURCEGROUP
      configRef: svc.rg
    dependsOn:
    - svc
  - name: acrpull
    action: Shell
    command: make -C ../acrpull deploy
    dryRun:
      variables:
        - name: DRY_RUN
          value: "true"
    variables:
      - name: ACRPULL_DIGEST
        configRef: acrPullImageDigest
    dependsOn:
    - svc
