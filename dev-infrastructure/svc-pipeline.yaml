#
# Purpose: Manage service cluster and supporting infra for its services
# Managed Resources:
# * AKS SVC cluster
# * SVC Key Vault with OneCert registration
# * MIs, CosmosDB and RBAC for the RP
# * MIs, Postgres DB, OIDC storage and RBAC for Cluster Service
# * MIs, Postgres DB, certificates and RBAC for the Maestro Server
# * MIs and RBAC for ACRPull
# * metrics collection
# Managed Processes:
# * Manage ACRPull
# * Configure and upgrade Istio
#
$schema: "pipeline.schema.v1"
serviceGroup: Microsoft.Azure.ARO.HCP.Service.Infra
rolloutName: Service Cluster Rollout
resourceGroups:
# Query parameters from global deployment, e.g. ACR resource IDs
- name: '{{ .svc.rg }}'
  subscription: '{{ .svc.subscription.key }}'
  steps:
  - name: arobit
    aksCluster: '{{ .svc.aks.name }}'
    action: Shell
    command: make -C ../arobit deploy
    dryRun:
      variables:
      - name: DRY_RUN
        value: "true"
    variables:
    - name: AROBIT_FORWARDER_DIGEST
      configRef: arobit.forwarder.image.digest
    - name: AROBIT_FORWARDER_REPOSITORY
      configRef: arobit.forwarder.image.repository
    - name: AROBIT_FORWARDER_REGISTRY
      configRef: arobit.forwarder.image.registry
    - name: AROBIT_MDSD_DIGEST
      configRef: arobit.mdsd.image.digest
    - name: AROBIT_MDSD_REPOSITORY
      configRef: arobit.mdsd.image.repository
    - name: AROBIT_MDSD_REGISTRY
      configRef: arobit.mdsd.image.registry
    - name: AROBIT_MDSD_ENABLED
      configRef: arobit.mdsd.enabled
    - name: AROBIT_MDSD_GENEVA_ACCOUNT_NAME
      configRef: geneva.logs.rp.accountName
    - name: AROBIT_MDSD_GENEVA_SAN
      configRef: geneva.logs.rp.san
    - name: AROBIT_MDSD_GENEVA_ENVIRONMENT
      configRef: geneva.logs.environment
    - name: AROBIT_MDSD_GENEVA_NAMESPACE
      configRef: geneva.logs.rp.namespace
    - name: AROBIT_MDSD_GENEVA_REGION
      configRef: region
    - name: AROBIT_CLUSTER_TYPE
      value: svc
    - name: AROBIT_SECRET_PROVIDER_KEY_VAULT
      configRef: serviceKeyVault.name
    - name: AROBIT_SECRET_PROVIDER_RP_SECRET
      configRef: geneva.logs.rp.secretName
    # dependsOn:
    # - svc
    # - global-output
    shellIdentity:
      input:
        step: global-output
        name: globalMSIId
