$schema: "pipeline.schema.v1"
serviceGroup: Microsoft.Azure.ARO.HCP.Management.Infra.Solo
rolloutName: Management Cluster Rollout
resourceGroups:
- name: global
  resourceGroup: '{{ .global.rg }}'
  subscription: '{{ .global.subscription.key }}'
  steps:
  - name: output
    action: ARM
    template: templates/output-global.bicep
    parameters: configurations/output-global.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
- name: regional
  resourceGroup: '{{ .regionRG }}'
  subscription: '{{ .svc.subscription.key }}'
  steps:
  - name: output
    action: ARM
    template: templates/output-region.bicep
    parameters: configurations/output-region.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
    variables:
    - name: cxParentZoneResourceId
      input:
        resourceGroup: global
        step: output
        name: cxParentZoneResourceId
- name: management
  resourceGroup: '{{ .mgmt.rg }}'
  subscription: '{{ .mgmt.subscription.key }}'
  steps:
  - name: infra
    action: ARM
    template: templates/mgmt-infra.bicep
    parameters: configurations/mgmt-infra.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    variables:
    - name: clusterServiceMIResourceId
      # we don't need to grant KV permissions to CS as there is no CS in the MC solo deployment
      value: "-"
    - name: logAnalyticsWorkspaceId
      input:
        resourceGroup: regional
        step: output
        name: logAnalyticsWorkspaceId
  # Build the MC
  - name: cluster
    action: ARM
    template: templates/mgmt-cluster.bicep
    parameters: configurations/mgmt-cluster.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    variables:
    - name: ocpAcrResourceId
      input:
        resourceGroup: global
        step: output
        name: ocpAcrResourceId
    - name: svcAcrResourceId
      input:
        resourceGroup: global
        step: output
        name: svcAcrResourceId
    - name: azureMonitoringWorkspaceId
      input:
        resourceGroup: regional
        step: output
        name: azureMonitoringWorkspaceId
    - name: maestroEventGridNamespaceId
      input:
        resourceGroup: regional
        step: output
        name: maestroEventGridNamespaceId
    - name: logAnalyticsWorkspaceId
      input:
        resourceGroup: regional
        step: output
        name: logAnalyticsWorkspaceId
    dependsOn:
    - resourceGroup: management
      step: infra
  # Install ACRpull
  - name: acrpull
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Helm
    releaseName: acrpull
    releaseNamespace: acrpull
    chartDir: ./../acrpull/deploy
    valuesFile: ./../acrpull/deploy/values.yaml
    dependsOn:
    - resourceGroup: management
      step: cluster
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
  # Install cluster patches
  - name: fixes
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Shell
    command: make -C ../mgmt-fixes deploy
    dryRun:
      variables:
      - name: DRY_RUN
        value: "true"
    variables:
    - name: APPLY_KUBELET_FIXES
      configRef: mgmt.applyKubeletFixes
    dependsOn:
    - resourceGroup: management
      step: cluster
