#
# Purpose: Manage regional resources for ARO HCP shared by SC and MC
# Managed Resources:
# * regional SVC and CX DNS zones and delegates them to the global ones
# * Eventgrid Namespaces MQTT for Maestro
# * regional replication for the OCP and SVC ACRs
# * regional Azure Monitor Workspace & linking into global Grafana
# * regional Azure Log Analytics Workspace
#
$schema: "pipeline.schema.v1"
serviceGroup: Microsoft.Azure.ARO.HCP.Region
rolloutName: Region Rollout
resourceGroups:
- name: '{{ .global.rg }}'
  subscription: '{{ .global.subscription.key }}'
  steps:
  # Query parameters from global deployment, e.g. DNS hzone and ACR resource IDs
  - name: global-output
    action: ARM
    template: templates/output-global.bicep
    parameters: configurations/output-global.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
  - name: ocp-acr-replication
    action: Shell
    command: scripts/manage-acr-replication.sh
    dryRun:
      variables:
      - name: DRY_RUN
        value: "true"
    variables:
    - name: ACR_NAME
      configRef: acr.ocp.name
    - name: REPLICATION_REGION
      configRef: region
    shellIdentity:
      input:
        step: global-output
        name: globalMSIId
    dependsOn:
    - global-output
  - name: svc-acr-replication
    action: Shell
    command: scripts/manage-acr-replication.sh
    variables:
    - name: ACR_NAME
      configRef: acr.svc.name
    - name: REPLICATION_REGION
      configRef: region
    dryRun:
      variables:
      - name: DRY_RUN
        value: "true"
    shellIdentity:
      input:
        step: global-output
        name: globalMSIId
    dependsOn:
    - global-output
- name: '{{ .regionRG }}'
  subscription: '{{ .svc.subscription.key }}'
  steps:
  - name: rpRegistration
    action: ProviderFeatureRegistration
    providerConfigRef: svc.subscription.providers
    identityFrom:
      step: global-output
      name: globalMSIId
    dependsOn:
    - global-output
    - svc-acr-replication
    - ocp-acr-replication
  - name: region
    action: ARM
    template: templates/region.bicep
    parameters: configurations/region.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    variables:
    - name: globalMSIId
      input:
        step: global-output
        name: globalMSIId
    - name: cxParentZoneResourceId
      input:
        step: global-output
        name: cxParentZoneResourceId
    - name: svcParentZoneResourceId
      input:
        step: global-output
        name: svcParentZoneResourceId
    - name: grafanaResourceId
      input:
        step: global-output
        name: grafanaResourceId
    dependsOn:
    - global-output
    - rpRegistration
  - name: region-output
    action: ARM
    template: templates/output-region.bicep
    parameters: configurations/output-region.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
    dependsOn:
    - region
- name: '{{ .global.rg }}'
  subscription: '{{ .global.subscription.key }}'
  steps:
  - name: add-svc-grafana-datasource
    action: Shell
    command: scripts/add-grafana-datasource.sh
    variables:
    - name: GRAFANA_RESOURCE_ID
      input:
        step: global-output
        name: grafanaResourceId
    - name: PROM_QUERY_URL
      input:
        step: region-output
        name: monitorPrometheusQueryEndpoint
    - name: MONITOR_ID
      input:
        step: region-output
        name: azureMonitoringWorkspaceId
    dependsOn:
    - region-output
    - global-output
    shellIdentity:
      input:
        step: global-output
        name: globalMSIId
- name: '{{ .global.rg }}'
  subscription: '{{ .global.subscription.key }}'
  steps:
  - name: add-hcp-grafana-datasource
    action: Shell
    command: scripts/add-grafana-datasource.sh
    variables:
    - name: GRAFANA_RESOURCE_ID
      input:
        step: global-output
        name: grafanaResourceId
    - name: PROM_QUERY_URL
      input:
        step: region-output
        name: hcpMonitorPrometheusQueryEndpoint
    - name: MONITOR_ID
      input:
        step: region-output
        name: hcpAzureMonitoringWorkspaceId
    dependsOn:
    - add-svc-grafana-datasource
    - global-output
    shellIdentity:
      input:
        step: global-output
        name: globalMSIId
