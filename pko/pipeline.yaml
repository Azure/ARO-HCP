$schema: "pipeline.schema.v1"
serviceGroup: Microsoft.Azure.ARO.HCP.PKO
rolloutName: RP PKO Rollout
resourceGroups:
- name: global
  resourceGroup: '{{ .global.rg }}'
  subscription: '{{ .global.subscription.key }}'
  steps:
  - name: output
    action: ARM
    template: templates/output-global.bicep
    parameters: ./../dev-infrastructure/configurations/output-global.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
  - name: mirror-image-package
    action: ImageMirror
    targetACR:
      configRef: 'acr.svc.name'
    sourceRegistry:
      configRef: pko.imagePackage.registry
    repository:
      configRef: pko.imagePackage.repository
    digest:
      configRef: pko.imagePackage.digest
    pullSecretKeyVault:
      configRef: global.keyVault.name
    pullSecretName:
      configRef: imageSync.ondemandSync.pullSecretName
    shellIdentity:
      input:
        resourceGroup: global
        step: output
        name: globalMSIId
  - name: mirror-image-manager
    action: ImageMirror
    targetACR:
      configRef: 'acr.svc.name'
    sourceRegistry:
      configRef: pko.imageManager.registry
    repository:
      configRef: pko.imageManager.repository
    digest:
      configRef: pko.imageManager.digest
    pullSecretKeyVault:
      configRef: global.keyVault.name
    pullSecretName:
      configRef: imageSync.ondemandSync.pullSecretName
    shellIdentity:
      input:
        resourceGroup: global
        step: output
        name: globalMSIId
  - name: mirror-image-remotephase-manager
    action: ImageMirror
    targetACR:
      configRef: 'acr.svc.name'
    sourceRegistry:
      configRef: pko.remotePhaseManager.registry
    repository:
      configRef: pko.remotePhaseManager.repository
    digest:
      configRef: pko.remotePhaseManager.digest
    pullSecretKeyVault:
      configRef: global.keyVault.name
    pullSecretName:
      configRef: imageSync.ondemandSync.pullSecretName
    shellIdentity:
      input:
        resourceGroup: global
        step: output
        name: globalMSIId
- name: management
  resourceGroup: '{{ .mgmt.rg }}'
  subscription: '{{ .mgmt.subscription.key }}'
  steps:
  - name: output
    action: ARM
    template: ./../dev-infrastructure/templates/image-puller-lookup.bicep
    parameters: ./../dev-infrastructure/configurations/image-puller-lookup.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
  - name: deploy
    aksCluster: '{{ .mgmt.aks.name }}'
    action: Helm
    releaseName: 'package-operator'
    releaseNamespace: 'package-operator-system'
    chartDir: ./deploy
    valuesFile: ./values.yaml
    inputVariables:
      imagePullerMsiClientId:
        resourceGroup: management
        step: output
        name: imagePullerMsiClientId
      imagePullerMsiTenantId:
        resourceGroup: management
        step: output
        name: imagePullerMsiTenantId
    dependsOn:
    - resourceGroup: global
      step: mirror-image-package
    - resourceGroup: global
      step: mirror-image-manager
    - resourceGroup: global
      step: mirror-image-remotephase-manager
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
