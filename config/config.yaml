$schema: config.schema.json
#
#   A B O U T   N A M I N G
#
# For Azure resource names that need to be unique within a cloud, use {{ .ctx }} variables to ensure uniqueness, e.g.
# - for global, regional and SC naming use {{ .ctx.regionShort }} or {{ .ctx.region }}
# - for MGMT naming additionally use {{ .ctx.stamp }}
#
# We have different requirements for naming uniqueness for Azure resources
#
# - [globally-unique] - a resource needs to be unique within the Azure cloud.
#   This is a technical requirement of Azure for certain resource types
# - [env-unique] - a resource needs to be unique within an ARO HCP environment,
#   so across all regions of ARO HCP in the same environment.
#   An environment unique names does not need to be unique within the Azure cloud
#
# To implement names, we leverage static strings combined with the {{ .ctx }} variables, e.g.
# - {{ .ctx.environment }} length: 1-4 / starts with a character, may end with a digit
# - {{ .ctx.regionShort }} length: 2-4 / starts with a character, may end with a digit
# - {{ .ctx.region }} very long, up to 20 characters / starts with a character, may end with a digit
# - {{ .ctx.stamp }} used for uniqueness for MGMT stamps within a region / digits only
defaults:
  #
  # All defaults in this section need to be environment and region agnostic.
  #
  region: "{{ .ctx.region }}"
  regionRG: "{{ .ctx.region }}-shared-resources"
  cloud: "{{ .ev2.cloudName }}"
  keyVaultDNSSuffix: "{{ .ev2.keyVault.domainNameSuffix }}"
  administration:
    readerGroupId: ""
    releaseManagementGroupId: ""
  # Global scope settings
  global:
    safeDnsIntAppObjectId: "" # intentionally left empty
    subscription:
      key: hcp-global
      displayName: "Azure Red Hat OpenShift HCP - {{ .ctx.environment }} - Global"
      providers:
        'Microsoft.Dashboard':
          poll: true
        'Microsoft.Network':
          poll: true
          features:
          - name: AllowBringYourOwnPublicIpAddress
            poll: true
        'Microsoft.Compute':
          poll: true
          features:
          - name: EncryptionAtHost
            poll: true
        'Microsoft.ContainerService':
          poll: true
          features:
          - name: IstioNativeSidecarModePreview
            poll: true
    rg: global-shared-resources
    billing:
      rg: "placeholder"
      digest: "placeholder"
    globalMSIName: global-ev2-identity
    nsp:
      name: nsp-global
      accessMode: 'Learning'
    keyVault:
      name: 'arohcp{{ .ctx.environment }}-global' # [globally-unique]
      private: false
      softDelete: true
      tagKey: aroHCPPurpose
      tagValue: global
  # ACR
  acr:
    svc:
      name: 'arohcpsvc{{ .ctx.environment }}' # [globally-unique]
      zoneRedundantMode: Enabled
      untaggedImagesRetention:
        enabled: false
        days: 365
    ocp:
      name: 'arohcpocp{{ .ctx.environment }}' # [globally-unique]
      zoneRedundantMode: Enabled
      untaggedImagesRetention:
        enabled: true
        days: 90
  # ACR Pull
  acrPull:
    image:
      registry: mcr.microsoft.com
      repository: aks/msi-acrpull
  # Arobit
  arobit:
    forwarder:
      image:
        registry: mcr.microsoft.com
        repository: oss/v2/fluent/fluent-bit
        digest: sha256:a4345e2041f03ef869dafdf7e21f985a35bdb084363d1b6330c7e37361f8d0ef
    mdsd:
      enabled: true
      image:
        registry: linuxgeneva-microsoft.azurecr.io
        repository: genevamdsd
        digest: sha256:c63187bb16b7cf83940b3223643d4582aa4fe3d38940b5e34d12672f443914bc
  # Kube Events
  kubeEvents:
    enabled: true
    image:
      registry: ""
      repository: ""
      digest: ""
  # Secret Sync Controller
  secretSyncController:
    image:
      registry: registry.k8s.io
      repository: secrets-store-sync/controller
  # Backplane API
  backplaneAPI:
    image:
      registry: quay.io
      repository: app-sre/backplane-api
  tenantId: ""
  ev2:
    assistedId:
      certificate:
        keyVault: "empty-sentinel" # we don't need one in public cloud, but we need a value to validate the field
        name: ""
      applicationId: ""
  geneva:
    principalId: ""
    resourceContributor: ""
    metrics:
      cluster:
        account: AzureRedHatOpenShiftCluster
      rp:
        account: AzureRedHatOpenShiftRP
    logs:
      administrators:
        alias:
        - AME\WEINONGW
        securityGroup: AME\TM-AzureRedHatOpenShift-Leads
      adminCertificateDomain: "geneva.keyvault.aro-hcp-global.azure.com"
      adminCertName: "geneva-logs-admin"
      manageCertificates: true
      certificateIssuer: Self
      certificateDomain: "geneva.keyvault.aro-hcp.azure.com"
      typeName: ""
      environment: "Test"
      cluster:
        secretName: clusterlogs
        accountName: placeholder
        namespace: ""
        san: ""
        configVersion: "1"
      rp:
        secretName: rplogs
        accountName: placeholder
        namespace: ""
        san: ""
        configVersion: "1"
    actions:
      serviceTag: GenevaActions
      keyVault:
        name: "arohcp{{ .ctx.environment }}-geneva-kv" # [globally-unique]
        private: false
        softDelete: true
        tagKey: aroHCPPurpose
        tagValue: geneva-actions
      certificate:
        name: genevaAction
        issuer: OneCertV2-PrivateCA
        manage: true
      allowedAcisExtensions: "AzureRedHatHypershiftExtension"
      genevaActionsPrincipalId: ""
      applicationName: "arohcp-ga-{{ .ctx.environment }}" # [unique across clouds - todo incorporate cloud name]
      applicationOwnerId: ""
  kusto:
    enabled: false
    resourceGroup: ""
    cluster: ""
    ingestionUrl: ""
    environmentName: {{ .ctx.environment }}
  # Hypershift
  hypershift:
    image:
      registry: quay.io
      repository: acm-d/rhtap-hypershift-operator
    namespace: hypershift
    additionalInstallArg: '--enable-cpo-overrides'
  # Log settings
  logs:
    mdsd:
      namespace: arobit
      msiName: logs-mdsd
      serviceAccountName: arobit-forwarder
      cert:
        name: ""
        type: ""
        issuer: ""
      subscriptions: []
    loganalytics:
      enable: false
  # Monitoring
  monitoring:
    grafanaName: "arohcp-{{ .ctx.environment }}"
    # Format:
    #   Multiline string using '>-' YAML block scalar
    #   One item per line, formatted as: UUID/PrincipalType/RoleName
    # Our yaml formatter does not allow >- when there is no value, so remember
    # to chage "" to >- when you add a value.
    grafanaRoles: ""
    svcWorkspaceName: 'services-{{ .ctx.region }}'
    hcpWorkspaceName: 'hcps-{{ .ctx.region }}'
    icm:
      manageConnection: true
      connectionName: ""
      connectionId: ""
      environment: ""
      sre:
        actionGroupName: ""
        actionGroupShortName: ""
        routingId: ""
        automitigationEnabled: ""
      sl:
        actionGroupName: ""
        actionGroupShortName: ""
        routingId: ""
        automitigationEnabled: ""
      msft:
        actionGroupName: ""
        actionGroupShortName: ""
        routingId: ""
        automitigationEnabled: ""
  # Route Monitor Operator
  routeMonitorOperator:
    # Bundle version is not used in runtime, it's used to generate
    # the Helm chart for the route-monitor-operator
    # WARNING: Keep this in sync with the image digests
    bundleVersion: 0.1.848-g208c6eb
    # Image refs
    operatorImage:
      registry: quay.io
      repository: app-sre/route-monitor-operator
      digest: sha256:006b38e6df9609688d12e776b973b27a53e0c931a83e7e8f9d9212a5e0730bd7
    blackboxExporterImage:
      registry: quay.io
      repository: prometheus/blackbox-exporter
      digest: sha256:b04a9fef4fa086a02fc7fcd8dcdbc4b7b35cc30cdee860fdc6a19dd8b208d63e
  # SVC cluster specifics
  svc:
    subscription:
      usePlannedQuota: true
      key: "hcp-{{ .ctx.environment }}-svc-{{ .ctx.region }}"
      displayName: "Azure Red Hat OpenShift HCP - {{ .ev2.regionFriendlyName }} - SVC"
      providers:
        'Microsoft.Insights':
          poll: true
        'Microsoft.Dashboard':
          poll: true
        'Microsoft.Network':
          poll: true
          features:
          - name: AllowBringYourOwnPublicIpAddress
            poll: true
        'Microsoft.Compute':
          poll: true
          features:
          - name: EncryptionAtHost
            poll: true
        'Microsoft.ContainerService':
          poll: true
          features:
          - name: IstioNativeSidecarModePreview
            poll: true
        'Microsoft.DbForPostgreSQL':
          poll: true
    rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.region }}-svc"
    nsp:
      name: nsp-{{ .ctx.regionShort }}-svc
    istio:
      istioctlVersion: "1.24.1"
      tag: "prod-stable"
      ingressGatewayIPAddressName: "aro-hcp-istio-ingress"
      ingressGatewayIPAddressIPTags: ""
    aks:
      name: "{{ .ctx.environment }}-{{ .ctx.region }}-svc-1" # [env-unique]
      vnetAddressPrefix: "10.128.0.0/14"
      subnetPrefix: "10.128.8.0/21"
      podSubnetPrefix: "10.128.64.0/18"
      kubernetesVersion: 1.32.5
      networkDataplane: "cilium"
      networkPolicy: "cilium"
      systemAgentPool:
        minCount: 1
        maxCount: 3
        vmSize: 'Standard_D2s_v3'
        osDiskSizeGB: 32
        poolCount: 3
        zones: ""
        zoneRedundantMode: "Auto"
      userAgentPool:
        minCount: 1
        maxCount: 3
        vmSize: 'Standard_D2s_v3'
        osDiskSizeGB: 32
        poolCount: 3
        zones: ""
        zoneRedundantMode: "Auto"
      infraAgentPool:
        minCount: 1
        maxCount: 3
        vmSize: 'Standard_D2s_v3'
        osDiskSizeGB: 32
        poolCount: 2
        zones: ""
        zoneRedundantMode: "Auto"
      etcd:
        name: "ah-{{ .ctx.environment }}-se-{{ .ctx.regionShort }}-1" # [globally-unique]
        softDelete: true
        private: true
        tagKey: aroHCPPurpose
        tagValue: etcd-encryption
      clusterOutboundIPAddressIPTags: ""
    prometheus:
      namespace: prometheus
      namespaceLabel: ""
      prometheusOperator:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus-operator
          digest: sha256:0e4dc52261d6daceb57131f92e12bdbd8b98f77fc2aea79ad9d4735de35d4124 # v0.86.1-1
        version: ""
      prometheusSpec:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus
          digest: sha256:706699f6b1e5469b4ff298baeb6ac39e430a47fbd23fce3a6138d15d16e72c0d # v3.7.1-1
        version: ""
        replicas: 2
        shards: 2
      prometheusConfigReloader:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus-config-reloader
          digest: sha256:32c4a81063d037f943f84dc54ac4391f17f6bd0399fbecee918b2d1746a10d3b # v0.86.1-1
  # MGMT cluster specifics
  mgmt:
    subscription:
      usePlannedQuota: true
      key: "hcp-{{ .ctx.environment }}-mgmt-{{ .ctx.region }}-{{ .ctx.stamp }}"
      displayName: "Azure Red Hat OpenShift HCP - {{ .ev2.regionFriendlyName }} - MGMT - {{ .ctx.stamp }}"
      providers:
        'Microsoft.Insights':
          poll: true
        'Microsoft.Storage':
          poll: true
        'Microsoft.Network':
          poll: true
          features:
          - name: AllowBringYourOwnPublicIpAddress
            poll: true
        'Microsoft.Compute':
          poll: true
          features:
          - name: EncryptionAtHost
            poll: true
        'Microsoft.ContainerService':
          poll: true
          features:
          - name: IstioNativeSidecarModePreview
            poll: true
    rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.region }}-mgmt-{{ .ctx.stamp }}"
    applyKubeletFixes: true
    nsp:
      name: nsp-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}
    aks:
      name: "{{ .ctx.environment }}-{{ .ctx.region }}-mgmt-{{ .ctx.stamp }}" # [env-unique]
      vnetAddressPrefix: "10.128.0.0/14"
      subnetPrefix: "10.128.8.0/21"
      podSubnetPrefix: "10.128.64.0/18"
      kubernetesVersion: 1.32.5
      networkDataplane: "azure"
      networkPolicy: "azure"
      etcd:
        name: "ah-{{ .ctx.environment }}-me-{{ .ctx.regionShort }}-{{ .ctx.stamp }}" # [globally-unique]
        softDelete: true
        private: true
        tagKey: aroHCPPurpose
        tagValue: etcd-encryption
      systemAgentPool:
        vmSize: 'Standard_E8ds_v6'
        osDiskSizeGB: 128
        minCount: 1
        poolCount: 3
        zones: ""
        zoneRedundantMode: "Auto"
      userAgentPool:
        vmSize: 'Standard_E32ds_v6'
        osDiskSizeGB: 512
        minCount: 1
        poolCount: 3
        zones: ""
        zoneRedundantMode: "Auto"
      infraAgentPool:
        minCount: 1
        maxCount: 3
        vmSize: 'Standard_D2ds_v6'
        osDiskSizeGB: 32
        poolCount: 2
        zones: ""
        zoneRedundantMode: "Auto"
      clusterOutboundIPAddressIPTags: ""
      enableSwiftV2Vnet: true
      enableSwiftV2Nodepools: true
    prometheus:
      namespace: prometheus
      namespaceLabel: network.openshift.io/policy-group=monitoring
      prometheusOperator:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus-operator
        version: ""
      prometheusSpec:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus
        version: "v2.55.1-4"
        replicas: 2
        shards: 2
      prometheusConfigReloader:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus-config-reloader
          digest: sha256:32c4a81063d037f943f84dc54ac4391f17f6bd0399fbecee918b2d1746a10d3b # v0.86.1-1
  # Backend
  backend:
    image:
      registry: arohcpsvcdev.azurecr.io
      repository: arohcpbackend
    tracing:
      address: ""
      exporter: ""
    managedIdentityName: backend
    k8s:
      replicas: 2
      namespace: aro-hcp
      serviceAccountName: backend
  # Frontend
  frontend:
    audit:
      connectSocket: false
    image:
      registry: arohcpsvcdev.azurecr.io
      repository: arohcpfrontend
    tracing:
      address: ""
      exporter: ""
    managedIdentityName: frontend
    k8s:
      replicas: 2
      namespace: aro-hcp
      serviceAccountName: frontend
    cosmosDB:
      deploy: true
      disableLocalAuth: true
      name: "arohcp{{ .ctx.environment }}-rp-{{ .ctx.regionShort }}" # [globally-unique]
      private: true
      zoneRedundantMode: 'Auto'
    cert:
      name: frontend-cert-{{ .ctx.environment }}-{{ .ctx.regionShort }}
  # Billing
  billing:
    rg: "placeholder"
    aub:
      accountName: ""
      cloudSuffix: ""
    pav2:
      cloudName: ""
    kusto:
      sku: ""
      clusterName: ""
      clusterPrincipals:
      - name: ""
        id: ""
        role: ""
        tenantId: ""
        type: ""
      dstsGroups:
      - name: ""
        description: ""
      vmUsageStaleThreshold: ""
    eventHub:
      namespace: ""
      subscriptionId: ""
      resourceGroupName: ""
    imageArtifact:
      adoProject: ""
      artifactName: ""
      buildId: 0
  # Mise
  mise:
    deploy: false
    azureAdInstance: ""
    firstPartyAppId: ""
    armInstance: ""
    armAppId: ""
    tenantId: ""
    image:
      repository: ""
      digest: ""
    tracing:
      address: ""
      exporter: ""
  # MSI RP
  msiRp:
    dataPlaneAudienceResource: https://dummy.org
  # MSI Credentials Refresher
  msiCredentialsRefresher:
    managedIdentityName: msi-credential-refresher
    firstPartyAppClientId: ""
    k8s:
      namespace: msi-credential-refresher
      serviceAccountName: msi-credential-refresher
    image:
      registry: "empty-sentinel"
      repository: "empty-sentinel"
      digest: ""
    certificate:
      name: "msi-refresher"
      manage: true
      issuer: OneCertV2-PrivateCA
      commonName: ""
      sanDnsNames: []
    earlyRefreshFrequency: "0"
    imageArtifact:
      adoProject: ""
      artifactName: ""
      buildId: 0
  # Maestro
  maestro:
    server:
      tracing:
        address: ""
        exporter: ""
      mqttClientName: 'maestro-server-{{ .ctx.regionShort }}'
      loglevel: 2
      managedIdentityName: maestro-server
      k8s:
        replicas: 3
        namespace: maestro
        serviceAccountName: maestro
    agent:
      consumerName: "hcp-underlay-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}" # [env-unique]
      loglevel: 2
      managedIdentityName: maestro-consumer
      k8s:
        replicas: 3
        namespace: maestro
        serviceAccountName: maestro
      sidecar:
        image:
          registry: mcr.microsoft.com
          repository: azurelinux/base/nginx
          digest: sha256:ceee627439ca3e6443c37601d3fbdf8e2394bee52b4287286ad279c10179f9ad
    eventGrid:
      name: "arohcp-{{ .ctx.environment }}-maestro-{{ .ctx.regionShort }}" # [globally-unique]
      maxClientSessionsPerAuthName: 6
      private: false
    postgres:
      name: "arohcp-{{ .ctx.environment }}-dbmaestro-{{ .ctx.regionShort }}" # [globally-unique]
      serverVersion: '15'
      serverStorageSizeGB: 32
      deploy: true
      private: false
      password: ''
      minTLSVersion: 'TLSV1.2'
      databaseName: maestro
      zoneRedundantMode: 'Auto'
      backupRetentionDays: 7
      geoRedundantBackup: false
      containerizedDb:
        image: ""
        pvcCapacity: ""
    restrictIstioIngress: true
    certDomain: ""
    image:
      registry: quay.io
      repository: redhat-user-workloads/maestro-rhtap-tenant/maestro/maestro
  # PKO
  pko:
    imagePackage:
      registry: quay.io
      repository: package-operator/package-operator-package
      digest: sha256:7e4f7c28650951bbbd73fb42b4780883118d6289f19a3fed4ba5831d32f5f795
    imageManager:
      registry: quay.io
      repository: package-operator/package-operator-manager
      digest: sha256:f2f24e36b097da44f4b598f930cce6c1658be3381d21d7fdf92d26b4dadd1a2f
    remotePhaseManager:
      registry: quay.io
      repository: package-operator/remote-phase-manager
      digest: sha256:f15aa252f69357fbdb2a1b5141badfe9c1f036c800dbfed9d28dc583044e4b4e
  # ACM
  acm:
    operator:
      version: "2.14.1"
      mirrorAdditionalVersions: "2.12.0,2.13.0,2.13.1,2.14.0"
      bundle:
        registry: quay.io
        repository: redhat-user-workloads/crt-redhat-acm-tenant/acm-operator-bundle-acm-214
        digest: sha256:86b5fa65651887faae2399623ff364c9ed353cd9c052ea834b3d837ee37f730d # v2.14.1-251
    mce:
      version: "2.9.1"
      mirrorAdditionalVersions: "2.8.1,2.8.2,2.9.0"
      pauseReconciliation: false
      bundle:
        registry: quay.io
        repository: redhat-user-workloads/crt-redhat-acm-tenant/mce-operator-bundle-mce-29
        digest: sha256:18c9ef1a7546469259696e22c85174d11c7205262d1ed03ee4da2121058f27ae # v2.9.1-84
  # Cluster Service
  clustersService:
    image:
      registry: quay.io
      repository: app-sre/uhc-clusters-service
    # controls how many HCPs can be placed on an MC, sadly not configurable per MC
    provisionShardClusterLimit: 100
    # batch processes
    batchProcessesDryRun: true
    batchProcesses: ""
    tracing: # NOTE: Currently only enabled for pers.
      address: ""
      exporter: ""
    environment: "arohcp{{ .ctx.environment }}"
    denyAssignments: "disabled"
    postgres:
      name: "arohcp-{{ .ctx.environment }}-dbcs-{{ .ctx.regionShort }}" # [globally-unique]
      deploy: true
      private: false
      password: ''
      minTLSVersion: 'TLSV1.2'
      serverVersion: '17'
      serverStorageSizeGB: 128
      databaseName: clusters-service
      zoneRedundantMode: 'Auto'
      backupRetentionDays: 7
      geoRedundantBackup: false
      containerizedDb:
        image: ""
        pvcCapacity: ""
    managedIdentityName: clusters-service
    k8s:
      replicas: 3
      namespace: clusters-service
      serviceAccountName: clusters-service
      deploymentStrategy:
        rollingUpdate:
          maxUnavailable: 0
          maxSurge: 1
    azureRuntimeConfig:
      tlsCertificatesIssuer: OneCertV2-PublicCA
    # OCP Versions configuration
    ocpVersions:
      defaultVersion:
        version: 4.19.7
      channelGroups:
        stable:
          minVersion: 4.19.0
          maxVersion: 4.19.8
  # Image Sync
  imageSync:
    environmentName: aro-hcp-image-sync
    outboundServiceTags: ""
    ondemandSync:
      pullSecretName: component-sync-pull-secret
    ocMirror:
      enabled: true
      jobNamePrefix: '{{ .ctx.environment }}-'
      image:
        registry: arohcpsvcdev.azurecr.io
        repository: image-sync/oc-mirror
      pullSecretName: ocmirror-pull-secret
  # Automation Account
  automationDryRun: true
  # Mock Managed Identities - not relevant for most MSFT envs
  miMockClientId: ""
  miMockPrincipalId: ""
  miMockCertName: ""
  armHelperClientId: ""
  armHelperFPAPrincipalId: ""
  armHelperCertName: ""
  # OIDC
  oidc:
    storageAccount:
      name: "arohcp{{ .ctx.environment }}oidc{{ .ctx.regionShort }}" # [globally-unique]
      zoneRedundantMode: Auto
      public: false
      privateLinkLocation: "{{ .ctx.region }}"
    frontdoor:
      subdomain: oic
      name: arohcp{{ .ctx.environment }}
      sku: Premium_AzureFrontDoor
      keyVault:
        name: "ah-{{ .ctx.environment }}-afd" # [globally-unique]
        private: false
        softDelete: true
        tagKey: aroHCPPurpose
        tagValue: afd
      useManagedCertificates: true
      msiName: arohcp-afd
  # Service Key Vault
  serviceKeyVault:
    name: "arohcp{{ .ctx.environment }}-svc-{{ .ctx.regionShort }}" # [globally-unique]
    rg: "{{ .ctx.region }}-shared-resources"
    region: "{{ .ctx.region }}"
    softDelete: false
    private: false
    assignNSP: true
    tagKey: aroHCPPurpose
    tagValue: service
  # Management Cluster KV
  cxKeyVault:
    name: "ah-{{ .ctx.environment }}-cx-{{ .ctx.regionShort }}-{{ .ctx.stamp }}" # [globally-unique]
    softDelete: false
    private: false
    tagKey: aroHCPPurpose
    tagValue: cx
  msiKeyVault:
    name: "ah-{{ .ctx.environment }}-mi-{{ .ctx.regionShort }}-{{ .ctx.stamp }}" # [globally-unique]
    softDelete: false
    private: false
    tagKey: aroHCPPurpose
    tagValue: msi
  mgmtKeyVault:
    name: "ah-{{ .ctx.environment }}-mg-{{ .ctx.regionShort }}-{{ .ctx.stamp }}" # [globally-unique]
    softDelete: false
    private: false
    tagKey: aroHCPPurpose
    tagValue: mgmt
  e2e:
    prow:
      globalKeyVaultTokenSecret: "prow-token"
    regionTest:
      prowJobName: ""
      gatePromotion: false
clouds:
  dev:
    # this configuration serves as a template for for all RH DEV subscription deployments
    defaults:
      tenantId: "64dc69e4-d083-49fc-9569-ebece1dd1408"
      kusto:
        ingestionUrl: https://ingest-hcp-dev-kusto.eastus.kusto.windows.net
      kubeEvents:
        enabled: false
      automationDryRun: false
      arobit:
        mdsd:
          enabled: false
      regionRG: hcp-underlay-{{ .ctx.environment }}-{{ .ctx.regionShort }}
      global:
        rg: global
        subscription:
          key: ARO Hosted Control Planes (EA Subscription 1)
        region: westus3
        globalMSIName: global-rollout-identity
        keyVault:
          name: arohcpdev-global
      # DNS
      dns:
        baseDnsZoneRG: global
        cxParentZoneName: hcp.osadev.cloud
        svcParentZoneName: hcpsvc.osadev.cloud
        parentZoneName: osadev.cloud
        globalCertificatesDomain: hcp-global.osadev.cloud
      # 1P app
      firstPartyAppClientId: b3cb2fab-15cb-4583-ad06-f91da9bfe2d1
      firstPartyAppCertificate:
        name: firstPartyCert2
        issuer: Self
        manage: false
      # Mock Managed Identities Service Princiapl
      miMockClientId: e8723db7-9b9e-46a4-9f7d-64d75c3534f0
      miMockPrincipalId: d6b62dfa-87f5-49b3-bbcb-4a687c4faa96
      miMockCertName: msiMockCert2
      # ARM Helper
      armHelperClientId: 3331e670-0804-48e8-a086-6241671ddc93
      armHelperFPAPrincipalId: 47f69502-0065-4d9a-b19b-d403e183d2f4
      armHelperCertName: armHelperCert2
      # OIDC
      oidc:
        storageAccount:
          public: true
        frontdoor:
          name: arohcpdev
      # Maestro
      maestro:
        certDomain: selfsigned.maestro.keyvault.azure.com
        certIssuer: Self
        image:
          digest: sha256:4cd299203a02271d58b1eb03a8186293e686833c6e4f5cee3cde6adf77715e2b
      # ACR Pull
      acrPull:
        image:
          digest: sha256:d0962cbd98b90a9c16933b33afaa27d72cc58f94322c93d1745388599562c37d #v0.1.20
      # Secret Sync Controller
      secretSyncController:
        image:
          digest: sha256:31535c9687ecf49a8654bdc6baeb0ae498cf1dcf04e73cf1f99c5376f777712a #v0.0.1
        providerImage: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      # Cluster Service
      clustersService:
        environment: "arohcpdev"
        image:
          digest: sha256:7966fb31c657d9ccd6333c40d30079f8fa9ced7cf1d89fcaf784c6f4ba569d30
          repository: app-sre/aro-hcp-clusters-service
        azureOperatorsManagedIdentities:
          roleSetName: dev
        azureRuntimeConfig:
          tlsCertificatesIssuer: Self
      # Hypershift Operator
      hypershift:
        image:
          registry: quay.io
          repository: acm-d/rhtap-hypershift-operator
          digest: sha256:4d4b3048fc313232fbbad5d56c260ebcf898cc0c248df367ad73a369282c6e42 # 1.0-1761243210
      # Backplane API
      backplaneAPI:
        image:
          digest: sha256:822477832a73c7eab7fe27200994f10030f708f4a752f33ded3f8f8eaa0470f6
      # Frontend
      frontend:
        cert:
          issuer: Self
        image:
          digest: '' # if empty uses commit sha of repo
      # Backend
      backend:
        image:
          digest: '' # if empty uses commit sha of repo
      # Image Sync
      imageSync:
        ocMirror:
          image:
            digest: sha256:92dc2b18de0126caa2212f62c54023f6e8ecf12e2025c37a5f4151d0253ae14e
      # Shared SVC KV
      serviceKeyVault:
        name: 'aro-hcp-dev-svc-kv'
        rg: 'global'
        region: 'westus3'
        softDelete: true
      # MSI Credentials Refresher
      msiCredentialsRefresher:
        certificate:
          manage: false
      svc:
        subscription:
          key: ARO Hosted Control Planes (EA Subscription 1)
          certificateDomains:
          - '*.hcpsvc.osadev.cloud'
        nsp:
          accessMode: 'Learning'
        istio:
          targetVersion: "asm-1-25"
          versions: "asm-1-25"
        aks:
          etcd:
            softDelete: false
          infraAgentPool:
            poolCount: 1
          systemAgentPool:
            poolCount: 1
        prometheus:
          prometheusOperator:
            image:
              digest: sha256:0e4dc52261d6daceb57131f92e12bdbd8b98f77fc2aea79ad9d4735de35d4124 # v0.86.1-1
          prometheusSpec:
            image:
              digest: sha256:706699f6b1e5469b4ff298baeb6ac39e430a47fbd23fce3a6138d15d16e72c0d # v3.7.1-1
            shards: 1
      mgmt:
        subscription:
          key: ARO Hosted Control Planes (EA Subscription 1)
          certificateDomains:
          - '*.hcp.osadev.cloud'
          - '*.hcpsvc.osadev.cloud'
        aks:
          # MGMTM AKS nodepools - big enough for 2 HCPs
          systemAgentPool:
            vmSize: 'Standard_E8s_v3'
            maxCount: 4
            poolCount: 1
          userAgentPool:
            maxCount: 6
            vmSize: 'Standard_D4s_v3'
            osDiskSizeGB: 100
          infraAgentPool:
            vmSize: 'Standard_D2s_v3'
            poolCount: 2
          etcd:
            softDelete: false
          enableSwiftV2Vnet: false
          enableSwiftV2Nodepools: false
        nsp:
          accessMode: 'Learning'
        prometheus:
          prometheusOperator:
            image:
              digest: sha256:0e4dc52261d6daceb57131f92e12bdbd8b98f77fc2aea79ad9d4735de35d4124 # v0.86.1-1
          prometheusSpec:
            image:
              digest: sha256:706699f6b1e5469b4ff298baeb6ac39e430a47fbd23fce3a6138d15d16e72c0d # v3.7.1-1
            shards: 1
      # ACRs
      acr:
        svc:
          name: 'arohcpsvcdev' # [globally-unique]
          zoneRedundantMode: Disabled
        ocp:
          name: 'arohcpocpdev' # [globally-unique]
          zoneRedundantMode: Disabled
      # Metrics
      monitoring:
        icm:
          manageConnection: false
        grafanaName: arohcp-dev
        grafanaMajorVersion: '11'
        grafanaZoneRedundantMode: Disabled
        grafanaRoles: >-
          6b6d3adf-8476-4727-9812-20ffdef2b85c/Group/Admin
        svcWorkspaceName: 'services-{{ .ctx.regionShort }}'
        hcpWorkspaceName: 'hcps-{{ .ctx.regionShort }}'
      kvCertOfficerPrincipalId: 'c9b1819d-bb29-4ac2-9abe-39e4fe9b59eb'
      kvCertAccessPrincipalId: 'c9b1819d-bb29-4ac2-9abe-39e4fe9b59eb'
      kvCertAccessRoleId: ""
      geneva:
        actions:
          applicationName: "arohcp-ga-dev"
          applicationOwnerId: "d8837611-f550-4f0a-af48-575a7178adfb" # aro-github-actions-identity
          keyVault:
            name: "arohcpdev-geneva-kv" # [globally-unique]
          certificate:
            issuer: Self
    environments:
      dev:
        # this is the integrated DEV environment
        defaults:
          kusto:
            enabled: true
          regionRG: hcp-underlay-{{ .ctx.environment }}-{{ .ctx.region }}
          logs:
            loganalytics:
              enable: true
          mgmt:
            aks:
              systemAgentPool:
                maxCount: 4
              # MC AKS nodepools
              # big enough for multiple HCPs
              userAgentPool:
                minCount: 1
                maxCount: 3
                vmSize: 'Standard_D16s_v3'
                osDiskSizeGB: 128
          # DNS
          dns:
            regionalSubdomain: '{{ .ctx.region }}'
          # Maestro
          maestro:
            server:
              mqttClientName: 'maestro-server-{{ .ctx.regionShort }}-dev'
              tracing:
                address: "http://ingest.observability:4318"
                exporter: "otlp"
          # Frontend
          frontend:
            audit:
              connectSocket: false
            cosmosDB:
              private: false
              zoneRedundantMode: 'Disabled'
      cspr:
        # this is the cluster service PR check and full cycle test environment
        defaults:
          kusto:
            enabled: true
          regionRG: hcp-underlay-{{ .ctx.environment }}-{{ .ctx.region }}
          # Service Key Vault
          serviceKeyVault:
            assignNSP: false
          logs:
            loganalytics:
              enable: true
          monitoring:
            svcWorkspaceName: 'services-{{ .ctx.environment }}-{{ .ctx.regionShort }}'
            hcpWorkspaceName: 'hcps-{{ .ctx.environment }}-{{ .ctx.regionShort }}'
          svc:
            aks:
              # MC AKS nodepools
              # big enough for multiple CS instances during PR checks
              userAgentPool:
                minCount: 2
                maxCount: 12
          mgmt:
            aks:
              systemAgentPool:
                minCount: 1
                maxCount: 4
              # MC AKS nodepools
              # big enough for multiple HCPs
              userAgentPool:
                minCount: 1
                maxCount: 3
                vmSize: 'Standard_D16s_v3'
                osDiskSizeGB: 128
          # Geneva
          geneva:
            logs:
              manageCertificates: false
          # DNS
          dns:
            regionalSubdomain: '{{ .ctx.region }}-cs'
          # Maestro
          maestro:
            restrictIstioIngress: false
          # Frontend
          frontend:
            cosmosDB:
              private: false
              zoneRedundantMode: 'Disabled'
          hypershift:
            additionalInstallArg: '--enable-cpo-overrides=true'
            image:
              registry: quay.io
              repository: acm-d/rhtap-hypershift-operator
              digest: sha256:c94b730bd64f6ecb12b2fcd3aad64f4926c88937026912ee9762add7bb18c07e
      ntly:
        # this is an environment to test the deployability of infra nightly
        defaults:
          kusto:
            enabled: true
          regionRG: "{{ .ctx.region }}-shared-resources"
          serviceKeyVault:
            name: "arohcp{{ .ctx.environment }}-svc-{{ .ctx.regionShort }}" # [globally-unique]
            rg: "{{ .ctx.region }}-shared-resources"
            region: "{{ .ctx.region }}"
            softDelete: false
          monitoring:
            svcWorkspaceName: 'aro-hcp-ntly-svc-{{ .ctx.regionShort }}'
            hcpWorkspaceName: 'aro-hcp-ntly-hcp-{{ .ctx.regionShort }}'
          # Cluster Service
          clustersService:
            postgres:
              deploy: false
              password: 'TheBlurstOfTimes'
              containerizedDb:
                image: "docker.io/library/postgres:14.2"
                pvcCapacity: 512Mi
          # DNS
          dns:
            regionalSubdomain: '{{ .ctx.regionShort }}-ntly'
          # Maestro
          maestro:
            postgres:
              deploy: false
              password: 'TheBlurstOfTimes'
              containerizedDb:
                image: "docker.io/library/postgres:14.2"
                pvcCapacity: 512Mi
          # Frontend
          frontend:
            cosmosDB:
              private: false
              zoneRedundantMode: 'Disabled'
          # MC
          mgmt:
            subscription:
              key: ARO HCP nightly management (EA Subscription)
            applyKubeletFixes: false
          svc:
            subscription:
              key: ARO HCP nightly service (EA Subscription)
      pers:
        # Regional overrides
        regions:
          switzerlandnorth:
            oidc:
              storageAccount:
                privateLinkLocation: germanywestcentral
          westus:
            oidc:
              storageAccount:
                privateLinkLocation: westus3
          westeurope:
            svc:
              aks:
                userAgentPool:
                  zones: '1'
                infraAgentPool:
                  zones: '1'
                systemAgentPool:
                  zones: '1'
            mgmt:
              aks:
                userAgentPool:
                  zones: '1'
                infraAgentPool:
                  zones: '1'
                systemAgentPool:
                  zones: '1'
        # this is the personal DEV environment
        defaults:
          # Service Key Vault
          serviceKeyVault:
            assignNSP: false
          # Cluster Service
          clustersService:
            postgres:
              deploy: false
              password: 'TheBlurstOfTimes'
              containerizedDb:
                image: "docker.io/library/postgres:14.2"
                pvcCapacity: 512Mi
            tracing:
              address: "http://ingest.observability:4318"
              exporter: "otlp"
          # Geneva
          geneva:
            logs:
              manageCertificates: false
          # DNS
          dns:
            regionalSubdomain: '{{ .ctx.regionShort }}'
          # Maestro
          maestro:
            postgres:
              deploy: false
              password: 'TheBlurstOfTimes'
              containerizedDb:
                image: "docker.io/library/postgres:14.2"
                pvcCapacity: 512Mi
            server:
              mqttClientName: 'maestro-server-{{ .ctx.regionShort }}'
              tracing:
                address: "http://ingest.observability:4318"
                exporter: "otlp"
          # Backend
          backend:
            tracing:
              address: "http://ingest.observability:4318"
              exporter: "otlp"
          # Frontend
          frontend:
            audit:
              connectSocket: false
            cosmosDB:
              private: false
              zoneRedundantMode: 'Disabled'
            tracing:
              address: "http://ingest.observability:4318"
              exporter: "otlp"
          hypershift:
            additionalInstallArg: '--enable-cpo-overrides=true'
            image:
              registry: quay.io
              repository: acm-d/rhtap-hypershift-operator
              digest: sha256:c94b730bd64f6ecb12b2fcd3aad64f4926c88937026912ee9762add7bb18c07e
          # MC
          mgmt:
            rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}"
            aks:
              name: "{{ .ctx.environment }}-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}"
              systemAgentPool:
                maxCount: 4
                osDiskSizeGB: 32
                vmSize: Standard_D2s_v3
              userAgentPool:
                maxCount: 6
                osDiskSizeGB: 100
                vmSize: Standard_D4s_v3
            jaeger:
              deploy: false
            applyKubeletFixes: false
          # SVC
          svc:
            rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.regionShort }}-svc"
            aks:
              name: "{{ .ctx.environment }}-{{ .ctx.regionShort }}-svc"
            jaeger:
              deploy: true
      perf:
        defaults:
          # Service Key Vault
          serviceKeyVault:
            assignNSP: false
          dns:
            regionalSubdomain: '{{ .ctx.regionShort }}'
          # SVC
          svc:
            rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.regionShort }}-svc"
            aks:
              name: "{{ .ctx.environment }}-{{ .ctx.regionShort }}-svc"
          mgmt:
            rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}"
            aks:
              name: "{{ .ctx.environment }}-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}"
              systemAgentPool:
                maxCount: 4
              userAgentPool:
                maxCount: 3
                vmSize: 'Standard_D16s_v3'
                osDiskSizeGB: 128
      swft:
        # this is the personal SWIFT DEV environment
        defaults:
          # Service Key Vault
          serviceKeyVault:
            assignNSP: false
          # Cluster Service
          clustersService:
            postgres:
              deploy: false
              password: 'TheBlurstOfTimes'
              containerizedDb:
                image: "docker.io/library/postgres:14.2"
                pvcCapacity: 512Mi
          # DNS
          dns:
            regionalSubdomain: '{{ .ctx.regionShort }}'
          # Maestro
          maestro:
            postgres:
              deploy: false
              password: 'TheBlurstOfTimes'
              containerizedDb:
                image: "docker.io/library/postgres:14.2"
                pvcCapacity: 512Mi
            server:
              mqttClientName: 'maestro-server-{{ .ctx.regionShort }}'
          # Frontend
          frontend:
            cosmosDB:
              private: false
              zoneRedundantMode: 'Disabled'
          # MC
          mgmt:
            rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}"
            aks:
              name: "{{ .ctx.environment }}-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}"
              systemAgentPool:
                maxCount: 4
              userAgentPool:
                maxCount: 3
                vmSize: 'Standard_D16s_v3'
                osDiskSizeGB: 128
              enableSwiftV2Vnet: true
              enableSwiftV2Nodepools: true
            jaeger:
              deploy: false
            applyKubeletFixes: false
          # SVC
          svc:
            rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.regionShort }}-svc"
            aks:
              name: "{{ .ctx.environment }}-{{ .ctx.regionShort }}-svc"
