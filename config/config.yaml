$schema: config.schema.json
#
#   A B O U T   N A M I N G
#
# For Azure resource names that need to be unique within a cloud, use {{ .ctx }} variables to ensure uniqueness, e.g.
# - for global, regional and SC naming use {{ .ctx.regionShort }} or {{ .ctx.region }}
# - for MGMT naming additionally use {{ .ctx.stamp }}
#
# We have different requirements for naming uniqueness for Azure resources
#
# - [globally-unique] - a resource needs to be unique within the Azure cloud.
#   This is a technical requirement of Azure for certain resource types
# - [env-unique] - a resource needs to be unique within an ARO HCP environment,
#   so accross all regions of ARO HCP in the same environment.
#   An environment unique names does not need to be unique within the Azure cloud
#
# To implement names, we leverate static strings combined with the {{ .ctx }} variables, e.g.
# - {{ .ctx.environment }} length: 1-4 / starts with a character, may end with a digit
# - {{ .ctx.regionShort }} length: 2-4 / starts with a character, may end with a digit
# - {{ .ctx.region }} very long, up to 20 characters / starts with a character, may end with a digit
# - {{ .ctx.stamp }} used for for uniqueness for MGMT stamps within a region / digits only
defaults:
  #
  # All defaults in this section need to be environment and region agnostic.
  #
  region: "{{ .ctx.region  }}"
  regionRG: "{{ .ctx.region }}-shared-resources"
  # Global scope settings
  global:
    safeDnsIntAppObjectId: "" # intentionally left empty
    secretsToSyncDir: "none"
    subscription: hcp-global
    rg: global-shared-resources
    globalMSIName: global-ev2-identity
    nsp:
      name: nsp-global
      accessMode: 'Learning'
    keyVault:
      name: 'arohcp{{ .ctx.environment }}-global' # [globally-unique]
      private: false
      softDelete: true
  # ACR
  acr:
    svc:
      name: 'arohcpsvc{{ .ctx.environment }}' # [globally-unique]
      zoneRedundantMode: Enabled
    ocp:
      name: 'arohcpocp{{ .ctx.environment }}' # [globally-unique]
      zoneRedundantMode: Enabled
  # ACR Pull
  acrPull:
    image:
      registry: mcr.microsoft.com
      repository: aks/msi-acrpull
  # Backplane API
  backplaneAPI:
    image:
      registry: quay.io
      repository: app-sre/backplane-api
  # Hypershift
  hypershift:
    image:
      registry: quay.io
      repository: acm-d/rhtap-hypershift-operator
    namespace: hypershift
    additionalInstallArg: ''
  # Log settings
  logs:
    mdsd:
      namespace: logs
      msiName: logs-mdsd
      serviceAccountName: genevabit-aggregator
      cert:
        name: ""
        type: ""
        issuer: ""
      subscriptions: []
    loganalytics:
      enable: false
  # Monitoring
  monitoring:
    grafanaName: "arohcp-{{ .ctx.environment }}"
    svcWorkspaceName: 'arohcp-{{ .ctx.environment }}-{{ .ctx.regionShort }}'
    hcpWorkspaceName: 'arohcp-hcp-{{ .ctx.environment }}-{{ .ctx.regionShort }}'
    devAlertingEmails: ""
    sev1ActionGroupIDs: ""
    sev2ActionGroupIDs: ""
    sev3ActionGroupIDs: ""
    sev4ActionGroupIDs: ""
  # SVC cluster specifics
  svc:
    subscription: "hcp-{{ .ctx.environment }}-svc-{{ .ctx.region }}"
    rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.region }}-svc"
    nsp:
      name: nsp-{{ .ctx.regionShort }}-svc
    istio:
      istioctlVersion: "1.24.1"
      tag: "prod-stable"
      ingressGatewayIPAddressName: "aro-hcp-istio-ingress"
      ingressGatewayIPAddressIPTags: ""
    aks:
      name: "{{ .ctx.environment }}-{{ .ctx.region }}-svc-1" # [env-unique]
      vnetAddressPrefix: "10.128.0.0/14"
      subnetPrefix: "10.128.8.0/21"
      podSubnetPrefix: "10.128.64.0/18"
      kubernetesVersion: 1.31.8
      networkDataplane: "cilium"
      networkPolicy: "cilium"
      systemAgentPool:
        minCount: 1
        maxCount: 3
        vmSize: 'Standard_D2s_v3'
        osDiskSizeGB: 32
      userAgentPool:
        minCount: 1
        maxCount: 3
        vmSize: 'Standard_D2s_v3'
        osDiskSizeGB: 32
        azCount: 3
      infraAgentPool:
        minCount: 1
        maxCount: 3
        vmSize: 'Standard_D2s_v3'
        osDiskSizeGB: 32
        azCount: 3
      etcd:
        kvName: "ah-{{ .ctx.environment }}-se-{{ .ctx.regionShort }}-1" # [globally-unique]
        kvSoftDelete: true
      clusterOutboundIPAddressIPTags: ""
    logs:
      namespace: HCPServiceLogs
      san: ""
      configVersion: ""
    prometheus:
      namespace: prometheus
      namespaceLabel: ""
      prometheusOperator:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus-operator
          digest: a5bf4407cb83dc93d4e29ef680e0a4d621256e0f004822f53b2ff1c592bf2a82
        version: ""
      prometheusSpec:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus
          digest: 2dcc22f4a8ea5c198e1c9eb6e7f04d127c55924da72e0f4334e659633185283c
        version: ""
        replicas: 2
        shards: 2
  # MGMT cluster specifics
  mgmt:
    subscription: "hcp-{{ .ctx.environment }}-mgmt-{{ .ctx.region }}-{{ .ctx.stamp }}"
    rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.region }}-mgmt-{{ .ctx.stamp }}"
    applyKubeletFixes: true
    nsp:
      name: nsp-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}
    aks:
      name: "{{ .ctx.environment }}-{{ .ctx.region }}-mgmt-{{ .ctx.stamp }}" # [env-unique]
      vnetAddressPrefix: "10.128.0.0/14"
      subnetPrefix: "10.128.8.0/21"
      podSubnetPrefix: "10.128.64.0/18"
      kubernetesVersion: 1.31.8
      networkDataplane: "azure"
      networkPolicy: "azure"
      etcd:
        kvName: "ah-{{ .ctx.environment }}-me-{{ .ctx.regionShort }}-{{ .ctx.stamp }}" # [globally-unique]
        kvSoftDelete: true
      systemAgentPool:
        vmSize: 'Standard_E8s_v3'
        osDiskSizeGB: 128
        minCount: 1
      userAgentPool:
        vmSize: 'Standard_D16s_v3'
        osDiskSizeGB: 128
        minCount: 1
      infraAgentPool:
        minCount: 1
        maxCount: 3
        vmSize: 'Standard_D2s_v3'
        osDiskSizeGB: 32
        azCount: 3
      clusterOutboundIPAddressIPTags: ""
      enableSwiftV2: true
    logs:
      namespace: HCPCustomerLogs
      san: ""
      configVersion: ""
    prometheus:
      namespace: prometheus
      namespaceLabel: network.openshift.io/policy-group=monitoring
      prometheusOperator:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus-operator
        version: ""
      prometheusSpec:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus
        version: "v2.55.1-3"
        replicas: 2
        shards: 2
  # Backend
  backend:
    image:
      registry: arohcpsvcdev.azurecr.io
      repository: arohcpbackend
    tracing:
      address: ""
      exporter: ""
  # Frontend
  frontend:
    image:
      registry: arohcpsvcdev.azurecr.io
      repository: arohcpfrontend
    tracing:
      address: ""
      exporter: ""
    cosmosDB:
      deploy: true
      disableLocalAuth: true
      name: "arohcp{{ .ctx.environment }}-rp-{{ .ctx.regionShort }}" # [globally-unique]
      private: true
      zoneRedundantMode: 'Auto'
    cert:
      name: frontend-cert-{{ .ctx.environment }}-{{ .ctx.regionShort }}
  # Mise
  mise:
    deploy: false
    azureAdInstance: ""
    firstPartyAppId: ""
    armInstance: ""
    armAppId: ""
    tenantId: ""
    image:
      repository: ""
      digest: ""
  # Maestro
  maestro:
    server:
      tracing:
        address: ""
        exporter: ""
      mqttClientName: 'maestro-server-{{ .ctx.regionShort }}'
      loglevel: 4
      managedIdentityName: maestro-server
      k8s:
        namespace: maestro
        serviceAccountName: maestro
    agent:
      consumerName: "hcp-underlay-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}" # [env-unique]
      loglevel: 4
      sidecar:
        image:
          registry: mcr.microsoft.com
          repository: azurelinux/base/nginx
          digest: sha256:f203d7e49ce778f8464f403d2558c5d7162b1b9189657c6b32d4f70a99e0fe83
    eventGrid:
      name: "arohcp-{{ .ctx.environment }}-maestro-{{ .ctx.regionShort }}" # [globally-unique]
      maxClientSessionsPerAuthName: 6
      private: false
    postgres:
      name: "arohcp-{{ .ctx.environment }}-dbmaestro-{{ .ctx.regionShort }}" # [globally-unique]
      serverVersion: '15'
      serverStorageSizeGB: 32
      deploy: true
      private: false
      minTLSVersion: 'TLSV1.2'
      databaseName: maestro
      zoneRedundantMode: 'Auto'
    restrictIstioIngress: true
    certDomain: ""
    image:
      registry: quay.io
      repository: redhat-user-workloads/maestro-rhtap-tenant/maestro/maestro
  # PKO
  pko:
    imagePackage:
      registry: arohcpsvcdev.azurecr.io
      repository: package-operator/package-operator-package
      digest: sha256:a541ddb20875264f1995c38b1dd66de052547c2a861001b3b49c2a56b7e06e0d
    imageManager:
      registry: arohcpsvcdev.azurecr.io
      repository: package-operator/package-operator-manager
      digest: sha256:04b280a2dfcd89c433db32106e0f9a80b978c2513b979865df7a66dc67617e90
    imagePrefixOverrides: quay.io/package-operator=arohcpsvcdev.azurecr.io/package-operator
  # Cluster Service
  clustersService:
    image:
      registry: quay.io
      repository: app-sre/uhc-clusters-service
    tracing: # NOTE: Currently only enabled for pers.
      address: ""
      exporter: ""
    environment: "arohcp{{ .ctx.environment }}"
    postgres:
      name: "arohcp-{{ .ctx.environment }}-dbcs-{{ .ctx.regionShort }}" # [globally-unique]
      deploy: true
      private: false
      minTLSVersion: 'TLSV1.2'
      zoneRedundantMode: 'Auto'
    managedIdentityName: clusters-service
    k8s:
      namespace: clusters-service
      serviceAccountName: clusters-service
  # Image Sync
  imageSync:
    environmentName: aro-hcp-image-sync
    outboundServiceTags: ""
    componentSync:
      enabled: false
      repositories: ""
      secrets: ""
      image:
        registry: arohcpsvcdev.azurecr.io
        repository: image-sync/component-sync
        digest: ""
      pullSecretName: component-sync-pull-secret
    ocMirror:
      enabled: true
      image:
        registry: arohcpsvcdev.azurecr.io
        repository: image-sync/oc-mirror
      pullSecretName: ocmirror-pull-secret
  # Mock Managed Identities - not relevant for most MSFT envs
  miMockClientId: ""
  miMockPrincipalId: ""
  miMockCertName: ""
  armHelperClientId: ""
  armHelperFPAPrincipalId: ""
  armHelperCertName: ""
  # OIDC
  oidcStorageAccountName: "arohcp{{ .ctx.environment }}oidc{{ .ctx.regionShort }}" # [globally-unique]
  oidcZoneRedundantMode: Auto
  # Service Key Vault
  serviceKeyVault:
    name: "arohcp{{ .ctx.environment }}-svc-{{ .ctx.regionShort }}" # [globally-unique]
    rg: "{{ .ctx.region }}-shared-resources"
    region: "{{ .ctx.region  }}"
    softDelete: false
    private: false
    assignNSP: true
  # Management Cluster KV
  cxKeyVault:
    name: "ah-{{ .ctx.environment }}-cx-{{ .ctx.regionShort }}-{{ .ctx.stamp }}" # [globally-unique]
    softDelete: false
    private: false
  msiKeyVault:
    name: "ah-{{ .ctx.environment }}-mi-{{ .ctx.regionShort }}-{{ .ctx.stamp }}" # [globally-unique]
    softDelete: false
    private: false
  mgmtKeyVault:
    name: "ah-{{ .ctx.environment }}-mg-{{ .ctx.regionShort }}-{{ .ctx.stamp }}" # [globally-unique]
    softDelete: false
    private: false
clouds:
  dev:
    # this configuration serves as a template for for all RH DEV subscription deployments
    defaults:
      regionRG: hcp-underlay-{{ .ctx.environment }}-{{ .ctx.regionShort }}
      global:
        rg: global
        subscription: ARO Hosted Control Planes (EA Subscription 1)
        region: westus3
        globalMSIName: global-rollout-identity
        secretsToSyncDir: "dev/arohcpdev-global"
        keyVault:
          name: arohcpdev-global
      # DNS
      dns:
        baseDnsZoneRG: global
        cxParentZoneName: hcp.osadev.cloud
        cxParentZoneDelegation: false
        svcParentZoneName: hcpsvc.osadev.cloud
        parentZoneName: osadev.cloud
      # 1P app
      firstPartyAppClientId: b3cb2fab-15cb-4583-ad06-f91da9bfe2d1
      firstPartyAppCertificate:
        name: firstPartyCert2
        issuer: Self
        manage: false
      # Mock Managed Identities Service Princiapl
      miMockClientId: e8723db7-9b9e-46a4-9f7d-64d75c3534f0
      miMockPrincipalId: d6b62dfa-87f5-49b3-bbcb-4a687c4faa96
      miMockCertName: msiMockCert2
      # ARM Helper
      armHelperClientId: 3331e670-0804-48e8-a086-6241671ddc93
      armHelperFPAPrincipalId: 47f69502-0065-4d9a-b19b-d403e183d2f4
      armHelperCertName: armHelperCert2
      # Geneva Actions
      genevaActions:
        serviceTag: GenevaActionsNonProd
      # Maestro
      maestro:
        certDomain: selfsigned.maestro.keyvault.azure.com
        certIssuer: Self
        image:
          digest: sha256:71788add6afc26829ef75432714fa3052c7dbc1d62d0002ff4c736a8038c18f4
      # ACR Pull
      acrPull:
        image:
          digest: sha256:c802a91b3b0fe4a3875a03904140a14eb54c8b94db1d510946c9c438d28689c0 #v0.1.14
      # Cluster Service
      clustersService:
        environment: "arohcpdev"
        image:
          digest: sha256:7d6981f42a7bdfc1d75298918afbcc7fb698f4f67800538ab7d38ebddb284917
        azureOperatorsManagedIdentities:
          clusterApiAzure:
            roleName: Azure Red Hat OpenShift Cluster API Role - Dev
          controlPlane:
            roleName: Azure Red Hat OpenShift Control Plane Operator Role - Dev
          cloudControllerManager:
            roleName: Azure Red Hat OpenShift Cloud Controller Manager - Dev
          ingress:
            roleName: Azure Red Hat OpenShift Cluster Ingress Operator - Dev
          diskCsiDriver:
            roleName: Azure Red Hat OpenShift Disk Storage Operator - Dev
          fileCsiDriver:
            roleName: Azure Red Hat OpenShift File Storage Operator - Dev
          imageRegistry:
            roleName: Azure Red Hat OpenShift Image Registry Operator - Dev
          cloudNetworkConfig:
            roleName: Azure Red Hat OpenShift Network Operator - Dev
          kms:
            roleName: Azure Red Hat OpenShift KMS Plugin - Dev
      # Hypershift Operator
      hypershift:
        image:
          registry: quay.io
          repository: acm-d/rhtap-hypershift-operator
          digest: sha256:607dcc3e795a1fb8e7647aa6ccf5b19dbfba8b4387f8eac9e304b33265a80d05
      # Backplane API
      backplaneAPI:
        image:
          digest: sha256:822477832a73c7eab7fe27200994f10030f708f4a752f33ded3f8f8eaa0470f6
      # Frontend
      frontend:
        cert:
          issuer: Self
        image:
          digest: '' # if empty uses commit sha of repo
      # Backend
      backend:
        image:
          digest: '' # if empty uses commit sha of repo
      # Image Sync
      imageSync:
        componentSync:
          enabled: true
          repositories: quay.io/redhat-user-workloads/maestro-rhtap-tenant/maestro/maestro,quay.io/acm-d/rhtap-hypershift-operator,quay.io/app-sre/uhc-clusters-service,quay.io/package-operator/package-operator-package,quay.io/package-operator/package-operator-manager,quay.io/package-operator/remote-phase-manager,quay.io/app-sre/backplane-api
          secrets: 'quay.io:quay-io-bearer'
          image:
            digest: sha256:d838c4910bc53a5583dd501ed7e3ab08aa7c08b45b5997c90764c65ceef01a8f
        ocMirror:
          image:
            digest: sha256:92dc2b18de0126caa2212f62c54023f6e8ecf12e2025c37a5f4151d0253ae14e
      # Shared SVC KV
      serviceKeyVault:
        name: 'aro-hcp-dev-svc-kv'
        rg: 'global'
        region: 'westus3'
        softDelete: true
      # disable soft delete on etcd KVs in DEV
      svc:
        subscription: ARO Hosted Control Planes (EA Subscription 1)
        nsp:
          accessMode: 'Learning'
        istio:
          targetVersion: "asm-1-25"
          versions: "asm-1-25"
        aks:
          etcd:
            kvSoftDelete: false
        prometheus:
          prometheusOperator:
            image:
              digest: a5bf4407cb83dc93d4e29ef680e0a4d621256e0f004822f53b2ff1c592bf2a82
          prometheusSpec:
            image:
              digest: 2dcc22f4a8ea5c198e1c9eb6e7f04d127c55924da72e0f4334e659633185283c
            shards: 1
      mgmt:
        subscription: ARO Hosted Control Planes (EA Subscription 1)
        aks:
          # MGMTM AKS nodepools - big enough for 2 HCPs
          systemAgentPool:
            maxCount: 4
            vmSize: 'Standard_D2s_v3'
            osDiskSizeGB: 32
          userAgentPool:
            maxCount: 6
            vmSize: 'Standard_D4s_v3'
            osDiskSizeGB: 100
            azCount: 3
          infraAgentPool:
            azCount: 1
          etcd:
            kvSoftDelete: false
          enableSwiftV2: false
        nsp:
          accessMode: 'Learning'
        prometheus:
          prometheusOperator:
            image:
              digest: a5bf4407cb83dc93d4e29ef680e0a4d621256e0f004822f53b2ff1c592bf2a82
          prometheusSpec:
            image:
              digest: 2dcc22f4a8ea5c198e1c9eb6e7f04d127c55924da72e0f4334e659633185283c
            shards: 1
      # ACRs
      acr:
        svc:
          name: 'arohcpsvcdev' # [globally-unique]
          zoneRedundantMode: Disabled
        ocp:
          name: 'arohcpocpdev' # [globally-unique]
          zoneRedundantMode: Disabled
      # Metrics
      monitoring:
        grafanaName: arohcp-dev
        devAlertingEmails: "aro-hcp-service-lifecycle-team@redhat.com"
        grafanaMajorVersion: '11'
        grafanaZoneRedundantMode: Disabled
        grafanaAdminGroupPrincipalId: 6b6d3adf-8476-4727-9812-20ffdef2b85c
      # DEVOPS MSI
      aroDevopsMsiId: '/subscriptions/1d3378d3-5a3f-4712-85a1-2485495dfc4b/resourceGroups/global/providers/Microsoft.ManagedIdentity/userAssignedIdentities/global-rollout-identity'
      kvCertOfficerPrincipalId: 'c9b1819d-bb29-4ac2-9abe-39e4fe9b59eb'
    environments:
      dev:
        # this is the integrated DEV environment
        defaults:
          regionRG: hcp-underlay-{{ .ctx.environment }}-{{ .ctx.region }}
          logs:
            loganalytics:
              enable: true
          mgmt:
            aks:
              systemAgentPool:
                maxCount: 4
                vmSize: 'Standard_E8s_v3'
                osDiskSizeGB: 128
              # MC AKS nodepools
              # big enough for multiple HCPs
              userAgentPool:
                minCount: 1
                maxCount: 3
                vmSize: 'Standard_D16s_v3'
                osDiskSizeGB: 128
          # DNS
          dns:
            regionalSubdomain: '{{ .ctx.region }}'
          # Maestro
          maestro:
            server:
              mqttClientName: 'maestro-server-{{ .ctx.regionShort }}-dev'
              tracing:
                address: "http://ingest.observability:4318"
                exporter: "otlp"
          # Frontend
          frontend:
            cosmosDB:
              private: false
              zoneRedundantMode: 'Disabled'
      cspr:
        # this is the cluster service PR check and full cycle test environment
        defaults:
          regionRG: hcp-underlay-{{ .ctx.environment }}-{{ .ctx.region }}
          # Service Key Vault
          serviceKeyVault:
            assignNSP: false
          logs:
            loganalytics:
              enable: true
          svc:
            aks:
              # MC AKS nodepools
              # big enough for multiple CS instances during PR checks
              userAgentPool:
                minCount: 2
                maxCount: 12
          mgmt:
            aks:
              systemAgentPool:
                minCount: 1
                maxCount: 4
                vmSize: 'Standard_E8s_v3'
                osDiskSizeGB: 128
              # MC AKS nodepools
              # big enough for multiple HCPs
              userAgentPool:
                minCount: 1
                maxCount: 3
                vmSize: 'Standard_D16s_v3'
                osDiskSizeGB: 128
          # DNS
          dns:
            regionalSubdomain: '{{ .ctx.region }}-cs'
          # Maestro
          maestro:
            restrictIstioIngress: false
          # Frontend
          frontend:
            cosmosDB:
              private: false
              zoneRedundantMode: 'Disabled'
      ntly:
        # this is an environment to test the deployability of infra nightly
        defaults:
          # Cluster Service
          clustersService:
            postgres:
              deploy: false
          # DNS
          dns:
            regionalSubdomain: '{{ .ctx.regionShort }}-ntly'
          # Maestro
          maestro:
            postgres:
              deploy: false
          # Frontend
          frontend:
            cosmosDB:
              private: false
              zoneRedundantMode: 'Disabled'
          # MC
          mgmt:
            applyKubeletFixes: false
      pers:
        # this is the personal DEV environment
        defaults:
          # Service Key Vault
          serviceKeyVault:
            assignNSP: false
          # Cluster Service
          clustersService:
            postgres:
              deploy: false
            tracing:
              address: "http://ingest.observability:4318"
              exporter: "otlp"
          # DNS
          dns:
            regionalSubdomain: '{{ .ctx.regionShort }}'
          # Maestro
          maestro:
            postgres:
              deploy: false
            server:
              mqttClientName: 'maestro-server-{{ .ctx.regionShort }}'
              tracing:
                address: "http://ingest.observability:4318"
                exporter: "otlp"
          # Backend
          backend:
            tracing:
              address: "http://ingest.observability:4318"
              exporter: "otlp"
          # Frontend
          frontend:
            cosmosDB:
              private: false
              zoneRedundantMode: 'Disabled'
            tracing:
              address: "http://ingest.observability:4318"
              exporter: "otlp"
          # MC
          mgmt:
            rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}"
            aks:
              name: "{{ .ctx.environment }}-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}"
            jaeger:
              deploy: false
            applyKubeletFixes: false
          # SVC
          svc:
            rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.regionShort }}-svc"
            aks:
              name: "{{ .ctx.environment }}-{{ .ctx.regionShort }}-svc"
            jaeger:
              deploy: true
      perf:
        defaults:
          # Service Key Vault
          serviceKeyVault:
            assignNSP: false
          dns:
            regionalSubdomain: '{{ .ctx.regionShort }}'
          # SVC
          svc:
            rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.regionShort }}-svc"
            aks:
              name: "{{ .ctx.environment }}-{{ .ctx.regionShort }}-svc"
          mgmt:
            rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}"
            aks:
              name: "{{ .ctx.environment }}-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}"
              systemAgentPool:
                maxCount: 4
                vmSize: 'Standard_E8s_v3'
                osDiskSizeGB: 128
              userAgentPool:
                maxCount: 3
                vmSize: 'Standard_D16s_v3'
                osDiskSizeGB: 128
