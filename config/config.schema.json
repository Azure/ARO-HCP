{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Generated schema for Root",
  "type": "object",
  "definitions": {
    "postgresName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 44,
      "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
      "description": "Server name must only contain lowercase letters, numbers, and hyphens. The server name must not start or end in a hyphen. Name must be between 3 be 63 characters long but we limited to 44 characters so we have a future option to use NSP: https://learn.microsoft.com/en-us/azure/private-link/network-security-perimeter-concepts"
    },
    "keyVaultName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "pattern": "^[a-z][a-z0-9]*(-[a-z0-9]+)*$",
      "description": "A KV name must be between 3-24 alphanumeric characters. The name must begin with a letter, end with a letter or digit, and not contain consecutive hyphens."
    },
    "operatorConfig": {
      "type": "object",
      "properties": {
        "roleName": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "roleName"
      ]
    },
    "tracing": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Defines exporter address"
        },
        "exporter": {
          "type": "string",
          "description": "Defines which exporter the SDK should use"
        }
      },
      "required": [
        "address",
        "exporter"
      ]
    },
    "acr": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 5,
          "maxLength": 44,
          "pattern": "^[a-z0-9]+$",
          "description": "Resource names may contain alpha numeric characters only and must be between 5 and 50 characters. We limited the length to 44 characters so we have a future option to use NSP: https://learn.microsoft.com/en-us/azure/private-link/network-security-perimeter-concepts"
        },
        "zoneRedundantMode": {
          "$ref": "#/definitions/zoneRedundantMode"
        }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "zoneRedundantMode"
      ]
    },
    "nsp": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 80,
          "pattern": "^[a-z0-9][a-z0-9_-]*[a-z0-9_]$"
        },
        "accessMode": {
          "type": "string",
          "enum": [
            "Audit",
            "Enforced",
            "Learning"
          ]
        }
      },
      "additionalProperties": false
    },
    "keyVault": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/keyVaultName"
        },
        "private": {
          "type": "boolean"
        },
        "softDelete": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "private",
        "softDelete"
      ]
    },
    "aksAgentPool": {
      "type": "object",
      "properties": {
        "maxCount": {
          "type": "number"
        },
        "minCount": {
          "type": "number"
        },
        "osDiskSizeGB": {
          "type": "number"
        },
        "vmSize": {
          "type": "string"
        },
        "azCount": {
          "type": "number"
        }
      },
      "additionalProperties": false,
      "required": [
        "maxCount",
        "minCount",
        "osDiskSizeGB",
        "vmSize"
      ]
    },
    "aksLogConfig": {
      "type": "object",
      "properties": {
        "namespace": {
          "description": "Geneva logs account namespace",
          "type": "string"
        },
        "san": {
          "description": "Geneva logs account certificate SAN",
          "type": "string"
        },
        "configVersion": {
          "description": "Geneva logs account namespace configuration version",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "namespace",
        "san",
        "configVersion"
      ]
    },
    "aksConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 44,
          "pattern": "^[a-z0-9][a-z0-9_-]*[a-z0-9]$",
          "description": "The name needs to be between 3-63 characters and can contain only letters, numbers, underscores, and hyphens. The name must start and end with a letter or number. We limit the name to 44 characters so we have a future option to use NSP: https://learn.microsoft.com/en-us/azure/private-link/network-security-perimeter-concepts"
        },
        "vnetAddressPrefix": {
          "type": "string"
        },
        "subnetPrefix": {
          "type": "string"
        },
        "podSubnetPrefix": {
          "type": "string"
        },
        "kubernetesVersion": {
          "type": "string"
        },
        "networkDataplane": {
          "type": "string",
          "enum": [
            "azure",
            "cilium"
          ]
        },
        "networkPolicy": {
          "type": "string",
          "enum": [
            "azure",
            "cilium"
          ]
        },
        "etcd": {
          "type": "object",
          "properties": {
            "kvName": {
              "$ref": "#/definitions/keyVaultName"
            },
            "kvSoftDelete": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "required": [
            "kvName",
            "kvSoftDelete"
          ]
        },
        "userAgentPool": {
          "$ref": "#/definitions/aksAgentPool"
        },
        "systemAgentPool": {
          "$ref": "#/definitions/aksAgentPool"
        },
        "infraAgentPool": {
          "$ref": "#/definitions/aksAgentPool"
        },
        "clusterOutboundIPAddressIPTags": {
          "$ref": "#/definitions/keyColonValueCSV"
        },
        "enableSwiftV2": {
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "vnetAddressPrefix",
        "subnetPrefix",
        "podSubnetPrefix",
        "kubernetesVersion",
        "etcd",
        "networkDataplane",
        "networkPolicy",
        "userAgentPool",
        "systemAgentPool",
        "clusterOutboundIPAddressIPTags"
      ]
    },
    "containerImage": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "digest": {
          "type": "string"
        }
      },
      "required": [
        "repository"
      ]
    },
    "keyColonValueCSV": {
      "type": "string",
      "pattern": "^$|^[\\w-\\.]+:[\\w\\/-]+(,[\\w-\\.]+:[\\w\\/-]+)*$"
    },
    "certificateIssuer": {
      "type": "string",
      "enum": [
        "Self",
        "OneCertV2-PublicCA",
        "OneCertV2-PrivateCA"
      ]
    },
    "zoneRedundantMode": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled",
        "Auto"
      ]
    },
    "prometheus": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "namespaceLabel": {
          "type": "string"
        },
        "prometheusOperator": {
          "type:": "object",
          "properties": {
            "image": {
              "$ref": "#/definitions/containerImage"
            },
            "version": {
              "type": "string"
            }
          }
        },
        "prometheusSpec": {
          "type": "object",
          "properties": {
            "image": {
              "$ref": "#/definitions/containerImage"
            },
            "version": {
              "type": "string"
            },
            "replicas": {
              "type": "number"
            },
            "shards": {
              "type": "number"
            }
          }
        }
      }
    }
  },
  "properties": {
    "aroDevopsMsiId": {
      "type": "string"
    },
    "kvCertOfficerPrincipalId": {
      "type": "string",
      "description": "The principal ID of the cert officer that will be used to manage KV certificate issuers"
    },
    "dns": {
      "type": "object",
      "properties": {
        "baseDnsZoneRG": {
          "type": "string",
          "description": "The Azure RG that holds the parent DNS zones"
        },
        "cxParentZoneName": {
          "type": "string",
          "description": "The parent DNS zone name for regional HCP cluster DNS zones"
        },
        "cxParentZoneDelegation": {
          "type": "boolean",
          "description": "Whether to manage the CX parent zone delegation on the parents parent."
        },
        "svcParentZoneName": {
          "type": "string",
          "description": "The parent DNS zone name for regional ARO-HCP infrastructure, e.g. the RP"
        },
        "regionalSubdomain": {
          "type": "string",
          "description": "The regional subdomain to be used to construct the regional hcp and svc zones under their respective parents, e.g. regionalSubdomain.svcParentZoneName"
        },
        "parentZoneName": {
          "type": "string",
          "description": "The global parent DNS zone name"
        }
      },
      "additionalProperties": false,
      "required": [
        "baseDnsZoneRG",
        "cxParentZoneName",
        "svcParentZoneName",
        "regionalSubdomain"
      ]
    },
    "pko": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        },
        "imageManager": {
          "type": "string"
        },
        "imageTag": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "image",
        "imageManager",
        "imageTag"
      ]
    },
    "clustersService": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string",
          "minLength": 1,
          "maxLength": 10
        },
        "image": {
          "$ref": "#/definitions/containerImage"
        },
        "tracing": {
          "$ref": "#/definitions/tracing"
        },
        "managedIdentityName": {
          "type": "string",
          "description": "The name of the MSI that will be used by CS to interact with Azure"
        },
        "k8s": {
          "type": "object",
          "properties": {
            "namespace": {
              "type": "string"
            },
            "serviceAccountName": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "namespace",
            "serviceAccountName"
          ]
        },
        "postgres": {
          "type": "object",
          "properties": {
            "deploy": {
              "type": "boolean"
            },
            "name": {
              "$ref": "#/definitions/postgresName"
            },
            "private": {
              "type": "boolean"
            },
            "minTLSVersion": {
              "type": "string",
              "enum": [
                "TLSV1.2",
                "TLSV1.3"
              ]
            },
            "zoneRedundantMode": {
              "$ref": "#/definitions/zoneRedundantMode"
            }
          },
          "required": [
            "deploy",
            "name",
            "private",
            "minTLSVersion",
            "zoneRedundantMode"
          ]
        },
        "azureOperatorsManagedIdentities": {
          "type": "object",
          "properties": {
            "clusterApiAzure": {
              "$ref": "#/definitions/operatorConfig"
            },
            "controlPlane": {
              "$ref": "#/definitions/operatorConfig"
            },
            "cloudControllerManager": {
              "$ref": "#/definitions/operatorConfig"
            },
            "ingress": {
              "$ref": "#/definitions/operatorConfig"
            },
            "diskCsiDriver": {
              "$ref": "#/definitions/operatorConfig"
            },
            "fileCsiDriver": {
              "$ref": "#/definitions/operatorConfig"
            },
            "imageRegistry": {
              "$ref": "#/definitions/operatorConfig"
            },
            "cloudNetworkConfig": {
              "$ref": "#/definitions/operatorConfig"
            },
            "kms": {
              "$ref": "#/definitions/operatorConfig"
            }
          },
          "additionalProperties": false,
          "required": [
            "clusterApiAzure",
            "controlPlane",
            "cloudControllerManager",
            "ingress",
            "diskCsiDriver",
            "fileCsiDriver",
            "imageRegistry",
            "cloudNetworkConfig",
            "kms"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "environment",
        "image",
        "managedIdentityName",
        "k8s",
        "azureOperatorsManagedIdentities",
        "postgres",
        "tracing"
      ]
    },
    "cxKeyVault": {
      "$ref": "#/definitions/keyVault"
    },
    "extraVars": {
      "type": "object",
      "properties": {},
      "required": []
    },
    "firstPartyAppClientId": {
      "type": "string"
    },
    "firstPartyAppCertificate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "issuer": {
          "$ref": "#/definitions/certificateIssuer"
        },
        "manage": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "issuer",
        "manage"
      ]
    },
    "miMockClientId": {
      "type": "string"
    },
    "miMockPrincipalId": {
      "type": "string"
    },
    "miMockCertName": {
      "type": "string"
    },
    "armHelperClientId": {
      "type": "string"
    },
    "armHelperFPAPrincipalId": {
      "type": "string"
    },
    "armHelperCertName": {
      "type": "string"
    },
    "backend": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/containerImage"
        },
        "tracing": {
          "$ref": "#/definitions/tracing"
        }
      },
      "additionalProperties": false,
      "required": [
        "image",
        "tracing"
      ]
    },
    "frontend": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/containerImage"
        },
        "tracing": {
          "$ref": "#/definitions/tracing"
        },
        "cosmosDB": {
          "type": "object",
          "properties": {
            "deploy": {
              "type": "boolean"
            },
            "disableLocalAuth": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "private": {
              "type": "boolean"
            },
            "zoneRedundantMode": {
              "$ref": "#/definitions/zoneRedundantMode"
            }
          },
          "additionalProperties": false,
          "required": [
            "deploy",
            "disableLocalAuth",
            "name",
            "private"
          ]
        },
        "cert": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "issuer": {
              "$ref": "#/definitions/certificateIssuer"
            }
          },
          "additionalProperties": false,
          "required": [
            "name",
            "issuer"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "image",
        "cosmosDB",
        "cert",
        "tracing"
      ]
    },
    "genevaActions": {
      "type": "object",
      "properties": {
        "serviceTag": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "serviceTag"
      ]
    },
    "mise": {
      "properties": {
        "deploy": {
          "type": "boolean"
        },
        "azureAdInstance": {
          "type": "string"
        },
        "firstPartyAppId": {
          "type": "string"
        },
        "armAppId": {
          "type": "string",
          "description": "The valid app ID for mise, which is the ARM Application Id, this is common across all clouds (MSIT/AME/FF)"
        },
        "image": {
          "$ref": "#/definitions/containerImage"
        },
        "tenantId": {
          "type": "string"
        }
      },
      "required": [
        "deploy",
        "image",
        "azureAdInstance",
        "firstPartyAppId",
        "armAppId",
        "tenantId"
      ]
    },
    "global": {
      "type": "object",
      "properties": {
        "nsp": {
          "$ref": "#/definitions/nsp"
        },
        "rg": {
          "type": "string"
        },
        "subscription": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "globalMSIName": {
          "type": "string",
          "description": "The name of the MSI that will be used for ev2"
        },
        "safeDnsIntAppObjectId": {
          "type": "string",
          "description": "SafeDnsIntApplication object ID use to delegate child DNS. This is only required for MSFT INT and can be left empty for other targets"
        },
        "secretsToSyncDir": {
          "type": "string"
        },
        "keyVault": {
          "$ref": "#/definitions/keyVault"
        }
      },
      "required": [
        "rg",
        "subscription",
        "region",
        "keyVault",
        "secretsToSyncDir"
      ]
    },
    "backplaneAPI": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/containerImage"
        }
      },
      "additionalProperties": false,
      "required": [
        "image"
      ]
    },
    "hypershift": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/containerImage"
        },
        "additionalInstallArg": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "additionalInstallArg",
        "namespace"
      ]
    },
    "imageSync": {
      "type": "object",
      "properties": {
        "environmentName": {
          "type": "string"
        },
        "outboundServiceTags": {
          "$ref": "#/definitions/keyColonValueCSV"
        },
        "componentSync": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "image": {
              "$ref": "#/definitions/containerImage"
            },
            "repositories": {
              "type": "string"
            },
            "secrets": {
              "$ref": "#/definitions/keyColonValueCSV"
            },
            "pullSecretName": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "enabled",
            "image",
            "repositories",
            "secrets",
            "pullSecretName"
          ]
        },
        "ocMirror": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "image": {
              "$ref": "#/definitions/containerImage"
            },
            "pullSecretName": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "enabled",
            "image",
            "pullSecretName"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "environmentName",
        "outboundServiceTags",
        "componentSync",
        "ocMirror"
      ]
    },
    "acrPull": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/containerImage"
        }
      },
      "additionalProperties": false,
      "required": [
        "image"
      ]
    },
    "maestro": {
      "type": "object",
      "properties": {
        "certDomain": {
          "type": "string",
          "description": "Optional SAN base domain for Maestro Eventgrid certificates. If missing, defaults to maestro.${dns.regionalSubdomain}.${dns.svcParentZoneName}"
        },
        "certIssuer": {
          "$ref": "#/definitions/certificateIssuer"
        },
        "server": {
          "type": "object",
          "properties": {
            "mqttClientName": {
              "type": "string"
            },
            "managedIdentityName": {
              "type": "string"
            },
            "loglevel": {
              "type": "integer"
            },
            "k8s": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string"
                },
                "serviceAccountName": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "required": [
                "namespace",
                "serviceAccountName"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "mqttClientName",
            "managedIdentityName",
            "loglevel",
            "k8s"
          ]
        },
        "agent": {
          "type": "object",
          "properties": {
            "consumerName": {
              "type": "string"
            },
            "loglevel": {
              "type": "integer"
            },
            "sidecar": {
              "type:": "object",
              "properties": {
                "image": {
                  "$ref": "#/definitions/containerImage"
                }
              }
            }
          },
          "additionalProperties": false,
          "required": [
            "consumerName",
            "loglevel",
            "sidecar"
          ]
        },
        "eventGrid": {
          "type": "object",
          "properties": {
            "maxClientSessionsPerAuthName": {
              "type": "integer"
            },
            "name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 44,
              "pattern": "^[a-zA-Z0-9-]+$",
              "not": {
                "anyOf": [
                  { "pattern": "^Microsoft-" },
                  { "pattern": "^EventGrid-" },
                  { "pattern": "^System-" }
                ]
              },
              "description": "Name length should be between 3 and 50 characters in length but we limited to 44 characters so we have a future option to use NSP: https://learn.microsoft.com/en-us/azure/private-link/network-security-perimeter-concepts. Only alphanumeric letters, digits and the '-' character are allowed in the topic name. Also, the name shouldn't start with the following reserved words: Microsoft-, EventGrid-, System-"
            },
            "private": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "required": [
            "maxClientSessionsPerAuthName",
            "name",
            "private"
          ]
        },
        "image": {
          "$ref": "#/definitions/containerImage"
        },
        "postgres": {
          "type": "object",
          "properties": {
            "deploy": {
              "type": "boolean"
            },
            "name": {
              "$ref": "#/definitions/postgresName"
            },
            "private": {
              "type": "boolean"
            },
            "serverStorageSizeGB": {
              "type": "integer"
            },
            "serverVersion": {
              "type": "string"
            },
            "minTLSVersion": {
              "type": "string",
              "enum": [
                "TLSV1.2",
                "TLSV1.3"
              ]
            },
            "databaseName": {
              "type": "string"
            },
            "zoneRedundantMode": {
              "$ref": "#/definitions/zoneRedundantMode"
            }
          },
          "additionalProperties": false,
          "required": [
            "deploy",
            "name",
            "private",
            "serverStorageSizeGB",
            "serverVersion",
            "minTLSVersion",
            "databaseName",
            "zoneRedundantMode"
          ]
        },
        "restrictIstioIngress": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "certIssuer",
        "agent",
        "server",
        "eventGrid",
        "image",
        "postgres",
        "restrictIstioIngress"
      ]
    },
    "mce": {
      "type": "object",
      "properties": {
        "clcStateMetrics": {
          "type": "object",
          "properties": {
            "imageDigest": {
              "type": "string"
            }
          },
          "required": [
            "imageDigest"
          ]
        }
      },
      "required": [
        "clcStateMetrics"
      ]
    },
    "mgmt": {
      "type": "object",
      "properties": {
        "aks": {
          "$ref": "#/definitions/aksConfig"
        },
        "applyKubeletFixes": {
          "type": "boolean"
        },
        "nsp": {
          "$ref": "#/definitions/nsp"
        },
        "rg": {
          "type": "string"
        },
        "subscription": {
          "type": "string"
        },
        "jaeger": {
          "deploy": "boolean"
        },
        "logs": {
          "description": "MDSD / Genevabits log aggregation and shipping configuration",
          "$ref": "#/definitions/aksLogConfig"
        },
        "prometheus": {
          "description": "Prometheus deployment configuration",
          "$ref": "#/definitions/prometheus"
        }
      },
      "additionalProperties": false,
      "required": [
        "aks",
        "applyKubeletFixes",
        "rg",
        "subscription",
        "prometheus"
      ]
    },
    "mgmtKeyVault": {
      "$ref": "#/definitions/keyVault"
    },
    "monitoring": {
      "type": "object",
      "properties": {
        "grafanaAdminGroupPrincipalId": {
          "type": "string"
        },
        "grafanaName": {
          "type": "string"
        },
        "grafanaMajorVersion": {
          "type": "string"
        },
        "grafanaZoneRedundantMode": {
          "$ref": "#/definitions/zoneRedundantMode"
        },
        "workspaceName": {
          "type": "string",
          "minLength": 4,
          "maxLength": 44,
          "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
          "description": "The workspace name should include 4-63 letters, digits or '-'. The '-' shouldn't be the first or the last symbol. We limit the name to 44 characters so we have a future option to use NSP: https://learn.microsoft.com/en-us/azure/private-link/network-security-perimeter-concepts"
        },
        "devAlertingEmails": {
          "type": "string"
        },
        "sev1ActionGroupIDs": {
          "type": "string"
        },
        "sev2ActionGroupIDs": {
          "type": "string"
        },
        "sev3ActionGroupIDs": {
          "type": "string"
        },
        "sev4ActionGroupIDs": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "grafanaAdminGroupPrincipalId",
        "grafanaName",
        "grafanaZoneRedundantMode",
        "workspaceName"
      ]
    },
    "logs": {
      "type": "object",
      "additionalProperties": false,
      "description": "Log infrastructure configuration",
      "properties": {
        "loganalytics": {
          "type": "object",
          "description": "Log Analytics configuration",
          "properties": {
            "enable": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "required": [
            "enable"
          ]
        },
        "mdsd": {
          "type": "object",
          "properties": {
            "namespace": {
              "type": "string"
            },
            "msiName": {
              "type": "string"
            },
            "serviceAccountName": {
              "type": "string"
            },
            "cert": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Logs certificate name",
                  "type": "string"
                },
                "type": {
                  "description": "Logs certificate type",
                  "type": "string"
                },
                "issuer": {
                  "description": "Logs certificate issuer",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "required": [
                "name",
                "type",
                "issuer"
              ]
            },
            "subscriptions": {
              "description": "Geneva logs resources subscriptions",
              "type": "array"
            }
          },
          "additionalProperties": false,
          "required": [
            "namespace",
            "msiName",
            "serviceAccountName",
            "cert",
            "subscriptions"
          ]
        }
      },
      "required": [
        "mdsd",
        "loganalytics"
      ]
    },
    "msiKeyVault": {
      "$ref": "#/definitions/keyVault"
    },
    "oidcStorageAccountName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "pattern": "^[a-z0-9]+$",
      "description": "The field can contain only lowercase letters and numbers. Name must be between 3 and 24 characters."
    },
    "oidcZoneRedundantMode": {
      "$ref": "#/definitions/zoneRedundantMode"
    },
    "region": {
      "type": "string"
    },
    "regionRG": {
      "type": "string"
    },
    "serviceKeyVault": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/keyVaultName"
        },
        "private": {
          "type": "boolean"
        },
        "region": {
          "type": "string"
        },
        "rg": {
          "type": "string"
        },
        "softDelete": {
          "type": "boolean"
        },
        "assignNSP":{
          "type":"boolean"
        }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "private",
        "region",
        "rg",
        "softDelete"
      ]
    },
    "svc": {
      "type": "object",
      "properties": {
        "aks": {
          "$ref": "#/definitions/aksConfig"
        },
        "rg": {
          "type": "string"
        },
        "subscription": {
          "type": "string"
        },
        "nsp": {
          "$ref": "#/definitions/nsp"
        },
        "jaeger": {
          "deploy": "boolean"
        },
        "istio": {
          "type": "object",
          "properties": {
            "istioctlVersion": {
              "description": "Latest version of istioctl. This is used to download the istioctl",
              "type": "string"
            },
            "tag": {
              "description": "The revision tag used in istioctl",
              "type": "string"
            },
            "versions": {
              "description": "The current istio version in the AKS cluster as CSV, will need to change to array once tooling is ready",
              "type": "string",
              "pattern": "^[a-zA-Z0-9-]+(,[a-zA-Z0-9-]+)*$"
            },
            "targetVersion": {
              "description": "The target istio version that will be updated to",
              "type": "string",
              "pattern": "^[a-zA-Z0-9-]+$"
            },
            "ingressGatewayIPAddressName": {
              "type": "string"
            },
            "ingressGatewayIPAddressIPTags": {
              "$ref": "#/definitions/keyColonValueCSV"
            }
          },
          "additionalProperties": false,
          "required": [
            "ingressGatewayIPAddressName"
          ]
        },
        "logs": {
          "description": "MDSD / Genevabits log aggregation and shipping configuration",
          "$ref": "#/definitions/aksLogConfig"
        },
        "prometheus": {
          "description": "Prometheus deployment configuration",
          "$ref": "#/definitions/prometheus"
        }
      },
      "additionalProperties": false,
      "required": [
        "rg",
        "subscription",
        "aks",
        "istio"
      ]
    },
    "acr": {
      "type": "object",
      "properties": {
        "svc": {
          "$ref": "#/definitions/acr"
        },
        "ocp": {
          "$ref": "#/definitions/acr"
        }
      },
      "additionalProperties": false,
      "required": [
        "svc",
        "ocp"
      ]
    },
    "releaseApprover": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "name",
        "id"
      ]
    }
  },
  "additionalProperties": false,
  "required": [
    "aroDevopsMsiId",
    "kvCertOfficerPrincipalId",
    "backplaneAPI",
    "clustersService",
    "cxKeyVault",
    "firstPartyAppClientId",
    "firstPartyAppCertificate",
    "frontend",
    "genevaActions",
    "global",
    "hypershift",
    "imageSync",
    "acrPull",
    "maestro",
    "mgmt",
    "mgmtKeyVault",
    "mce",
    "monitoring",
    "msiKeyVault",
    "oidcStorageAccountName",
    "oidcZoneRedundantMode",
    "region",
    "regionRG",
    "serviceKeyVault",
    "svc"
  ]
}
