#
# DO NOT EDIT THIS FILE, EDIT config.msft.public-cloud-overlay.yaml INSTEAD and run make materialize
#
$schema: config.schema.json
#
#   A B O U T   N A M I N G
#
# For Azure resource names that need to be unique within a cloud, use {{ .ctx }} variables to ensure uniqueness, e.g.
# - for global, regional and SC naming use {{ .ctx.regionShort }} or {{ .ctx.region }}
# - for MGMT naming additionally use {{ .ctx.stamp }}
#
# We have different requirements for naming uniqueness for Azure resources
#
# - [globally-unique] - a resource needs to be unique within the Azure cloud.
#   This is a technical requirement of Azure for certain resource types
# - [env-unique] - a resource needs to be unique within an ARO HCP environment,
#   so accross all regions of ARO HCP in the same environment.
#   An environment unique names does not need to be unique within the Azure cloud
#
# To implement names, we leverate static strings combined with the {{ .ctx }} variables, e.g.
# - {{ .ctx.environment }} length: 1-4 / starts with a character, may end with a digit
# - {{ .ctx.regionShort }} length: 2-4 / starts with a character, may end with a digit
# - {{ .ctx.region }} very long, up to 20 characters / starts with a character, may end with a digit
# - {{ .ctx.stamp }} used for for uniqueness for MGMT stamps within a region / digits only
defaults:
  #
  # All defaults in this section need to be environment and region agnostic.
  #
  region: "{{ .ctx.region  }}"
  regionRG: "{{ .ctx.region }}-shared-resources"
  # Global scope settings
  global:
    safeDnsIntAppObjectId: "" # intentionally left empty
    secretsToSyncDir: "none"
    subscription: hcp-global
    rg: global-shared-resources
    globalMSIName: global-ev2-identity
    nsp:
      name: nsp-global
      accessMode: 'Learning'
    keyVault:
      name: 'arohcp{{ .ctx.environment }}-global' # [globally-unique]
      private: false
      softDelete: true
  # ACR
  acr:
    svc:
      name: 'arohcpsvc{{ .ctx.environment }}' # [globally-unique]
      zoneRedundantMode: Enabled
    ocp:
      name: 'arohcpocp{{ .ctx.environment }}' # [globally-unique]
      zoneRedundantMode: Enabled
  # ACR Pull
  acrPull:
    image:
      registry: mcr.microsoft.com
      repository: aks/msi-acrpull
  # Backplane API
  backplaneAPI:
    image:
      registry: quay.io
      repository: app-sre/backplane-api
  # Hypershift
  hypershift:
    image:
      registry: quay.io
      repository: acm-d/rhtap-hypershift-operator
    namespace: hypershift
    additionalInstallArg: ''
  # Log settings
  logs:
    mdsd:
      namespace: logs
      msiName: logs-mdsd
      serviceAccountName: genevabit-aggregator
      cert:
        name: ""
        type: ""
        issuer: ""
      subscriptions: []
    loganalytics:
      enable: false
  # Monitoring
  monitoring:
    grafanaName: "arohcp-{{ .ctx.environment }}"
    svcWorkspaceName: 'arohcp-{{ .ctx.environment }}-{{ .ctx.regionShort }}'
    hcpWorkspaceName: 'arohcp-hcp-{{ .ctx.environment }}-{{ .ctx.regionShort }}'
    devAlertingEmails: ""
    sev1ActionGroupIDs: ""
    sev2ActionGroupIDs: ""
    sev3ActionGroupIDs: ""
    sev4ActionGroupIDs: ""
  # SVC cluster specifics
  svc:
    subscription: "hcp-{{ .ctx.environment }}-svc-{{ .ctx.region }}"
    rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.region }}-svc"
    nsp:
      name: nsp-{{ .ctx.regionShort }}-svc
    istio:
      istioctlVersion: "1.24.1"
      tag: "prod-stable"
      ingressGatewayIPAddressName: "aro-hcp-istio-ingress"
      ingressGatewayIPAddressIPTags: ""
    aks:
      name: "{{ .ctx.environment }}-{{ .ctx.region }}-svc-1" # [env-unique]
      vnetAddressPrefix: "10.128.0.0/14"
      subnetPrefix: "10.128.8.0/21"
      podSubnetPrefix: "10.128.64.0/18"
      kubernetesVersion: 1.31.8
      networkDataplane: "cilium"
      networkPolicy: "cilium"
      systemAgentPool:
        minCount: 1
        maxCount: 3
        vmSize: 'Standard_D2s_v3'
        osDiskSizeGB: 32
      userAgentPool:
        minCount: 1
        maxCount: 3
        vmSize: 'Standard_D2s_v3'
        osDiskSizeGB: 32
        azCount: 3
      infraAgentPool:
        minCount: 1
        maxCount: 3
        vmSize: 'Standard_D2s_v3'
        osDiskSizeGB: 32
        azCount: 3
      etcd:
        kvName: "ah-{{ .ctx.environment }}-se-{{ .ctx.regionShort }}-1" # [globally-unique]
        kvSoftDelete: true
      clusterOutboundIPAddressIPTags: ""
    logs:
      namespace: HCPServiceLogs
      san: ""
      configVersion: ""
    prometheus:
      namespace: prometheus
      namespaceLabel: ""
      prometheusOperator:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus-operator
          digest: a5bf4407cb83dc93d4e29ef680e0a4d621256e0f004822f53b2ff1c592bf2a82
        version: ""
      prometheusSpec:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus
          digest: 2dcc22f4a8ea5c198e1c9eb6e7f04d127c55924da72e0f4334e659633185283c
        version: ""
        replicas: 2
        shards: 2
  # MGMT cluster specifics
  mgmt:
    subscription: "hcp-{{ .ctx.environment }}-mgmt-{{ .ctx.region }}-{{ .ctx.stamp }}"
    rg: "hcp-underlay-{{ .ctx.environment }}-{{ .ctx.region }}-mgmt-{{ .ctx.stamp }}"
    applyKubeletFixes: true
    nsp:
      name: nsp-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}
    aks:
      name: "{{ .ctx.environment }}-{{ .ctx.region }}-mgmt-{{ .ctx.stamp }}" # [env-unique]
      vnetAddressPrefix: "10.128.0.0/14"
      subnetPrefix: "10.128.8.0/21"
      podSubnetPrefix: "10.128.64.0/18"
      kubernetesVersion: 1.31.8
      networkDataplane: "azure"
      networkPolicy: "azure"
      etcd:
        kvName: "ah-{{ .ctx.environment }}-me-{{ .ctx.regionShort }}-{{ .ctx.stamp }}" # [globally-unique]
        kvSoftDelete: true
      systemAgentPool:
        vmSize: 'Standard_E8s_v3'
        osDiskSizeGB: 128
        minCount: 1
      userAgentPool:
        vmSize: 'Standard_D16s_v3'
        osDiskSizeGB: 128
        minCount: 1
      infraAgentPool:
        minCount: 1
        maxCount: 3
        vmSize: 'Standard_D2s_v3'
        osDiskSizeGB: 32
        azCount: 3
      clusterOutboundIPAddressIPTags: ""
      enableSwiftV2: true
    logs:
      namespace: HCPCustomerLogs
      san: ""
      configVersion: ""
    prometheus:
      namespace: prometheus
      namespaceLabel: network.openshift.io/policy-group=monitoring
      prometheusOperator:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus-operator
        version: ""
      prometheusSpec:
        image:
          registry: mcr.microsoft.com/oss/v2
          repository: prometheus/prometheus
        version: "v2.55.1-3"
        replicas: 2
        shards: 2
  # Backend
  backend:
    image:
      registry: arohcpsvcdev.azurecr.io
      repository: arohcpbackend
    tracing:
      address: ""
      exporter: ""
  # Frontend
  frontend:
    image:
      registry: arohcpsvcdev.azurecr.io
      repository: arohcpfrontend
    tracing:
      address: ""
      exporter: ""
    cosmosDB:
      deploy: true
      disableLocalAuth: true
      name: "arohcp{{ .ctx.environment }}-rp-{{ .ctx.regionShort }}" # [globally-unique]
      private: true
      zoneRedundantMode: 'Auto'
    cert:
      name: frontend-cert-{{ .ctx.environment }}-{{ .ctx.regionShort }}
  # Mise
  mise:
    deploy: false
    azureAdInstance: ""
    firstPartyAppId: ""
    armInstance: ""
    armAppId: ""
    tenantId: ""
    image:
      repository: ""
      digest: ""
  # Maestro
  maestro:
    server:
      tracing:
        address: ""
        exporter: ""
      mqttClientName: 'maestro-server-{{ .ctx.regionShort }}'
      loglevel: 4
      managedIdentityName: maestro-server
      k8s:
        namespace: maestro
        serviceAccountName: maestro
    agent:
      consumerName: "hcp-underlay-{{ .ctx.regionShort }}-mgmt-{{ .ctx.stamp }}" # [env-unique]
      loglevel: 4
      sidecar:
        image:
          registry: mcr.microsoft.com
          repository: azurelinux/base/nginx
          digest: sha256:f203d7e49ce778f8464f403d2558c5d7162b1b9189657c6b32d4f70a99e0fe83
    eventGrid:
      name: "arohcp-{{ .ctx.environment }}-maestro-{{ .ctx.regionShort }}" # [globally-unique]
      maxClientSessionsPerAuthName: 6
      private: false
    postgres:
      name: "arohcp-{{ .ctx.environment }}-dbmaestro-{{ .ctx.regionShort }}" # [globally-unique]
      serverVersion: '15'
      serverStorageSizeGB: 32
      deploy: true
      private: false
      minTLSVersion: 'TLSV1.2'
      databaseName: maestro
      zoneRedundantMode: 'Auto'
    restrictIstioIngress: true
    certDomain: ""
    image:
      registry: quay.io
      repository: redhat-user-workloads/maestro-rhtap-tenant/maestro/maestro
  # PKO
  pko:
    imagePackage:
      registry: arohcpsvcdev.azurecr.io
      repository: package-operator/package-operator-package
      digest: sha256:a541ddb20875264f1995c38b1dd66de052547c2a861001b3b49c2a56b7e06e0d
    imageManager:
      registry: arohcpsvcdev.azurecr.io
      repository: package-operator/package-operator-manager
      digest: sha256:04b280a2dfcd89c433db32106e0f9a80b978c2513b979865df7a66dc67617e90
    imagePrefixOverrides: quay.io/package-operator=arohcpsvcdev.azurecr.io/package-operator
  # Cluster Service
  clustersService:
    image:
      registry: quay.io
      repository: app-sre/uhc-clusters-service
    tracing: # NOTE: Currently only enabled for pers.
      address: ""
      exporter: ""
    environment: "arohcp{{ .ctx.environment }}"
    postgres:
      name: "arohcp-{{ .ctx.environment }}-dbcs-{{ .ctx.regionShort }}" # [globally-unique]
      deploy: true
      private: false
      minTLSVersion: 'TLSV1.2'
      zoneRedundantMode: 'Auto'
    managedIdentityName: clusters-service
    k8s:
      namespace: clusters-service
      serviceAccountName: clusters-service
  # Image Sync
  imageSync:
    environmentName: aro-hcp-image-sync
    outboundServiceTags: ""
    componentSync:
      enabled: false
      repositories: ""
      secrets: ""
      image:
        registry: arohcpsvcdev.azurecr.io
        repository: image-sync/component-sync
        digest: ""
      pullSecretName: component-sync-pull-secret
    ocMirror:
      enabled: true
      image:
        registry: arohcpsvcdev.azurecr.io
        repository: image-sync/oc-mirror
      pullSecretName: ocmirror-pull-secret
  # Mock Managed Identities - not relevant for most MSFT envs
  miMockClientId: ""
  miMockPrincipalId: ""
  miMockCertName: ""
  armHelperClientId: ""
  armHelperFPAPrincipalId: ""
  armHelperCertName: ""
  # OIDC
  oidcStorageAccountName: "arohcp{{ .ctx.environment }}oidc{{ .ctx.regionShort }}" # [globally-unique]
  oidcZoneRedundantMode: Auto
  # Service Key Vault
  serviceKeyVault:
    name: "arohcp{{ .ctx.environment }}-svc-{{ .ctx.regionShort }}" # [globally-unique]
    rg: "{{ .ctx.region }}-shared-resources"
    region: "{{ .ctx.region  }}"
    softDelete: false
    private: false
    assignNSP: true
  # Management Cluster KV
  cxKeyVault:
    name: "ah-{{ .ctx.environment }}-cx-{{ .ctx.regionShort }}-{{ .ctx.stamp }}" # [globally-unique]
    softDelete: false
    private: false
  msiKeyVault:
    name: "ah-{{ .ctx.environment }}-mi-{{ .ctx.regionShort }}-{{ .ctx.stamp }}" # [globally-unique]
    softDelete: false
    private: false
  mgmtKeyVault:
    name: "ah-{{ .ctx.environment }}-mg-{{ .ctx.regionShort }}-{{ .ctx.stamp }}" # [globally-unique]
    softDelete: false
    private: false
clouds:
  public:
    defaults:
      releaseApprover:
        id: feca6a27-8f05-4abe-b9e4-e1185f5833ab
        name: TM-AzureRedHatOpenShift-HCP-Leads
      # Global
      global:
        region: uksouth
        secretsToSyncDir: 'msft-{{ .ctx.environment }}/arohcp{{ .ctx.environment }}-global'
      # DNS
      dns:
        baseDnsZoneRG: global-shared-resources
      # Monitoring
      monitoring:
        grafanaZoneRedundantMode: Disabled
        grafanaMajorVersion: "11"
      # Maestro
      maestro:
        certIssuer: OneCertV2-PrivateCA
      # RP Frontend
      frontend:
        cert:
          issuer: OneCertV2-PublicCA
      # Cluster Service
      clustersService:
        azureOperatorsManagedIdentities:
          # newly configured ARO-HCP builtin roles:
          clusterApiAzure:
            roleName: Azure Red Hat OpenShift Hosted Control Planes Cluster API Provider
          controlPlane:
            roleName: Azure Red Hat OpenShift Hosted Control Planes Control Plane Operator
          # Classic roles:
          cloudControllerManager:
            roleName: Azure Red Hat OpenShift Cloud Controller Manager
          ingress:
            roleName: Azure Red Hat OpenShift Cluster Ingress Operator
          diskCsiDriver:
            roleName: Azure Red Hat OpenShift Disk Storage Operator
          fileCsiDriver:
            roleName: Azure Red Hat OpenShift File Storage Operator
          imageRegistry:
            roleName: Azure Red Hat OpenShift Image Registry Operator
          cloudNetworkConfig:
            roleName: Azure Red Hat OpenShift Network Operator
          kms:
            roleName: Key Vault Crypto User
      # Logs
      logs:
        mdsd:
          cert:
            name: logs-mdsd
            type: x-pem-file # GCS certificate file in PEM format
            issuer: OneCertV2-PrivateCA
      # SVC cluster settings
      svc:
        logs:
          san: "svc.geneva.keyvault.aro-hcp-{{ .ctx.environment }}.azure.com"
      # MC cluster settings
      mgmt:
        logs:
          san: "mgmt.geneva.keyvault.aro-hcp-{{ .ctx.environment }}.azure.com"
      # Image Sync
      imageSync:
        outboundServiceTags: "FirstPartyUsage:/Unprivileged"
        ocMirror:
          image:
            digest: sha256:92dc2b18de0126caa2212f62c54023f6e8ecf12e2025c37a5f4151d0253ae14e
      # Mise
      mise:
        deploy: true
        azureAdInstance: https://login.microsoftonline.com/
        armInstance: https://management.azure.com
        armAppId: e2c2ff5c-e5b4-4e79-8c3e-1da8c48461e7
        tenantId: 33e01921-4d64-4f8c-a055-5bdaffd5e33d
        image:
          repository: mise
      # FPA certificate settings
      firstPartyAppCertificate:
        issuer: OneCertV2-PrivateCA
        manage: true
    environments:
      int:
        # this is the MSFT INT environment
        defaults:
          # Region for global resources in INT is uksouth
          global:
            safeDnsIntAppObjectId: "c54b6bce-1cd3-4d37-bebe-aa22f4ce4fbc"
          # Cluster Service
          clustersService:
            image:
              digest: sha256:7d6981f42a7bdfc1d75298918afbcc7fb698f4f67800538ab7d38ebddb284917
          # ACR Pull
          acrPull:
            image:
              digest: sha256:c802a91b3b0fe4a3875a03904140a14eb54c8b94db1d510946c9c438d28689c0 #v0.1.14
          # Backplane API
          backplaneAPI:
            image:
              digest: sha256:822477832a73c7eab7fe27200994f10030f708f4a752f33ded3f8f8eaa0470f6
          # Geneva Actions
          genevaActions:
            serviceTag: GenevaActionsNonProd
          # SVC cluster settings
          svc:
            aks:
              kubernetesVersion: 1.31.8
              clusterOutboundIPAddressIPTags: "FirstPartyUsage:/NonProd"
            istio:
              targetVersion: "asm-1-25"
              versions: "asm-1-25"
              ingressGatewayIPAddressIPTags: "FirstPartyUsage:/NonProd"
            logs:
              configVersion: "1.0"
            nsp:
              accessMode: 'Learning'
            prometheus:
              prometheusOperator:
                image:
                  digest: a5bf4407cb83dc93d4e29ef680e0a4d621256e0f004822f53b2ff1c592bf2a82
              prometheusSpec:
                image:
                  digest: 2dcc22f4a8ea5c198e1c9eb6e7f04d127c55924da72e0f4334e659633185283c
          # MC cluster settings
          mgmt:
            aks:
              # MGMTM AKS nodepools
              systemAgentPool:
                minCount: 1
                maxCount: 4
                azCount: 3
              userAgentPool:
                minCount: 1
                maxCount: 12
                azCount: 3
              clusterOutboundIPAddressIPTags: "FirstPartyUsage:/NonProd"
              kubernetesVersion: 1.31.8
            logs:
              configVersion: "1.0"
            nsp:
              accessMode: 'Learning'
            prometheus:
              prometheusOperator:
                image:
                  digest: a5bf4407cb83dc93d4e29ef680e0a4d621256e0f004822f53b2ff1c592bf2a82
              prometheusSpec:
                image:
                  digest: 2dcc22f4a8ea5c198e1c9eb6e7f04d127c55924da72e0f4334e659633185283c
          # DNS
          dns:
            regionalSubdomain: "{{ .ctx.region }}"
            cxParentZoneName: aroapp-hcp.azure-test.net
            cxParentZoneDelegation: true
            svcParentZoneName: aro-hcp.azure-test.net
            parentZoneName: azure-test.net
          # RP Frontend
          frontend:
            cosmosDB:
              private: false
            image:
              digest: sha256:aa1ae769ca6318aab0c9fe6cb2772416430aa5adb69eb69623d6198e580e08c3
          # Mise
          mise:
            firstPartyAppId: 5bc505bc-50ef-4be9-9a82-2ed7973f1c37 # This is the aro-hcp-fp-int app in the MSIT Tenant.
            image:
              digest: sha256:d56506305ea64f368c920e5e4bce6ee44415d4133559a548b82a81bbd1828f9b
          # RP Backend
          backend:
            image:
              digest: sha256:02a32af8d34c5725d0096ee7f94adf2ef151d0634e8682fe7517e6f9ebba9bdc
          # Hypershift
          hypershift:
            image:
              digest: sha256:930a2851e0ed5144901eabdb1247096fea527231a990ea764b27754b766ef821
          # Maestro
          maestro:
            image:
              digest: sha256:71788add6afc26829ef75432714fa3052c7dbc1d62d0002ff4c736a8038c18f4
          # 1P app - from RH Tenant
          firstPartyAppClientId: b8c3986a-6f66-4905-a935-03763eb9fbb3
          firstPartyAppCertificate:
            name: intFirstPartyCert
            manage: false
          # Mock Managed Identities Service Princiapl - from RH Tenant
          miMockClientId: f2e4769e-d3c2-498d-92b9-3e6d24cd2d7a
          miMockPrincipalId: a5c120f7-50c3-4cf6-84b4-57517f60630d
          miMockCertName: intMsiMockCert
          # ARM Helper - from RH Tenant
          armHelperClientId: 356c7253-24f3-4dc5-b4e1-498c73331cf4
          armHelperFPAPrincipalId: d663e08c-31a0-488a-8ecb-03af4fce5e83
          armHelperCertName: intArmHelperCert
          # Grafana
          monitoring:
            grafanaAdminGroupPrincipalId: "2fdb57d4-3fd3-415d-b604-1d0e37a188fe" # Azure Red Hat OpenShift MSFT Engineering.
          # Global MSI
          aroDevopsMsiId: "/subscriptions/5299e6b7-b23b-46c8-8277-dc1147807117/resourcegroups/global-shared-resources/providers/Microsoft.ManagedIdentity/userAssignedIdentities/global-ev2-identity"
          # Cert Officer used for KV signer registration
          kvCertOfficerPrincipalId: "32af88de-a61c-4f71-b709-50538598c4f2" # aro-ev2-admin-int-sp
          # Logs
          logs:
            mdsd:
              subscriptions:
                - 5299e6b7-b23b-46c8-8277-dc1147807117
      stg:
        # this is the MSFT STAGE environment
        defaults:
          # Cluster Service
          clustersService:
            image:
              digest: sha256:7d6981f42a7bdfc1d75298918afbcc7fb698f4f67800538ab7d38ebddb284917
          # ACR Pull
          acrPull:
            image:
              digest: sha256:c802a91b3b0fe4a3875a03904140a14eb54c8b94db1d510946c9c438d28689c0 #v0.1.14
          # Backplane API
          backplaneAPI:
            image:
              digest: sha256:822477832a73c7eab7fe27200994f10030f708f4a752f33ded3f8f8eaa0470f6
          # Geneva Actions
          genevaActions:
            serviceTag: GenevaActions
          # SVC cluster settings
          svc:
            aks:
              kubernetesVersion: 1.31.8
              clusterOutboundIPAddressIPTags: "FirstPartyUsage:/aro-hcp-prod-outbound-svc"
            istio:
              targetVersion: "asm-1-25"
              versions: "asm-1-25"
              ingressGatewayIPAddressIPTags: "FirstPartyUsage:/aro-hcp-prod-inbound-svc"
            logs:
              configVersion: "1.0"
            nsp:
              accessMode: 'Learning'
            prometheus:
              prometheusOperator:
                image:
                  digest: a5bf4407cb83dc93d4e29ef680e0a4d621256e0f004822f53b2ff1c592bf2a82
              prometheusSpec:
                image:
                  digest: 2dcc22f4a8ea5c198e1c9eb6e7f04d127c55924da72e0f4334e659633185283c
          # MC cluster settings
          mgmt:
            aks:
              kubernetesVersion: 1.31.8
              clusterOutboundIPAddressIPTags: "FirstPartyUsage:/aro-hcp-prod-outbound-cx"
              systemAgentPool:
                maxCount: 4
              userAgentPool:
                maxCount: 12
            logs:
              configVersion: "1.0"
            nsp:
              accessMode: 'Learning'
            prometheus:
              prometheusOperator:
                image:
                  digest: a5bf4407cb83dc93d4e29ef680e0a4d621256e0f004822f53b2ff1c592bf2a82
              prometheusSpec:
                image:
                  digest: 2dcc22f4a8ea5c198e1c9eb6e7f04d127c55924da72e0f4334e659633185283c
          # DNS
          dns:
            # we share the same DNS zones between staging and production
            # therefore it is crucial to use the staging suffix on the regional subdomain
            # in order to avoid a conflict with the production environment
            regionalSubdomain: "{{ .ctx.region }}staging"
            cxParentZoneName: aroapp-hcp.io
            cxParentZoneDelegation: false
            svcParentZoneName: aro-hcp.azure.com
            parentZoneName: azure.com
          # RP Frontend
          frontend:
            cosmosDB:
              private: false
            image:
              digest: sha256:aa1ae769ca6318aab0c9fe6cb2772416430aa5adb69eb69623d6198e580e08c3
          # Mise
          mise:
            firstPartyAppId: 7f4a113a-c61d-412a-bea1-85dee5baf4a8
            image:
              digest: sha256:d56506305ea64f368c920e5e4bce6ee44415d4133559a548b82a81bbd1828f9b
          # RP Backend
          backend:
            image:
              digest: sha256:02a32af8d34c5725d0096ee7f94adf2ef151d0634e8682fe7517e6f9ebba9bdc
          # Hypershift
          hypershift:
            image:
              digest: sha256:930a2851e0ed5144901eabdb1247096fea527231a990ea764b27754b766ef821
          # Maestro
          maestro:
            image:
              digest: sha256:71788add6afc26829ef75432714fa3052c7dbc1d62d0002ff4c736a8038c18f4
          # FPA app
          firstPartyAppClientId: "7f4a113a-c61d-412a-bea1-85dee5baf4a8"
          # FPA certificate settings
          firstPartyAppCertificate:
            name: tmp-rp-firstparty
            issuer: OneCertV2-PrivateCA
            manage: true
          # Grafana
          monitoring:
            grafanaAdminGroupPrincipalId: '' # EV2 currently only allows service principal role assignment, so leave it empty for now
          # Global MSI
          aroDevopsMsiId: '/subscriptions/9a53d80e-dae0-4c8a-af90-30575d253127/resourceGroups/global-shared-resources/providers/Microsoft.ManagedIdentity/userAssignedIdentities/global-ev2-identity'
          # Cert Officer used for KV signer registration
          kvCertOfficerPrincipalId: ce4e50ef-1059-4b6f-a53a-53001d517513 # objectId for 'aro-ev2-admin-prod-sp'
          # Logs
          logs:
            mdsd:
              subscriptions: [] # TBD
