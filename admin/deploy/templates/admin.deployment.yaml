apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-api
  namespace: '{{ .Release.Namespace }}'
  labels:
    app: admin-api
spec:
  replicas: {{ .Values.deployment.replicas }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: admin-api
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: admin-api
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
      - name: service
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}@{{ .Values.image.digest }}"
        imagePullPolicy: IfNotPresent
        args:
        - "--location"
        - "{{ .Values.location }}"
        ports:
        - containerPort: 8443
          protocol: TCP
        resources:
          requests:
            cpu: {{ .Values.deployment.requests.cpu }}
            memory: {{ .Values.deployment.requests.memory }}
          limits:
            cpu: {{ .Values.deployment.limits.cpu }}
            memory: {{ .Values.deployment.limits.memory }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
            # livenessProbe:
            #   httpGet:
            #     path: /healthz
            #     port: 8443
            #   initialDelaySeconds: 15
            #   periodSeconds: 20
            #   failureThreshold: 3
            # readinessProbe:
            #   httpGet:
            #     path: /healthz
            #     port: 8443
            #   initialDelaySeconds: 5
            #   periodSeconds: 10
