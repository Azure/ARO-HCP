apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    categories: A list of comma separated categories that your operator falls under.
    certified: "false"
    containerImage: quay.io/app-sre/route-monitor-operator:latest
    description: Operator to monitor ingress route for OpenShift Clusters.
    package-operator.run/phase: deploy
  creationTimestamp: null
  name: route-monitor-operator-controller-manager
  namespace: '{{ .Release.Namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: route-monitor-operator
      component: operator
      control-plane: controller-manager
  strategy: {}
  template:
    metadata:
      annotations:
        package-operator.run/phase: deploy
      creationTimestamp: null
      labels:
        app: route-monitor-operator
        component: operator
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/infra
                operator: Exists
            weight: 1
      containers:
      - args:
        - --zap-log-level=debug
        - --blackbox-image=$(BLACKBOX_IMAGE)
        - --blackbox-namespace=$(BLACKBOX_NAMESPACE)
        command:
        - /manager
        env:
        - name: LOG_LEVEL
          value: "1"
        - name: BLACKBOX_IMAGE
          value: '{{ .Values.imageRegistryBlackbox }}/{{ .Values.imageRepositoryBlackbox }}@sha256:{{ .Values.imageDigestBlackbox }}'
        - name: BLACKBOX_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPERATOR_IMAGE
          value: '{{ .Values.imageRegistryOperator }}/{{ .Values.imageRepositoryOperator }}@sha256:{{ .Values.imageDigestOperator }}'
        image: '{{ .Values.imageRegistryManager }}/{{ .Values.imageRepositoryManager }}@sha256:{{ .Values.imageDigestManager }}'
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 65532
      securityContext:
        runAsNonRoot: true
      serviceAccountName: route-monitor-operator-system
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/infra
        operator: Exists
status: {}
