---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: image-sync-template

parameters:
  - name: NAMESPACE
    required: true
    value: image-sync
  - name: COMPONENT_SYNC_IMAGE
    required: true
  - name: IMAGE_SYNC_CLIENT_ID
    required: true
    description: "Client ID of Frontend Managed Identity"
  - name: TENANT_ID
    description: "Tenant ID of the Subscription"
    required: true
  - name: KEYVAULT_NAME
    description: "Name of the KeyVault service in Azure"
    required: true
  - name: TARGET_REGISTRY
    description: "Name of the target registry"
    required: true
  - name: PULL_SECRET_NAME
    description: "Name of the pull secret in the KeyVault"
    required: true
  - name: QUAY_BEARER_SECRET_NAME
    description: "Name of the Quay.io bearer secret in the KeyVault"
    required: true

objects:
  - apiVersion: batch/v1
    kind: CronJob
    metadata:
      labels:
        run: component-sync
      name: component-sync
      namespace: ${NAMESPACE}
    spec:
      schedule: "*/5 * * * *"
      jobTemplate:
        spec:
          template:
            metadata:
              labels:
                run: component-sync
                azure.workload.identity/use: "true"
            spec:
              initContainers:
              - name: login
                image: mcr.microsoft.com/azure-cli:cbl-mariner2.0
                command: ['sh', '-c',
                          "az login --federated-token $(cat $AZURE_FEDERATED_TOKEN_FILE) --service-principal -u $AZURE_CLIENT_ID -t $AZURE_TENANT_ID; accessToken=$(az acr login --name ${TARGET_REGISTRY} --expose-token | grep accessToken |cut -d ':' -f2| tr -d ' \",') ; cat /tmp/secret-orig/pull-secret | base64 -d  |sed \"s/TOKENTOBEREPLACED/$accessToken/\" > /etc/containers/auth.json; cat /tmp/secret-orig/bearer-secret | base64 -d > /etc/containers/quayio-auth.json",
                          ]
                volumeMounts:
                - name: pull-secrets-updated
                  mountPath: "/etc/containers"
                - name: pull-secret
                  mountPath: "/tmp/secret-orig"
              containers:
              - image: ${COMPONENT_SYNC_IMAGE}
                name: component-sync
                args: ["-c", "/etc/component-sync/sync.yml"]
                env:
                  - name: XDG_RUNTIME_DIR
                    value: /etc/
                volumeMounts:
                - name: component-sync-config
                  mountPath: "/etc/component-sync"
                  readOnly: true
                - name: pull-secrets-updated
                  mountPath: "/etc/containers"
                  readOnly: true
                - name: workspace
                  mountPath: "/workspace"
              volumes:
              - name: component-sync-config
                configMap:
                  name: component-sync-config
              - name: workspace
                emptyDir: {}
              - name: pull-secrets-updated
                emptyDir: {}
              - name: pull-secret
                csi:
                  driver: secrets-store.csi.k8s.io
                  readOnly: true
                  volumeAttributes:
                    secretProviderClass: "component-sync-pullsecret"
              restartPolicy: Never
              serviceAccountName: image-sync
    status: {}
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: component-sync-config
      namespace: ${NAMESPACE}
    data:
      sync.yml: |
        repositories:
            - registry.k8s.io/external-dns/external-dns
            - quay.io/acm-d/rhtap-hypershift-operator
            - quay.io/app-sre/uhc-clusters-service
        numberOfTags: 10
        quaySecretfile: /etc/containers/quayio-auth.json
        acrRegistry: ${TARGET_REGISTRY}.azurecr.io
        tenantId: ${TENANT_ID}
  - apiVersion: secrets-store.csi.x-k8s.io/v1
    kind: SecretProviderClass
    metadata:
      name: component-sync-pullsecret
      namespace: ${NAMESPACE}
    spec:
      parameters:
        clientID: "${IMAGE_SYNC_CLIENT_ID}"
        cloudName: AzurePublicCloud
        keyvaultName: ${KEYVAULT_NAME}
        objects: |-
          array:
            - |
              objectName: ${PULL_SECRET_NAME}
              objectAlias: pull-secret
              objectType: secret
            - |
              objectName: ${QUAY_BEARER_SECRET_NAME}
              objectAlias: bearer-secret
              objectType: secret
        tenantId: ${TENANT_ID}
        usePodIdentity: "false"
      provider: azure
