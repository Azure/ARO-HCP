apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app.kubernetes.io/name: cluster-service
    app.kubernetes.io/part-of: cluster-service
    prometheus: k8s
    role: alert-rules
  name: cluster-service-slo-rules
  namespace: monitoring
spec:
  groups:
  # API Availability Recording Rules
  - name: arohcp_cs_api_availability_recording_rules
    interval: 1m
    rules:
    # 28-day rolling SLI
    - record: availability:api_inbound_request_count:sli_ratio_28d
      expr: |
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service",code!~"5..|0", service="clusters-service-metrics"}[28d])))
        /
        sum((max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[28d]))))
      labels:
        service: "clusters-service-metrics"
    # Burn rate recording rules for various time windows
    - record: availability:api_inbound_request_count:burnrate5m
      expr: |
        round(
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service",code=~"5..|0", service="clusters-service-metrics"}[5m])))
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[5m])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: availability:api_inbound_request_count:burnrate30m
      expr: |
        round(
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service",code=~"5..|0", service="clusters-service-metrics"}[30m])))
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[30m])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: availability:api_inbound_request_count:burnrate1h
      expr: |
        round(
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service",code=~"5..|0", service="clusters-service-metrics"}[1h])))
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[1h])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: availability:api_inbound_request_count:burnrate6h
      expr: |
        round(
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service",code=~"5..|0", service="clusters-service-metrics"}[6h])))
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[6h])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: availability:api_inbound_request_count:burnrate3d
      expr: |
        round(
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service",code=~"5..|0", service="clusters-service-metrics"}[3d])))
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[3d])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: availability:api_inbound_request_count:burnrate2h
      expr: |
        round(
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service",code=~"5..|0", service="clusters-service-metrics"}[2h])))
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[2h])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: availability:api_inbound_request_count:burnrate1d
      expr: |
        round(
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service",code=~"5..|0", service="clusters-service-metrics"}[1d])))
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[1d])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
  # API Latency Recording Rules
  - name: arohcp_cs_api_latency_recording_rules
    interval: 1m
    rules:
    # P99 Latency SLI (28-day)
    - record: latency:api_inbound_request_duration:p99_sli_ratio_28d
      expr: |
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="1", code!~"5..|0"}[28d])))
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[28d])))
      labels:
        service: "clusters-service-metrics"
    # P90 Latency SLI (28-day)
    - record: latency:api_inbound_request_duration:p90_sli_ratio_28d
      expr: |
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="0.1", code!~"5..|0"}[28d])))
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[28d])))
      labels:
        service: "clusters-service-metrics"
    # P99 Latency Burn Rate Recording Rules
    - record: latency:api_inbound_request_duration:p99_burnrate5m
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[5m])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="1", code!~"5..|0"}[5m])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[5m])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: latency:api_inbound_request_duration:p99_burnrate30m
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[30m])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="1", code!~"5..|0"}[30m])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[30m])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: latency:api_inbound_request_duration:p99_burnrate1h
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[1h])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="1", code!~"5..|0"}[1h])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[1h])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: latency:api_inbound_request_duration:p99_burnrate6h
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[6h])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="1", code!~"5..|0"}[6h])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[6h])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: latency:api_inbound_request_duration:p99_burnrate3d
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[3d])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="1", code!~"5..|0"}[3d])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[3d])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: latency:api_inbound_request_duration:p99_burnrate2h
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[2h])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="1", code!~"5..|0"}[2h])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[2h])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: latency:api_inbound_request_duration:p99_burnrate1d
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[1d])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="1", code!~"5..|0"}[1d])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[1d])))
        ) / (1 - 0.99), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    # P90 Latency Burn Rate Recording Rules
    - record: latency:api_inbound_request_duration:p90_burnrate5m
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[5m])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="0.1", code!~"5..|0"}[5m])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[5m])))
        ) / (1 - 0.90), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: latency:api_inbound_request_duration:p90_burnrate30m
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[30m])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="0.1", code!~"5..|0"}[30m])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[30m])))
        ) / (1 - 0.90), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: latency:api_inbound_request_duration:p90_burnrate1h
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[1h])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="0.1", code!~"5..|0"}[1h])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[1h])))
        ) / (1 - 0.90), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: latency:api_inbound_request_duration:p90_burnrate6h
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[6h])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="0.1", code!~"5..|0"}[6h])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[6h])))
        ) / (1 - 0.90), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: latency:api_inbound_request_duration:p90_burnrate3d
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[3d])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="0.1", code!~"5..|0"}[3d])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[3d])))
        ) / (1 - 0.90), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: latency:api_inbound_request_duration:p90_burnrate2h
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[2h])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="0.1", code!~"5..|0"}[2h])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[2h])))
        ) / (1 - 0.90), 0.01
        )
      labels:
        service: "clusters-service-metrics"
    - record: latency:api_inbound_request_duration:p90_burnrate1d
      expr: |
        round(
        (
        (
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[1d])))
        -
        sum(max without(prometheus_replica) (rate(api_inbound_request_duration_bucket{namespace="clusters-service", service="clusters-service-metrics", le="0.1", code!~"5..|0"}[1d])))
        )
        /
        sum(max without(prometheus_replica) (rate(api_inbound_request_count{namespace="clusters-service", service="clusters-service-metrics"}[1d])))
        ) / (1 - 0.90), 0.01
        )
      labels:
        service: "clusters-service-metrics"
  # Alerts for SLOs
  - name: arohcp_cs_slo_availability_alerts
    rules:
    # API Availability Alerts
    - alert: ClustersServiceAPIAvailability5mto1hor30mto6hErrorBudgetBurn
      annotations:
        description: 'API is rapidly burning its 28 day availability error budget (99% SLO)'
        runbook_url: 'aka.ms/arohcp-runbook/cs-slo-monitoring'
        summary: 'Cluster Service API availability error budget burn rate is too high'
      expr: |
        (
        sum(max without(prometheus_replica) (availability:api_inbound_request_count:burnrate5m{service="clusters-service-metrics"})) > 13.44
        and
        sum(max without(prometheus_replica) (availability:api_inbound_request_count:burnrate1h{service="clusters-service-metrics"})) > 13.44
        )
        or
        (
        sum(max without(prometheus_replica) (availability:api_inbound_request_count:burnrate30m{service="clusters-service-metrics"})) > 5.6
        and
        sum(max without(prometheus_replica) (availability:api_inbound_request_count:burnrate6h{service="clusters-service-metrics"})) > 5.6
        )
      for: 5m
      labels:
        long: 6h
        severity: warning
        short: 30m
    - alert: ClustersServiceAPIAvailability6hto3dErrorBudgetBurn
      expr: |
        sum(max without(prometheus_replica) (availability:api_inbound_request_count:burnrate6h{service="clusters-service-metrics"})) > 0.934
        and
        sum(max without(prometheus_replica) (availability:api_inbound_request_count:burnrate3d{service="clusters-service-metrics"})) > 0.934
      for: 30m
      labels:
        severity: warning
        slo: api-availability
      annotations:
        summary: "API is slowly but steadily burning its 28 day availability error budget (99% SLO)"
        description: "This indicates persistent underperformance that needs investigation to avoid an SLO breach. The alert will fire if the current burn rate exceeds 0.934 times the allowed rate for the last 6 hours and 3 days."
        runbook_url: "aka.ms/arohcp-runbook/cs-slo-monitoring"
    # API Latency Alerts - P99 (1s threshold)
    - alert: ClustersServiceAPILatency5mto1hor30mto6hP99ErrorBudgetBurn
      annotations:
        description: 'API is rapidly burning its 28 day 1s latency error budget (99% SLO)'
        runbook_url: 'aka.ms/arohcp-runbook/cs-slo-monitoring'
        summary: 'Cluster Service API P99 latency error budget burn rate is too high'
      expr: |
        (
        sum(max without(prometheus_replica) (latency:api_inbound_request_duration:p99_burnrate5m{service="clusters-service-metrics"})) > 13.44
        and
        sum(max without(prometheus_replica) (latency:api_inbound_request_duration:p99_burnrate1h{service="clusters-service-metrics"})) > 13.44
        )
        or
        (
        sum(max without(prometheus_replica) (latency:api_inbound_request_duration:p99_burnrate30m{service="clusters-service-metrics"})) > 5.6
        and
        sum(max without(prometheus_replica) (latency:api_inbound_request_duration:p99_burnrate6h{service="clusters-service-metrics"})) > 5.6
        )
      for: 5m
      labels:
        long: 6h
        severity: warning
        short: 30m
        slo: api-latency-p99
    - alert: ClustersServiceAPILatency6hto3dP99ErrorBudgetBurn
      expr: |
        sum(max without(prometheus_replica) (latency:api_inbound_request_duration:p99_burnrate6h{service="clusters-service-metrics"})) > 0.934
        and
        sum(max without(prometheus_replica) (latency:api_inbound_request_duration:p99_burnrate3d{service="clusters-service-metrics"})) > 0.934
      for: 30m
      labels:
        severity: warning
        slo: api-latency-p99
      annotations:
        summary: "API is slowly but steadily burning its 28 day 1s latency error budget (99% SLO)"
        description: "This indicates persistent underperformance that needs investigation to avoid an SLO breach. The alert will fire if the current burn rate exceeds 0.934 times the allowed rate for the last 6 hours and 3 days."
        runbook_url: "aka.ms/arohcp-runbook/cs-slo-monitoring"
    # API Latency Alerts - P90 (0.1s threshold)
    - alert: ClustersServiceAPILatency5mto1hor30mto6hP90ErrorBudgetBurn
      annotations:
        description: 'API is rapidly burning its 28 day 0.1s latency error budget (90% SLO)'
        runbook_url: 'aka.ms/arohcp-runbook/cs-slo-monitoring'
        summary: 'Cluster Service API P90 latency error budget burn rate is too high'
      expr: |
        (
        sum(max without(prometheus_replica) (latency:api_inbound_request_duration:p90_burnrate5m{service="clusters-service-metrics"})) > 13.44
        and
        sum(max without(prometheus_replica) (latency:api_inbound_request_duration:p90_burnrate1h{service="clusters-service-metrics"})) > 13.44
        )
        or
        (
        sum(max without(prometheus_replica) (latency:api_inbound_request_duration:p90_burnrate30m{service="clusters-service-metrics"})) > 5.6
        and
        sum(max without(prometheus_replica) (latency:api_inbound_request_duration:p90_burnrate6h{service="clusters-service-metrics"})) > 5.6
        )
      for: 5m
      labels:
        long: 6h
        severity: warning
        short: 30m
        slo: api-latency-p90
    - alert: ClustersServiceAPILatency6hto3dP90ErrorBudgetBurn
      expr: |
        sum(max without(prometheus_replica) (latency:api_inbound_request_duration:p90_burnrate6h{service="clusters-service-metrics"})) > 0.934
        and
        sum(max without(prometheus_replica) (latency:api_inbound_request_duration:p90_burnrate3d{service="clusters-service-metrics"})) > 0.934
      for: 30m
      labels:
        severity: warning
        slo: api-latency-p90
      annotations:
        summary: "API is slowly but steadily burning its 28 day 0.1s latency error budget (90% SLO)"
        description: "This indicates persistent underperformance that needs investigation to avoid an SLO breach. The alert will fire if the current burn rate exceeds 0.934 times the allowed rate for the last 6 hours and 3 days."
        runbook_url: "aka.ms/arohcp-runbook/cs-slo-monitoring"
