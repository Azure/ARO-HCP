image: '{{ .acr.svc.name }}.azurecr.io/{{ .secretSyncController.image.repository }}@{{ .secretSyncController.image.digest }}'
imagePullPolicy: IfNotPresent
# Configuration for validating admission policies
validatingAdmissionPolicies:
  applyPolicies: true
  allowedSecretTypes:
  - "Opaque"
  - "kubernetes.io/basic-auth"
  - "bootstrap.kubernetes.io/token"
  - "kubernetes.io/dockerconfigjson"
  - "kubernetes.io/dockercfg"
  - "kubernetes.io/ssh-auth"
  - "kubernetes.io/tls"
  deniedSecretTypes:
  - "kubernetes.io/service-account-token"
# Default values for controller configuration
controllerName: secrets-store-sync-controller-manager
tokenRequestAudience:
- audience: # e.g. api://TokenAudienceExample
# Metrics configuration
metricsPort: 8085
providerContainer:
- name: provider-azure-installer
  image: '{{ .secretSyncController.providerImage }}'
  imagePullPolicy: IfNotPresent
  args:
  - --endpoint=unix:///provider/azure.sock
  - --construct-pem-chain=true
  - --healthz-port=8989
  - --healthz-path=/healthz
  - --healthz-timeout=5s
  livenessProbe:
    httpGet:
      path: /healthz
      port: 8989
    failureThreshold: 3
    initialDelaySeconds: 5
    timeoutSeconds: 10
    periodSeconds: 30
  resources:
    requests:
      cpu: 50m
      memory: 100Mi
    limits:
      cpu: 50m
      memory: 100Mi
  ports:
  - containerPort: 8898
    name: metrics
    protocol: TCP
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsUser: 0
    capabilities:
      drop:
      - ALL
  volumeMounts:
  - mountPath: "/provider"
    name: providervol
