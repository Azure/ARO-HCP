$schema: "pipeline.schema.v1"
serviceGroup: Microsoft.Azure.ARO.HCP.ClusterService
rolloutName: Cluster Service Rollout
resourceGroups:
- name: global
  resourceGroup: '{{ .global.rg }}'
  subscription: '{{ .global.subscription.key }}'
  steps:
  - name: output
    action: ARM
    template: templates/output-global.bicep
    parameters: ./../dev-infrastructure/configurations/output-global.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
  - name: mirror-image
    action: ImageMirror
    targetACR:
      configRef: 'acr.svc.name'
    sourceRegistry:
      configRef: clustersService.image.registry
    repository:
      configRef: clustersService.image.repository
    digest:
      configRef: clustersService.image.digest
    pullSecretKeyVault:
      configRef: global.keyVault.name
    pullSecretName:
      configRef: imageSync.ondemandSync.pullSecretName
    shellIdentity:
      input:
        resourceGroup: global
        step: output
        name: globalMSIId
- name: management
  resourceGroup: '{{ .mgmt.rg }}'
  subscription: '{{ .mgmt.subscription.key }}'
  steps:
  - name: output
    action: ARM
    template: ../dev-infrastructure/templates/output-mgmt.bicep
    parameters: ../dev-infrastructure/configurations/output-mgmt.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
    externalDependsOn:
    - serviceGroup: Microsoft.Azure.ARO.HCP.Management.Infra
      resourceGroup: management
      step: cluster
    - serviceGroup: Microsoft.Azure.ARO.HCP.Management.Infra
      resourceGroup: management
      step: cs-akv-permissions
- name: service
  resourceGroup: '{{ .svc.rg }}'
  subscription: '{{ .svc.subscription.key }}'
  steps:
  - name: deploy
    aksCluster: '{{ .svc.aks.name }}'
    action: Shell
    command: make deploy
    dryRun:
      variables:
      - name: DRY_RUN
        value: "true"
    dependsOn:
    - resourceGroup: global
      step: mirror-image
    variables:
    - name: CX_SECRETS_KV_MI_CLIENT_ID
      input:
        resourceGroup: management
        step: output
        name: azureKeyvaultSecretsProviderIdentityClientId
    - name: OPERATOR_ROLE_SET_NAME
      configRef: clustersService.azureOperatorsManagedIdentities.roleSetName
    - name: REGION
      configRef: region
    - name: RESOURCEGROUP
      configRef: svc.rg
    - name: AKS_NAME
      configRef: svc.aks.name
    - name: SERVICE_KV
      configRef: serviceKeyVault.name
    - name: OIDC_STORAGE_ACCOUNT
      configRef: oidc.storageAccount.name
    - name: OIDC_SUBDOMAIN
      configRef: oidc.frontdoor.subdomain
    - name: IMAGE_REPO
      configRef: clustersService.image.repository
    - name: IMAGE_DIGEST
      configRef: clustersService.image.digest
    - name: ACR_NAME
      configRef: acr.svc.name
    - name: CS_BATCH_PROCESSES_DRY_RUN
      configRef: clustersService.batchProcessesDryRun
    - name: CS_BATCH_PROCESSES
      configRef: clustersService.batchProcesses
    - name: OCP_ACR_NAME
      configRef: acr.ocp.name
    - name: AZURE_FIRST_PARTY_APPLICATION_CLIENT_ID
      configRef: firstPartyAppClientId
    - name: FPA_CERT_NAME
      configRef: firstPartyAppCertificate.name
    - name: AZURE_MI_MOCK_SERVICE_PRINCIPAL_PRINCIPAL_ID
      configRef: miMockPrincipalId
    - name: AZURE_MI_MOCK_SERVICE_PRINCIPAL_CLIENT_ID
      configRef: miMockClientId
    - name: AZURE_ARM_HELPER_IDENTITY_CLIENT_ID
      configRef: armHelperClientId
    - name: AZURE_ARM_HELPER_MOCK_FPA_PRINCIPAL_ID
      configRef: armHelperFPAPrincipalId
    - name: MI_MOCK_SERVICE_PRINCIPAL_CERT_NAME
      configRef: miMockCertName
    - name: ARM_HELPER_CERT_NAME
      configRef: armHelperCertName
    - name: CX_PARENT_DNS_ZONE_NAME
      configRef: dns.cxParentZoneName
    - name: SVC_PARENT_DNS_ZONE_NAME
      configRef: dns.svcParentZoneName
    - name: REGIONAL_DNS_SUBDOMAIN
      configRef: dns.regionalSubdomain
    - name: USE_AZURE_DB
      configRef: clustersService.postgres.deploy
    - name: DATABASE_SERVER_NAME
      configRef: clustersService.postgres.name
    - name: ISTO_TAG
      configRef: svc.istio.tag
    - name: MI_NAME
      configRef: clustersService.managedIdentityName
    - name: NAMESPACE
      configRef: clustersService.k8s.namespace
    - name: SERVICE_ACCOUNT_NAME
      configRef: clustersService.k8s.serviceAccountName
    - name: REPLICAS
      configRef: clustersService.k8s.replicas
    - name: ENVIRONMENT
      configRef: clustersService.environment
    - name: DENYASSIGNMENTS
      configRef: clustersService.denyAssignments
    - name: MI_DATAPLANE_AUDIENCE_RESOURCE
      configRef: msiRp.dataPlaneAudienceResource
    - name: CS_DEPLOYMENT_ROLLINGUPDATE_MAX_SURGE
      configRef: clustersService.k8s.deploymentStrategy.rollingUpdate.maxSurge
    - name: CS_DEPLOYMENT_ROLLINGUPDATE_MAX_UNAVAILABLE
      configRef: clustersService.k8s.deploymentStrategy.rollingUpdate.maxUnavailable
    - name: OCP_ACR_RESOURCE_ID
      input:
        resourceGroup: global
        step: output
        name: ocpAcrResourceId
    - name: OCP_ACR_URL
      input:
        resourceGroup: global
        step: output
        name: ocpAcrLoginServer
    - name: PROVISION_SHARD_CLUSTER_LIMIT
      configRef: clustersService.provisionShardClusterLimit
    - name: OCP_VERSIONS_DEFAULT_VERSION_VERSION
      configRef: clustersService.ocpVersions.defaultVersion.version
    - name: OCP_VERSIONS_CHANNEL_GROUPS_STABLE_MIN_VERSION
      configRef: clustersService.ocpVersions.channelGroups.stable.minVersion
    - name: OCP_VERSIONS_CHANNEL_GROUPS_STABLE_MAX_VERSION
      configRef: clustersService.ocpVersions.channelGroups.stable.maxVersion
    # this is maestro consumer registration stuff
    # this goes away when we have a real registration process
    - name: CONSUMER_NAME
      configRef: maestro.agent.consumerName
    - name: REGIONAL_RESOURCEGROUP
      configRef: regionRG
    - name: MGMT_RESOURCEGROUP
      configRef: mgmt.rg
    - name: MGMT_AKS_NAME
      configRef: mgmt.aks.name
    - name: CX_SECRETS_KV_NAME
      configRef: cxKeyVault.name
    - name: CX_MI_KV_NAME
      configRef: msiKeyVault.name
    - name: TRACING_ADDRESS
      configRef: clustersService.tracing.address
    - name: TLS_CERTIFICATES_ISSUER
      configRef: clustersService.azureRuntimeConfig.tlsCertificatesIssuer
    shellIdentity:
      input:
        resourceGroup: global
        step: output
        name: globalMSIId
