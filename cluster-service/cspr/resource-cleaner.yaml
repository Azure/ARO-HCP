apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: resource-cleaner
  annotations:
    description: "CronJob to clean up leftover ARO-HCP resources from E2E tests"
parameters:
- name: RESOURCE_CLEANER_NAMESPACE
  description: The namespace for the resource cleaner cronjob
  value: resource-cleaner
- name: RESOURCE_CLEANER_CLUSTERROLE_NAME
  value: resource-cleaner
- name: AZURE_CLI_IMAGE
  description: Azure CLI base image with python3 and curl
  value: mcr.microsoft.com/azure-cli:2.78.0
- name: AZURE_CLIENT_ID
  description: Azure Workload Identity Client ID (required)
  required: true
- name: MAESTRO_URL
  description: Maestro API URL
  value: http://maestro.maestro.svc.cluster.local:8000
- name: RETENTION_HOURS
  description: Hours to retain resources before cleanup
  value: "3"
objects:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: ${RESOURCE_CLEANER_CLUSTERROLE_NAME}
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs: ["get", "list"]
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs: ["get", "list"]
- apiVersion: v1
  kind: Namespace
  metadata:
    name: ${RESOURCE_CLEANER_NAMESPACE}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: resource-cleaner-cronjob
    namespace: ${RESOURCE_CLEANER_NAMESPACE}
    annotations:
      azure.workload.identity/client-id: "${AZURE_CLIENT_ID}"
    labels:
      azure.workload.identity/use: "true"
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: resource-cleaner-cronjob
  subjects:
  - kind: ServiceAccount
    name: resource-cleaner-cronjob
    namespace: ${RESOURCE_CLEANER_NAMESPACE}
  roleRef:
    kind: ClusterRole
    name: ${RESOURCE_CLEANER_CLUSTERROLE_NAME}
    apiGroup: rbac.authorization.k8s.io
- apiVersion: batch/v1
  kind: CronJob
  metadata:
    name: resource-cleaner
    namespace: ${RESOURCE_CLEANER_NAMESPACE}
  spec:
    schedule: "0 0 * * *"  # Run once a day at midnight UTC
    successfulJobsHistoryLimit: 3
    failedJobsHistoryLimit: 3
    concurrencyPolicy: Forbid  # Don't run concurrent jobs
    jobTemplate:
      spec:
        backoffLimit: 2  # Retry up to 2 times on failure
        template:
          metadata:
            labels:
              azure.workload.identity/use: "true"
          spec:
            serviceAccountName: resource-cleaner-cronjob
            restartPolicy: Never
            containers:
            - name: resource-cleaner
              image: ${AZURE_CLI_IMAGE}
              imagePullPolicy: Always
              command: ["/bin/bash"]
              args:
              - -c
              - |
                set -euo pipefail
                
                echo "========================================"
                echo "ARO-HCP Resource Cleaner"
                echo "Started at: $(date -u)"
                echo "========================================"
                
                echo "Installing dependencies..."
                # Install jq and bash (Azure CLI image is Alpine-based)
                # python3 and curl are already included in the Azure CLI base image
                apk add --no-cache jq bash || {
                  echo "ERROR: Failed to install dependencies"
                  exit 1
                }
                
                echo "Verifying required tools..."
                which az jq python3 curl bash || {
                  echo "ERROR: Missing required tools (az, jq, python3, curl, bash)"
                  exit 1
                }
                
                echo "Copying scripts to /tmp and making executable..."
                cp -r /scripts/* /tmp/
                cd /tmp
                chmod +x *.sh
                
                echo "Logging into Azure using workload identity..."
                az login --identity || {
                  echo "ERROR: Failed to authenticate with Azure"
                  echo "Ensure workload identity is properly configured"
                  exit 1
                }
                
                echo "Verifying Azure authentication..."
                az account show
                
                echo "Starting resource cleanup..."
                
                # Run the resource cleaner
                ./resource-cleaner.sh ${RETENTION_HOURS} --maestro-url "${MAESTRO_URL}"
                
                EXIT_CODE=$?
                
                echo "========================================"
                echo "Resource Cleaner completed"
                echo "Exit code: ${EXIT_CODE}"
                echo "Finished at: $(date -u)"
                echo "========================================"
                
                exit ${EXIT_CODE}
              env:
              - name: RETENTION_HOURS
                value: "${RETENTION_HOURS}"
              - name: MAESTRO_URL
                value: "${MAESTRO_URL}"
              - name: DRY_RUN
                value: "false"
              volumeMounts:
              - name: scripts
                mountPath: /scripts
                readOnly: true
              resources:
                requests:
                  memory: "256Mi"
                  cpu: "100m"
                limits:
                  memory: "512Mi"
                  cpu: "500m"
            volumes:
            - name: scripts
              configMap:
                name: resource-cleaner-scripts
                defaultMode: 0755
