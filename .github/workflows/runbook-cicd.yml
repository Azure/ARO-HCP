name: Azure Automation Runbook CI/CD
on:
  pull_request:
    paths:
    - 'tooling/azure-automation/resources-cleanup/**'
    - 'dev-infrastructure/modules/automation-account/**'
    - 'dev-infrastructure/Makefile'
    - 'dev-infrastructure/configurations/dev-automation-account.bicepparam'
    - '.github/workflows/runbook-cicd.yml'
  push:
    branches:
    - main
    paths:
    - 'tooling/azure-automation/resources-cleanup/**'
    - 'dev-infrastructure/modules/automation-account/**'
    - 'dev-infrastructure/Makefile'
    - 'dev-infrastructure/configurations/dev-automation-account.bicepparam'
    - '.github/workflows/runbook-cicd.yml'
  workflow_dispatch:
    inputs:
      debug:
        required: false
        default: "false"
permissions:
  id-token: write
  contents: read
jobs:
  ci:
    name: Lint & Test Runbook
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 1
    - name: Set up Python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        cd tooling/azure-automation/resources-cleanup
        pip install -r requirements.txt
        pip install pylint pytest
    - name: Lint Python runbooks
      run: |
        cd tooling/azure-automation/resources-cleanup/src
        pylint resources_cleanup.py || true
    - name: Run unit tests
      run: |
        cd tooling/azure-automation/resources-cleanup/src
        pytest test_resources_cleanup.py
  bicep-dry-run:
    name: Bicep Dry Run
    runs-on: ubuntu-latest
    needs: ci
    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 1
    - name: Az CLI login
      uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Install Bicep CLI
      run: |
        az bicep install
    - name: Deploy Automation Account What If
      run: |
        cd dev-infrastructure/
        make automation-account.what-if
  cd:
    name: Deploy Runbook to Azure Automation
    runs-on: ubuntu-latest
    needs: [ci, bicep-dry-run]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 1
    - name: Az CLI login
      uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Deploy Automation Account
      run: |
        cd dev-infrastructure/
        make automation-account
