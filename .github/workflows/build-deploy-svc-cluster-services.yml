---
  name: Deploy Service Cluster Services
  on:
    pull_request:
      branches:
        - main
      paths:
        - '.github/workflows/build-deploy-svc-cluster-services.yml'
        - 'frontend/**'
        - 'cluster-service/**'
        - 'internal/**'
      types:
        - opened
        - synchronize
        - reopened
        - closed

  concurrency:
    group: ${{ github.workflow }}
    cancel-in-progress: false

  jobs:
    build_push_frontend:
      permissions:
        id-token: 'write'
        contents: 'read'
      runs-on: 'ubuntu-latest'
      steps:
        - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
          with:
            fetch-depth: 1

        - name: Build frontend container image
          env:
            ARO_HCP_IMAGE_ACR: devarohcp
          run: |
            cd frontend/
            make image

        - name: 'Az CLI login'
          if: github.event.pull_request.merged == true
          uses: azure/login@v2
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}


        - name: Push frontend container image
          if: github.event.pull_request.merged == true
          env:
            ARO_HCP_IMAGE_ACR: devarohcp
          run: |
            cd frontend/
            az acr login --name devarohcp
            make push

    deploy_frontend:
      if: github.event.pull_request.merged == true
      needs:
        - build_push_frontend
      permissions:
        id-token: 'write'
        contents: 'read'
      runs-on: 'ubuntu-latest'
      outputs:
        service_cluster_name: ${{ steps.find_service_cluster.name }}
      steps:
        - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
          with:
            fetch-depth: 1

        - name: 'Az CLI login'
          uses: azure/login@6c251865b4e6290e7b78be643ea2d005bc51f69a # v2.1.1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        - name: 'Find service cluster'
          id: find_service_cluster
          uses: azure/cli@965c8d7571d2231a54e321ddd07f7b10317f34d9 # v2.0.0
          env:
            RESOURCEGROUP: aro-hcp-dev
          with:
            azcliversion: latest
            inlineScript: |
              echo "name=$(az aks list --resource-group "${RESOURCEGROUP}" --output tsv --query "[?tags.clusterType == 'svc-cluster'].name | [0]")" >> $GITHUB_OUTPUT

        - uses: azure/setup-kubectl@3e0aec4d80787158d308d7b364cb1b702e7feb7f # v4.0.0

        - uses: azure/use-kubelogin@76597ae0fcbaace21b05e13a2cbf8daee2c6e820 # v1.2
          with:
            kubelogin-version: 'v0.1.3'

        - name: 'Setup kubectl for service cluster'
          uses: azure/aks-set-context@37037e33d3a2fc08abe40c887d81c3f6e1eb93b9 # v4.0.0
          with:
            resource-group: 'aro-hcp-dev'
            cluster-name: ${{ steps.find_service_cluster.outputs.name }}
            use-kubelogin: 'true'

        - name: 'Deploy Frontend'
          env:
            RESOURCEGROUP: aro-hcp-dev
          run: |
            cd frontend/
            make kustomize-update
            make kustomize-deploy

    deploy_cluster_service:
      if: github.event.pull_request.merged == true
      permissions:
        id-token: 'write'
        contents: 'read'
      runs-on: 'ubuntu-latest'
      outputs:
        service_cluster_name: ${{ steps.find_service_cluster.name }}
      steps:
        - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
          with:
            fetch-depth: 1

        - name: 'Az CLI login'
          uses: azure/login@6c251865b4e6290e7b78be643ea2d005bc51f69a # v2.1.1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        - name: 'Find service cluster'
          id: find_service_cluster
          uses: azure/cli@965c8d7571d2231a54e321ddd07f7b10317f34d9 # v2.0.0
          env:
            RESOURCEGROUP: aro-hcp-dev
          with:
            azcliversion: latest
            inlineScript: |
              echo "name=$(az aks list --resource-group "${RESOURCEGROUP}" --output tsv --query "[?tags.clusterType == 'svc-cluster'].name | [0]")" >> $GITHUB_OUTPUT

        - uses: azure/setup-kubectl@3e0aec4d80787158d308d7b364cb1b702e7feb7f # v4.0.0

        - uses: azure/use-kubelogin@76597ae0fcbaace21b05e13a2cbf8daee2c6e820 # v1.2
          with:
            kubelogin-version: 'v0.1.3'

        - name: 'Install oc'
          env:
            RESOURCEGROUP: aro-hcp-dev
          run: |
            curl -sfLo - https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.15.9/openshift-client-linux.tar.gz | tar xzf -
            sudo mv oc /usr/local/bin/oc
            chmod +x /usr/local/bin/oc

        - name: 'Setup kubectl for service cluster'
          uses: azure/aks-set-context@37037e33d3a2fc08abe40c887d81c3f6e1eb93b9 # v4.0.0
          with:
            resource-group: 'aro-hcp-dev'
            cluster-name: ${{ steps.find_service_cluster.outputs.name }}
            use-kubelogin: 'true'

        - name: 'Deploy Cluster Service'
          env:
            RESOURCEGROUP: aro-hcp-dev
          run: |
            cd cluster-service/
            make deploy

    deploy_maestro:
      if: github.event.pull_request.merged == true
      permissions:
        id-token: 'write'
        contents: 'read'
      runs-on: 'ubuntu-latest'
      outputs:
        service_cluster_name: ${{ steps.find_service_cluster.name }}
      steps:
        - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
          with:
            fetch-depth: 1

        - name: 'Az CLI login'
          uses: azure/login@6c251865b4e6290e7b78be643ea2d005bc51f69a # v2.1.1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        - name: 'Find service cluster'
          id: find_service_cluster
          uses: azure/cli@965c8d7571d2231a54e321ddd07f7b10317f34d9 # v2.0.0
          env:
            RESOURCEGROUP: aro-hcp-dev
          with:
            azcliversion: latest
            inlineScript: |
              echo "name=$(az aks list --resource-group "${RESOURCEGROUP}" --output tsv --query "[?tags.clusterType == 'svc-cluster'].name | [0]")" >> $GITHUB_OUTPUT
        - uses: azure/setup-kubectl@3e0aec4d80787158d308d7b364cb1b702e7feb7f # v4.0.0

        - uses: azure/use-kubelogin@76597ae0fcbaace21b05e13a2cbf8daee2c6e820 # v1.2
          with:
            kubelogin-version: 'v0.1.3'

        - name: 'Install oc'
          env:
            RESOURCEGROUP: aro-hcp-dev
          run: |
            curl -sfLo - https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.15.9/openshift-client-linux.tar.gz | tar xzf -
            sudo mv oc /usr/local/bin/oc
            chmod +x /usr/local/bin/oc
        - name: 'Setup kubectl for service cluster'
          uses: azure/aks-set-context@37037e33d3a2fc08abe40c887d81c3f6e1eb93b9 # v4.0.0
          with:
            resource-group: 'aro-hcp-dev'
            cluster-name: ${{ steps.find_service_cluster.outputs.name }}
            use-kubelogin: 'true'

        - name: 'Deploy Maestro'
          env:
            RESOURCEGROUP: aro-hcp-dev
          run: |
            cd maestro/
            make deploy-server
