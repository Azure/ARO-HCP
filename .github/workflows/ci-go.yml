name: 'ci-go'
on:
  pull_request:
    branches:
    - 'main'
jobs:
  test:
    permissions:
      id-token: 'write'
      contents: 'read'
    runs-on: 'ubuntu-latest'
    steps:
    - name: "install azure-cli"
      uses: "Azure/ARO-HCP@main"
    - uses: azure/use-kubelogin@76597ae0fcbaace21b05e13a2cbf8daee2c6e820 # v1.2
      with:
        kubelogin-version: 'v0.1.3'
    - name: 'Az CLI login'
      uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 1
    - name: 'Set up Go'
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version-file: 'go.work'
        check-latest: true
    - name: 'Install promtool'
      run: |
        cd $(mktemp -d)
        curl -sfLo - https://github.com/prometheus/prometheus/releases/download/v3.2.1/prometheus-3.2.1.linux-amd64.tar.gz | tar xzf -
        sudo mv prometheus-3.2.1.linux-amd64/promtool /usr/local/bin/promtool
        chmod +x /usr/local/bin/promtool
    - name: 'Check Go modules'
      run: |
        make all-tidy
        if [[ ! -z "$(git status --short)" ]]
        then
          echo "there are some modified files, rerun 'make all-tidy' to update them and check the changes in"
          git status
          exit 1
        fi
    - name: 'Regenerate mocks'
      run: |
        make mocks fmt
        if [[ ! -z "$(git status --short)" ]]
        then
          echo "there are some modified files, rerun 'make mocks' to update them and check the changes in"
          git status
          exit 1
        fi
    - name: 'Test'
      run: JOB_ID=${{ github.job }} PRINCIPAL_ID=${{ secrets.GHA_PRINCIPAL_ID }} make test
  lint:
    permissions:
      contents: 'read'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 1
    - name: 'Set up Go'
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version-file: 'go.work'
        check-latest: true
    - name: 'Lint'
      uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
      with:
        # The repo's top-level Makefile parses the version of golangci-lint from here
        version: v2.1.0
        args: '-v --build-tags=containers_image_openpgp,E2Etests $(go list -f ''{{.Dir}}/...'' -m | xargs)'
