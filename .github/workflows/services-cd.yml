name: ARO HCP Deploy Service Components
env:
  DEPLOY_ENV: ${{ inputs.deploy_env }}
  SKIP_CONFIRM: true
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  PRINCIPAL_ID: ${{ secrets.GHA_PRINCIPAL_ID }}
  PERSIST: true
on:
  workflow_call:
    inputs:
      deploy_env:
        description: 'The deploy environment to use for service deployments'
        required: true
        type: string
      deploy_cs_pr_check_deps:
        description: 'Deploy PR check environment dependencies'
        required: false
        default: false
        type: boolean
    secrets:
      AZURE_CLIENT_ID:
        description: 'Azure Client ID'
        required: true
      AZURE_TENANT_ID:
        description: 'Azure Tenant ID'
        required: true
      AZURE_SUBSCRIPTION_ID:
        description: 'Azure Subscription ID'
        required: true
concurrency:
  group: ${{ github.workflow }}-service-cd-${{ inputs.deploy_env }}
  cancel-in-progress: false
jobs:
  deploy_to_service_cluster:
    permissions:
      id-token: 'write'
      contents: 'read'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 1
    - name: "install azure-cli"
      uses: "Azure/ARO-HCP@main"
    - name: 'Az CLI login'
      uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - uses: azure/setup-kubectl@776406bce94f63e41d621b960d78ee25c8b76ede # v4.0.1
    # Used to deploy Cluster Service
    - name: 'Install oc'
      run: |
        curl -sfLo - https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.15.9/openshift-client-linux.tar.gz | tar xzf -
        sudo mv oc /usr/local/bin/oc
        chmod +x /usr/local/bin/oc
    # Used to deploy Maestro Server, Frontend
    - uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
      with:
        version: 'v3.13.3'
    - uses: azure/use-kubelogin@76597ae0fcbaace21b05e13a2cbf8daee2c6e820 # v1.2
      with:
        kubelogin-version: 'v0.1.3'
    - uses: oras-project/setup-oras@v1
      with:
        version: 1.2.3
    # Prepare kubeconfig
    - name: 'Prepare kubeconfig'
      run: |
        cd dev-infrastructure/
        make svc.aks.kubeconfig
    - name: 'Deploy Frontend'
      run: |
        make frontend.deploy_pipeline
    - name: 'Deploy Backend'
      run: |
        make backend.deploy_pipeline
    - name: 'Deploy Cluster Service'
      if: ${{ ! inputs.deploy_cs_pr_check_deps }}
      run: |
        make cluster-service.deploy_pipeline
    - name: 'Deploy Maestro'
      run: |
        make maestro.server.deploy_pipeline
    - name: 'Deploy Observability/Tracing'
      run: |
        make observability.tracing.deploy_pipeline
      # - name: 'Deploy Backplane API'
      #  run: |
      #     make backplane-api.deploy_pipeline
    - name: 'Deploy CS PR check environment dressup'
      if: inputs.deploy_cs_pr_check_deps
      run: |
        ./svc-deploy.sh ${DEPLOY_ENV} cluster-service svc deploy-pr-env-deps
  deploy_to_management_cluster:
    permissions:
      id-token: 'write'
      contents: 'read'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 1
    - name: "install azure-cli"
      uses: "Azure/ARO-HCP@main"
    - name: 'Az CLI login'
      uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - uses: azure/setup-kubectl@776406bce94f63e41d621b960d78ee25c8b76ede # v4.0.1
    - uses: azure/use-kubelogin@76597ae0fcbaace21b05e13a2cbf8daee2c6e820 # v1.2
      with:
        kubelogin-version: 'v0.1.3'
    - uses: oras-project/setup-oras@v1
      with:
        version: 1.2.3
    - uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
      with:
        version: 'v3.13.3'
    # Prepare kubeconfig
    - name: 'Prepare kubeconfig'
      run: |
        cd dev-infrastructure/
        make mgmt.aks.kubeconfig
    - name: 'Deploy ACM'
      run: |
        make acm.deploy_pipeline
    - name: 'Deploy PKO'
      run: |
        make pko.deploy_pipeline
    - name: 'Deploy Maestro Agent'
      run: |
        make maestro.agent.deploy_pipeline
    - name: 'Deploy Hypershift Operator and External DNS Operator'
      run: |
        make hypershiftoperator.deploy_pipeline
    - name: 'Deploy Secret Sync Controller'
      run: |
        make secret-sync-controller.deploy_pipeline
    - name: 'Deploy Observability/Tracing'
      run: |
        make observability.tracing.deploy_pipeline
    - name: 'Deploy Route Monitor Operator'
      run: |
        make route-monitor-operator.deploy_pipeline
    - name: 'Register Management Cluster with Service Cluster'
      run: |
        make mgmt-registration.deploy_pipeline
