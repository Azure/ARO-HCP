---
name: Build Dev Infra
on:
  pull_request:
    branches:
      - main
    paths:
      - 'dev-infrastructure/**/*.bicep'
      - '.github/workflows/bicep-what-if.yml'
      - '.github/workflows/build-dev-infra.yml'
    types:
      - closed
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  deploy_update_infra:
    if: github.event.pull_request.merged == true
    permissions:
      id-token: 'write'
      contents: 'read'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 1

      - name: 'Az CLI login'
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Deploy or Update'
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            SC_RESOURCEGROUP="aro-hcp-dev"
            MC_RESOURCEGROUP="aro-hcp-dev-mc"
            REGION=westus3
            cd dev-infrastructure/

            az group create -g "${SC_RESOURCEGROUP}" -l "${REGION}" --tags persist=true
            az group create -g "${MC_RESOURCEGROUP}" -l "${REGION}" --tags persist=true

            # dev Azure Container Registry (ACR)
            az deployment group create \
              --name "dev-acr-${GITHUB_RUN_ID}" \
              --resource-group "${SC_RESOURCEGROUP}" \
              --template-file templates/dev-acr.bicep \
              --parameters configurations/dev-acr.bicepparam

            # service cluster
            az deployment group create \
              --name "svc-cluster-${GITHUB_RUN_ID}" \
              --resource-group "${SC_RESOURCEGROUP}" \
              --template-file templates/svc-cluster.bicep \
              --parameters configurations/mvp-svc-cluster.bicepparam \
              --parameters currentUserId="${GITHUB_ACTOR}" \
              --parameters maestroInfraResourceGroup="${SC_RESOURCEGROUP}"

            # management cluster
            az deployment group create \
              --name "mgmt-cluster-${GITHUB_RUN_ID}" \
              --resource-group "${MC_RESOURCEGROUP}" \
              --template-file templates/mgmt-cluster.bicep \
              --parameters configurations/mvp-mgmt-cluster.bicepparam \
              --parameters currentUserId="${GITHUB_ACTOR}" \
              --parameters maestroInfraResourceGroup="${SC_RESOURCEGROUP}" \
              --parameters zoneResourceGroup="${SC_RESOURCEGROUP}"

            MGMT_CLUSTER_NAME=$(az deployment group show --resource-group "${MC_RESOURCEGROUP}" --name "mgmt-cluster-${GITHUB_RUN_ID}" --output tsv --query properties.outputs.aksClusterName.value)
            SVC_CLUSTER_NAME=$(az deployment group show --resource-group "${SC_RESOURCEGROUP}" --name "svc-cluster-${GITHUB_RUN_ID}" --output tsv --query properties.outputs.aksClusterName.value)
            COSMOS_DB_NAME=$(az deployment group show --resource-group "${SC_RESOURCEGROUP}" --name "svc-cluster-${GITHUB_RUN_ID}" --output tsv --query properties.outputs.cosmosDBName.value)

            # service cluster rolebindings
            az deployment group create \
              --name "svc-rolebindings-${GITHUB_RUN_ID}" \
              --resource-group "${SC_RESOURCEGROUP}" \
              --template-file templates/dev-aks-roleassignments.bicep \
              --parameters aksClusterName=${SVC_CLUSTER_NAME} \
              --parameters cosmosDBName=${COSMOS_DB_NAME} \
              --parameters grantCosmosAccess=true \
              --parameters githubActionsPrincipalID=${{ secrets.GHA_PRINCIPAL_ID }}

            # management cluster rolebindings
            az deployment group create \
              --name "mgmt-rolebindings-${GITHUB_RUN_ID}" \
              --resource-group "${MC_RESOURCEGROUP}" \
              --template-file templates/dev-aks-roleassignments.bicep \
              --parameters aksClusterName=${MGMT_CLUSTER_NAME} \
              --parameters cosmosDBName=${COSMOS_DB_NAME} \
              --parameters grantCosmosAccess=false \
              --parameters githubActionsPrincipalID=${{ secrets.GHA_PRINCIPAL_ID }}
