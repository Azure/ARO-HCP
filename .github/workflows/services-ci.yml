name: ARO HCP Dev Environment Continuous Deployment
env:
  DEPLOY_ENV: dev
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #AZURE_AUTHORITY_HOST: https://login.microsoftonline.com/
  PRINCIPAL_ID: ${{ secrets.GHA_PRINCIPAL_ID }}
on:
  workflow_call:
    inputs:
      push:
        description: 'Push to the registry'
        required: true
        type: boolean
    secrets:
      AZURE_CLIENT_ID:
        description: 'Azure Client ID'
        required: true
      AZURE_TENANT_ID:
        description: 'Azure Tenant ID'
        required: true
      AZURE_SUBSCRIPTION_ID:
        description: 'Azure Subscription ID'
        required: true
concurrency:
  group: ${{ github.workflow }}-service-ci
  cancel-in-progress: false
jobs:
  build_push_frontend:
    permissions:
      id-token: 'write'
      contents: 'read'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 1
    - name: Build frontend container image
      run: |
        cd frontend/
        make image
    - name: "install azure-cli"
      if: inputs.push == true
      uses: "Azure/ARO-HCP@main"
    - name: 'Az CLI login'
      if: inputs.push == true
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Push frontend container image
      if: inputs.push == true
      run: |
        cd frontend/
        make push
  build_push_backend:
    permissions:
      id-token: 'write'
      contents: 'read'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 1
    - name: Build backend container image
      run: |
        cd backend/
        make image
    - name: "install azure-cli"
      if: inputs.push == true
      uses: "Azure/ARO-HCP@main"
    - name: 'Az CLI login'
      if: inputs.push == true
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Push backend container image
      if: inputs.push == true
      run: |
        cd backend/
        make push
  build_push_ocmirror:
    permissions:
      id-token: 'write'
      contents: 'read'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 1
    - name: Build oc-mirror container image
      run: |
        cd image-sync/oc-mirror
        make image
    - name: "install azure-cli"
      if: inputs.push == true
      uses: "Azure/ARO-HCP@main"
    - name: 'Az CLI login'
      if: inputs.push == true
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Push oc-mirror container image
      if: inputs.push == true
      run: |
        cd image-sync/oc-mirror
        make push
  build_push_imagesync:
    permissions:
      id-token: 'write'
      contents: 'read'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 1
    - name: Build image-sync container image
      run: |
        cd tooling/image-sync
        make image
    - name: "install azure-cli"
      if: inputs.push == true
      uses: "Azure/ARO-HCP@main"
    - name: 'Az CLI login'
      if: inputs.push == true
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Push image-sync container image
      if: inputs.push == true
      run: |
        cd tooling/image-sync
        make push
