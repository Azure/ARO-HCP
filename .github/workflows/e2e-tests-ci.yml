name: ARO HCP E2E Testing
env:
  LOCATION: westus3
  CUSTOMER_SUBSRIPTION: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  CUSTOMER_TENANT: ${{ secrets.AZURE_TENANT_ID }}
  CUSTOMER_RG_NAME: customer-net-rg-${{ github.run_id }}-${{ github.run_attempt }}
  CUSTOMER_VNET_NAME: aro-hcp-vnet-${{ github.run_id }}-${{ github.run_attempt }}
  CUSTOMER_VNET_SUBNET1: aro-hcp-subnet-${{ github.run_id }}-${{ github.run_attempt }}
  CUSTOMER_NSG_NAME: aro-hcp-nsg-${{ github.run_id }}-${{ github.run_attempt }}
  CLUSTER_NAME: test-cluster-${{ github.run_id }}-${{ github.run_attempt }}
  NODEPOOL_NAME: np-1
on:
  pull_request:
    branches:
    - 'main'
    paths:
    - 'admin/**'
    - 'backend/**'
    - 'frontend/**'
    - 'internal/**'
    - 'test/**'
    - 'tooling/**'
    - 'go.work'
jobs:
  E2Etests:
    permissions:
      contents: 'read'
    runs-on: 'ubuntu-latest'
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 1
    - name: "Install azure-cli"
      uses: "Azure/ARO-HCP@main"
    - name: 'Azure-cli login'
      uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2.2.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: "Parse and load default env variables for Test Setup"
      working-directory: ./test/setup
      run: |
        while read line; do
          IFS=' ' read -a arr <<< "$line"
          if [ "${arr[0]}" == "export" ]; then
            echo "${arr[1]}" >> $GITHUB_ENV
          fi
        done < env.defaults
    - name: "Run Test Setup"
      run: ./test/setup.sh
    - name: 'Set up Go'
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version-file: 'go.work'
        check-latest: true
    - name: Run E2E setup-validation tests
      run: |
        AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}
        AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}
        go run github.com/onsi/ginkgo/v2/ginkgo run --tags E2Etests --label-filter='Setup-Validation' ./test/e2e/
    - name: Run core E2E tests
      working-directory: ./test/e2e
      run: |
        AZURE_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}
        AZURE_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}
        make run
    - name: Run Teardown
      if: always()
      run: ./test/teardown.sh
