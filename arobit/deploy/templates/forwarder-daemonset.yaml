---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: arobit-forwarder
  labels:
    app.kubernetes.io/name: arobit-forwarder
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: arobit-forwarder
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: arobit-forwarder
      app.kubernetes.io/instance: '{{ .Release.Name }}'
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: arobit-forwarder
        app.kubernetes.io/instance: '{{ .Release.Name }}'
        app: arobit-forwarder
    spec:
      serviceAccountName: '{{ .Values.forwarder.serviceAccountName }}'
      priorityClassName: '{{ .Values.forwarder.priorityClassName | quote }}'
      shareProcessNamespace: true
      containers:
        - name: fluentbit
          image: {{ .Values.forwarder.fluentbit.image.registry }}/{{ .Values.forwarder.fluentbit.image.repository }}@{{ .Values.forwarder.fluentbit.image.digest }}
          imagePullPolicy: '{{ .Values.forwarder.fluentbit.image.pullPolicy }}'
          command:
            - /fluent-bit/bin/fluent-bit
          args:
            - -c
            - /forwarder/etc/fluent-bit.conf
          ports:
            {{- if .Values.forwarder.fluentbit.containerPorts }}
            {{- toYaml .Values.forwarder.fluentbit.containerPorts | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          securityContext: 
            privileged: false
            allowPrivilegeEscalation: false
            runAsUser: 0
            runAsGroup: 0
            capabilities:
              drop: ['ALL']
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: flb-config
              mountPath: /forwarder/etc
              readOnly: true
        {{- if .Values.forwarder.mdsd.enabled }}
        - name: mdsd
          image: {{ .Values.forwarder.mdsd.image.registry }}/{{ .Values.forwarder.mdsd.image.repository }}@{{ .Values.forwarder.mdsd.image.digest }}
          imagePullPolicy: '{{ .Values.forwarder.mdsd.image.pullPolicy }}'
          command:
              - /start_mdsd.sh
          env:
            - name: MONITORING_CONFIG_VERSION
              value: '{{ .Values.forwarder.mdsd.geneva.configVersion }}'
            - name: MONITORING_GCS_ACCOUNT
              value: '{{ .Values.forwarder.mdsd.geneva.accountName }}'
            - name: MONITORING_GCS_AUTH_ID_TYPE
              value: 
            - name: MONITORING_MANAGED_ID_IDENTIFIER
              value:  
            - name: MONITORING_MANAGED_ID_VALUE
              value: '{{ .Values.forwarder.mdsd.geneva.managedIdentityId }}'
            - name: MONITORING_GCS_ENVIRONMENT
              value: '{{ .Values.forwarder.mdsd.geneva.environment }}'
            - name: MONITORING_GCS_NAMESPACE
              value: '{{ .Values.forwarder.mdsd.geneva.namespace }}'
            - name: MONITORING_GCS_REGION
              value: '{{ .Values.forwarder.mdsd.geneva.region }}'
            {{- range $key,$value := .Values.forwarder.mdsd.env }}
            - name: '{{ $key | upper | quote }}'
              value: '{{ $value | quote }}'
            {{- end }}
          lifecycle: 
            preStop:
              exec:
                command:
                - "/bin/sleep"
                - "60"
          securityContext: 
            privileged: false
            allowPrivilegeEscalation: false
            runAsUser: 0
            runAsGroup: 0
            capabilities:
              add: []
              drop: []
          volumeMounts:
            - name: mdsd-run
              mountPath: /var/run/mdsd/
            {{- if ne .Values.forwarder.mdsd.env.MDSD_LOG_OPTIONS "-D" }}
            - name: mdsd-logs
              mountPath: /geneva/geneva_logs/
            {{- end }}
            - name: cacrt-host
              mountPath: /etc/ssl/certs/ca-certificates.crt
              readOnly: true
        {{- end }}
      volumes:
        - name: sp-host
          hostPath:
            type: Directory
            path: /etc/kubernetes/
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: cacrt-host
          hostPath:
            type: File
            path: /etc/ssl/certs/ca-certificates.crt
        - name: mdsd-run
          emptyDir: {}
        {{- if ne .Values.forwarder.mdsd.env.MDSD_LOG_OPTIONS "-D" }}
        - name: mdsd-logs
          emptyDir: {}
        {{- end }}
        - name: flb-config
          configMap:
            name: arobit-forwarder
            defaultMode: 0755