---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: arobit-forwarder
  labels:
    app.kubernetes.io/name: arobit-forwarder
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: arobit-forwarder
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: arobit-forwarder
      app.kubernetes.io/instance: '{{ .Release.Name }}'
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: arobit-forwarder
        app.kubernetes.io/instance: '{{ .Release.Name }}'
        app: arobit-forwarder
    spec:
      serviceAccountName: {{ .Values.forwarder.serviceAccountName }}
      priorityClassName: {{ .Values.forwarder.priorityClassName | quote }}
      shareProcessNamespace: true
      containers:
        - name: fluentbit
          image: {{ .Values.forwarder.fluentbit.image.registry }}/{{ .Values.forwarder.fluentbit.image.repository }}@{{ .Values.forwarder.fluentbit.image.digest }}
          imagePullPolicy: '{{ .Values.forwarder.fluentbit.image.pullPolicy }}'
          command:
            - /fluent-bit/bin/fluent-bit
          args:
            - -c
            - /forwarder/etc/fluent-bit.conf
          ports:
            - name: http
              containerPort: 2020
              protocol: TCP
            - name: otlp-http
              containerPort: 4318
              protocol: TCP
            - name: forward
              containerPort: 24224
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          securityContext: 
            privileged: false
            allowPrivilegeEscalation: false
            runAsUser: 0
            runAsGroup: 0
            capabilities:
              drop: ['ALL']
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: flb-config
              mountPath: /forwarder/etc
              readOnly: true
        {{- if .Values.forwarder.mdsd.enabled }}
        - name: mdsd
          image: {{ .Values.forwarder.mdsd.image.registry }}/{{ .Values.forwarder.mdsd.image.repository }}@{{ .Values.forwarder.mdsd.image.digest }}
          imagePullPolicy: '{{ .Values.forwarder.mdsd.image.pullPolicy }}'
          command:
              - /start_mdsd.sh
          env:
            - name: MONITORING_GCS_AUTH_ID
              value: {{ .Values.forwarder.mdsd.geneva.rpSan }}
            - name: MONITORING_GCS_AUTH_ID_TYPE
              value: AuthKeyVault
            - name: MDSD_AKV_CERTIFICATE_STORE_PATH
              value: /geneva/geneva_auth
            - name: MONITORING_CONFIG_VERSION
              value: '{{ .Values.forwarder.mdsd.geneva.configVersion }}'
            - name: MONITORING_GCS_ACCOUNT
              value: '{{ .Values.forwarder.mdsd.geneva.rpAccountName }}'
            - name: MONITORING_GCS_ENVIRONMENT
              value: '{{ .Values.forwarder.mdsd.geneva.environment }}'
            - name: MONITORING_GCS_NAMESPACE
              value: '{{ .Values.forwarder.mdsd.geneva.rpNamespace }}'
            - name: MONITORING_GCS_REGION
              value: '{{ .Values.forwarder.mdsd.geneva.region }}'
            - name: DOCKER_LOGGING
              value: 'true'
            - name: FLUENTD_PORT
              value: '5001'
            - name: GCS_AUTOMATIC_CONFIGURATION
              value: '1'
            - name: GCS_AUTOMATIC_CONFIG_RUNTIME
              value: '-A'
            - name: MDSD_BACKPRESSURE_MONITOR_FREQ_SEC
              value: '5'
            - name: MDSD_BACKPRESSURE_MONITOR_MEMORY_THRESHOLD_IN_MB
              value: '1000'
            - name: MDSD_COMPRESSION_ALGORITHM
              value: 'lz4'
            - name: MDSD_COMPRESSION_LEVEL
              value: '4'
            - name: MDSD_DAEMON_TEMPORARY_ELEVATION_DISABLED
              value: 'true'
            - name: MDSD_DEBUG_LOG_FLAGS
              value: '-T 0x00'
            - name: MDSD_LOG_OPTIONS
              value: '-D'
            - name: MDSD_MSGPACK_ARRAY_SIZE_ITEMS
              value: '10480000'
            - name: MDSD_MSGPACK_MAP_SIZE_ITEMS
              value: '10480000'
            - name: MDSD_MSGPACK_NESTING_LEVEL
              value: '10'
            - name: MDSD_MSGPACK_SEND_ACK
              value: '0'
            - name: MDSD_MSGPACK_SORT_COLUMNS
              value: '1'
            - name: MDSD_PORT
              value: '0'
            - name: MDSD_TCMALLOC_RELEASE_FREQ_SEC
              value: '1'
            - name: MDSD_USE_LOCAL_PERSISTENCY
              value: 'false'
            - name: MONITORING_MAX_EVENT_RATE
              value: '100000'
          lifecycle: 
            preStop:
              exec:
                command:
                - "/bin/sleep"
                - "60"
          securityContext: 
            privileged: false
            allowPrivilegeEscalation: false
            runAsUser: 0
            runAsGroup: 0
            capabilities:
              add: []
              drop: []
          volumeMounts:
            - name: mdsd-run
              mountPath: /var/run/mdsd/
            - name: cacrt-host
              mountPath: /etc/ssl/certs/ca-certificates.crt
              readOnly: true
            - mountPath: /geneva/geneva_auth/
              name: geneva-certs
              readOnly: true
        {{- if .Values.forwarder.clusterType | eq "mgmt" }}
        - name: mdsd-clusterlogs
          image: {{ .Values.forwarder.mdsd.image.registry }}/{{ .Values.forwarder.mdsd.image.repository }}@{{ .Values.forwarder.mdsd.image.digest }}
          imagePullPolicy: '{{ .Values.forwarder.mdsd.image.pullPolicy }}'
          command:
              - /start_mdsd.sh
          env:
            - name: MONITORING_GCS_AUTH_ID
              value: {{ .Values.forwarder.mdsd.geneva.clusterLogsSan }}
            - name: MONITORING_GCS_AUTH_ID_TYPE
              value: AuthKeyVault
            - name: MDSD_AKV_CERTIFICATE_STORE_PATH
              value: /geneva/geneva_auth
            - name: MONITORING_CONFIG_VERSION
              value: '{{ .Values.forwarder.mdsd.geneva.configVersion }}'
            - name: MONITORING_GCS_ACCOUNT
              value: '{{ .Values.forwarder.mdsd.geneva.clusterLogsAccountName }}'
            - name: MONITORING_GCS_ENVIRONMENT
              value: '{{ .Values.forwarder.mdsd.geneva.environment }}'
            - name: MONITORING_GCS_NAMESPACE
              value: '{{ .Values.forwarder.mdsd.geneva.clusterLogsNamespace }}'
            - name: MONITORING_GCS_REGION
              value: '{{ .Values.forwarder.mdsd.geneva.region }}'
            - name: DOCKER_LOGGING
              value: 'true'
            - name: FLUENTD_PORT
              value: '5002'
            - name: GCS_AUTOMATIC_CONFIGURATION
              value: '1'
            - name: GCS_AUTOMATIC_CONFIG_RUNTIME
              value: '-A'
            - name: MDSD_BACKPRESSURE_MONITOR_FREQ_SEC
              value: '5'
            - name: MDSD_BACKPRESSURE_MONITOR_MEMORY_THRESHOLD_IN_MB
              value: '1000'
            - name: MDSD_COMPRESSION_ALGORITHM
              value: 'lz4'
            - name: MDSD_COMPRESSION_LEVEL
              value: '4'
            - name: MDSD_DAEMON_TEMPORARY_ELEVATION_DISABLED
              value: 'true'
            - name: MDSD_DEBUG_LOG_FLAGS
              value: '-T 0x00'
            - name: MDSD_LOG_OPTIONS
              value: '-D'
            - name: MDSD_MSGPACK_ARRAY_SIZE_ITEMS
              value: '10480000'
            - name: MDSD_MSGPACK_MAP_SIZE_ITEMS
              value: '10480000'
            - name: MDSD_MSGPACK_NESTING_LEVEL
              value: '10'
            - name: MDSD_MSGPACK_SEND_ACK
              value: '0'
            - name: MDSD_MSGPACK_SORT_COLUMNS
              value: '1'
            - name: MDSD_PORT
              value: '0'
            - name: MDSD_TCMALLOC_RELEASE_FREQ_SEC
              value: '1'
            - name: MDSD_USE_LOCAL_PERSISTENCY
              value: 'false'
            - name: MONITORING_MAX_EVENT_RATE
              value: '100000'
          lifecycle: 
            preStop:
              exec:
                command:
                - "/bin/sleep"
                - "60"
          securityContext: 
            privileged: false
            allowPrivilegeEscalation: false
            runAsUser: 0
            runAsGroup: 0
            capabilities:
              add: []
              drop: []
          volumeMounts:
            - name: mdsd-run
              mountPath: /var/run/mdsd/
            - name: cacrt-host
              mountPath: /etc/ssl/certs/ca-certificates.crt
              readOnly: true
            - mountPath: /geneva/geneva_auth/
              name: geneva-certs-clusterlogs
              readOnly: true
        {{- end }}
        {{- end }}
      volumes:
        - name: sp-host
          hostPath:
            type: Directory
            path: /etc/kubernetes/
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: cacrt-host
          hostPath:
            type: File
            path: /etc/ssl/certs/ca-certificates.crt
        - name: mdsd-run
          emptyDir: {}
        - name: flb-config
          configMap:
            name: arobit-forwarder
            defaultMode: 0755
        {{- if .Values.forwarder.mdsd.enabled }}
        - name: geneva-certs
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: arobit-secretprovider
          {{- if .Values.forwarder.clusterType | eq "mgmt" }}
        - name: geneva-certs-clusterlogs
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: arobit-secretprovider-clusterlogs
          {{- end }}
        {{- end }}