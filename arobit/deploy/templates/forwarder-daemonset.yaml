---
{{- if .Values.forwarder.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "arobit.name" . }}-forwarder
  {{- if .Values.forwarder.annotations }}
  annotations: {{- include "arobit.tplValue" (dict "value" .Values.forwarder.annotations "context" $) | nindent 4 }}
  {{- end }}
  labels: {{- include "arobit.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ include "arobit.name" . }}-forwarder
    app.kubernetes.io/instance: {{ .Release.Name }}
    ## Istio Labels: https://istio.io/docs/ops/deployment/requirements/
    app: {{ include "arobit.name" . }}-forwarder
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "arobit.name" . }}-forwarder
      app.kubernetes.io/instance: {{ .Release.Name }}
  updateStrategy: {{- toYaml .Values.forwarder.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels: {{- include "arobit.labels" . | nindent 8 }}
        app.kubernetes.io/name: {{ include "arobit.name" . }}-forwarder
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: {{ include "arobit.name" . }}-forwarder
        {{- if .Values.forwarder.podLabels }}
        {{- include "arobit.tplValue" (dict "value" .Values.forwarder.podLabels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/forwarder-configmap.yaml") . | sha256sum }}
        {{- if .Values.forwarder.podAnnotations }}
        {{- include "arobit.tplValue" (dict "value" .Values.forwarder.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "arobit.forwarder.serviceAccountName" . }}
      priorityClassName: {{ .Values.forwarder.priorityClassName | quote }}
      {{- if .Values.imqePullSecrets }}
      imagePullSecrets:  {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- if .Values.forwarder.affinity }}
      affinity: {{- include "arobit.tplValue" (dict "value" .Values.forwarder.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.forwarder.nodeSelector }}
      nodeSelector: {{- include "arobit.tplValue" (dict "value" .Values.forwarder.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.forwarder.tolerations }}
      tolerations: {{- include "arobit.tplValue" (dict "value" .Values.forwarder.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.forwarder.securityContext.enabled }}
      securityContext: {{- omit .Values.forwarder.securityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      shareProcessNamespace: true
      containers:
        - name: fluentbit
          image: {{ .Values.forwarder.fluentbit.image.registry }}/{{ .Values.forwarder.fluentbit.image.repository }}@{{ .Values.forwarder.fluentbit.image.digest }}
          imagePullPolicy: {{ .Values.forwarder.fluentbit.image.pullPolicy }}
          command:
            - /fluent-bit/bin/fluent-bit
          args:
            - -c
            - /forwarder/etc/fluent-bit.conf
          ports:
            {{- if .Values.forwarder.fluentbit.containerPorts }}
            {{- toYaml .Values.forwarder.fluentbit.containerPorts | nindent 12 }}
            {{- end }}
          {{- if .Values.forwarder.fluentbit.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: http
            initialDelaySeconds: {{ .Values.forwarder.fluentbit.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.forwarder.fluentbit.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.forwarder.fluentbit.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.forwarder.fluentbit.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.forwarder.fluentbit.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.forwarder.fluentbit.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: http
            initialDelaySeconds: {{ .Values.forwarder.fluentbit.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.forwarder.fluentbit.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.forwarder.fluentbit.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.forwarder.fluentbit.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.forwarder.fluentbit.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.forwarder.fluentbit.resources }}
          resources: {{- toYaml .Values.forwarder.fluentbit.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.forwarder.fluentbit.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.forwarder.fluentbit.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{ end }}
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: flb-config
              mountPath: /forwarder/etc
              readOnly: true
        {{- if .Values.forwarder.mdsd.enabled }}
        - name: mdsd
          image: {{ .Values.forwarder.mdsd.image.registry }}/{{ .Values.forwarder.mdsd.image.repository }}@{{ .Values.forwarder.mdsd.image.digest }}
          imagePullPolicy: {{ .Values.forwarder.mdsd.image.pullPolicy }}
          command: {{- toYaml .Values.forwarder.mdsd.command | nindent 12 }}
          args: {{- toYaml .Values.forwarder.mdsd.args | nindent 12 }}
          ports:
            {{- if .Values.forwarder.mdsd.containerPorts }}
            {{- toYaml .Values.forwarder.mdsd.containerPorts | nindent 12 }}
            {{- end }}
          env:
            {{- range $key,$value := .Values.forwarder.mdsd.env }}
            - name: {{ $key | upper | quote }}
              value: {{ $value | quote }}
            {{- end }}
          {{- if .Values.forwarder.mdsd.lifecycle }}
          lifecycle: {{- toYaml .Values.forwarder.mdsd.lifecycle | nindent 12 }}
          {{- end }}
          {{- if .Values.forwarder.mdsd.resources }}
          resources: {{- toYaml .Values.forwarder.mdsd.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.forwarder.mdsd.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.forwarder.mdsd.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{ end }}
          volumeMounts:
            - name: mdsd-run
              mountPath: /var/run/mdsd/
            {{- if ne .Values.forwarder.mdsd.env.MDSD_LOG_OPTIONS "-D" }}
            - name: mdsd-logs
              mountPath: /geneva/geneva_logs/
            {{- end }}
            - name: cacrt-host
              mountPath: /etc/ssl/certs/ca-certificates.crt
              readOnly: true
            - mountPath: /geneva/geneva_auth/
              name: geneva-certs
              readOnly: true
        {{- end }}
      volumes:
        - name: sp-host
          hostPath:
            type: Directory
            path: /etc/kubernetes/
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: cacrt-host
          hostPath:
            type: File
            path: /etc/ssl/certs/ca-certificates.crt
        - name: geneva-certs
          {{- if .Values.forwarder.secretProvider.enabled }}
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "arobit.name" . }}-forwarder-secretprovider
            {{- if .Values.forwarder.secretProvider.useNodePublishSecret }}
            nodePublishSecretRef:
              name: {{ include "arobit.name" . }}-forwarder-kv-creds
            {{- end }}
          secret:
            secretName: {{ include "arobit.name" . }}-forwarder
          {{- end }}
        - name: mdsd-run
          emptyDir: {}
        {{- if ne .Values.forwarder.mdsd.env.MDSD_LOG_OPTIONS "-D" }}
        - name: mdsd-logs
          emptyDir: {}
        {{- end }}
        - name: flb-config
          configMap:
            name: {{ include "arobit.name" . }}-forwarder
            defaultMode: 0755
{{- end }}
