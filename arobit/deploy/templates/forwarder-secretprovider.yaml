{{- if .Values.forwarder.secretProvider.enabled }}
{{- if .Values.forwarder.secretProvider.useNodePublishSecret }}
# The secret the CSI Driver will use to access the KeyVault. This will be replaced with a Managed Identity.
kind: Secret
apiVersion: v1
data:
  "clientid": {{ .Values.forwarder.secretProvider.clientId | b64enc | quote }}
  "clientsecret": {{ .Values.forwarder.secretProvider.clientSecret | b64enc | quote }}
metadata:
  labels:
    secrets-store.csi.k8s.io/used: "true"
  name: {{ include "arobit.name" . }}-forwarder-kv-creds
type: Opaque

---
{{- end }}

apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: {{ include "arobit.name" . }}-forwarder-secretprovider
  {{- with .Values.forwarder.secretProvider.labels }}
  labels:
{{ toYaml . | indent 4 }}
  {{- end }}
spec:
  provider: azure
  parameters:
    usePodIdentity: {{ .Values.forwarder.secretProvider.usePodIdentity | quote }}
    useVMManagedIdentity: {{ .Values.forwarder.secretProvider.useMsi | quote }}
    {{- if .Values.forwarder.secretProvider.useMsi }}
    userAssignedIdentityID: {{ .Values.forwarder.secretProvider.msiClientId | quote }}
    {{- else if .Values.forwarder.secretProvider.useWorkloadIdentity }}
    clientID: {{ .Values.forwarder.secretProvider.msiClientId | quote }}
    {{- end }}
    keyvaultName: "{{.Values.forwarder.secretProvider.keyVault}}"
    cloudName: "{{.Values.forwarder.secretProvider.cloudName}}"
    cloudEnvFileName: "{{.Values.forwarder.secretProvider.cloudEnvFileName}}"
    objects:  |
      array:
        - |
          objectName: "{{.Values.forwarder.secretProvider.gcsCertSecret}}"
          objectAlias: "gcscert.pem"
          objectType: secret
    tenantId: "{{.Values.forwarder.secretProvider.tenantId}}"

{{- end }}
