apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: maestro-agent
  name: maestro-agent
  namespace: '{{ .Release.Namespace  }}'
spec:
  selector:
    matchLabels:
      app: maestro-agent
  template:
    metadata:
      labels:
        app: maestro-agent
      annotations:
        checksum/credsstore: '{{ include (print $.Template.BasePath "/maestro.secretproviderclass.yaml") . | sha256sum  }}'
        checksum/config: '{{ include (print $.Template.BasePath "/maestro.secret.yaml") . | sha256sum  }}'
    spec:
      initContainers:
      - name: init
        image: "{{ .Values.sideCar.image.registry }}/{{ .Values.sideCar.image.repository }}@{{ .Values.sideCar.image.digest }}"
        env:
        - name: TOKEN
          valueFrom:
            secretKeyRef:
              name: metrics-access-token
              key: token
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/
        - name: nginx-config-tmp
          mountPath: /tmp/nginx/nginx.conf
          subPath: nginx.conf
        command:
        - sh
        - -c
        - cp /tmp/nginx/nginx.conf /etc/nginx/nginx.conf && sed -i "s/TOKEN/$TOKEN/g" /etc/nginx/nginx.conf
      containers:
      - name: metrics-proxy
        image: "{{ .Values.sideCar.image.registry }}/{{ .Values.sideCar.image.repository }}@{{ .Values.sideCar.image.digest }}"
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        command: ["/bin/sh", "-c", "nginx -g 'daemon off;'"]
      - command:
        - /usr/local/bin/maestro
        - agent
        - --consumer-name={{ .Values.consumerName }}
        - --workload-source-driver=mqtt
        - --workload-source-config=/secrets/maestro/config.yaml
        - --cloudevents-client-id={{ .Values.consumerName }}-work-agent
        - -v={{ .Values.glog_v }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}@{{ .Values.image.digest }}"
        imagePullPolicy: IfNotPresent
        name: maestro-agent
        volumeMounts:
        - mountPath: /secrets/maestro
          name: maestro
        - mountPath: /secrets/mqtt-creds
          name: mqtt-creds
          readOnly: true
      serviceAccountName: maestro
      volumes:
      - name: nginx-config-tmp
        configMap:
          name: nginx-config
      - name: nginx-config
        emptyDir: {}
      - name: maestro
        secret:
          secretName: maestro
      - csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: maestro
        name: mqtt-creds
