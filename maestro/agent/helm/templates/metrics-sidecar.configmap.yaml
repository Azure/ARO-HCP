apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: {{ .Release.Namespace }}
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_0
          address:
            socket_address:
              address: 0.0.0.0
              port_value: {{ .Values.metricsProxy.port }}
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/metrics"
                              route:
                                cluster: local_service
                    http_filters:
                      - name: envoy.filters.http.credential_injector
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.credential_injector.v3.CredentialInjector
                          allow_request_without_credential: false
                          overwrite: true
                          credential:
                            name: envoy.http.injected_credentials.generic
                            typed_config:
                              "@type": type.googleapis.com/envoy.extensions.http.injected_credentials.generic.v3.Generic
                              credential:
                                name: credential-bearer
                              header: "Authorization"
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                          upstream_http_filters:
                          - name: upstream_header
                            typed_config:
                              '@type': type.googleapis.com/envoy.extensions.filters.http.header_mutation.v3.HeaderMutation
                              mutations:
                                request_mutations:
                                  append:
                                    append_action: OVERWRITE_IF_EXISTS
                                    header:
                                      key: "Authorization"
                                      value: "Bearer %REQ(Authorization)%"
                          - name: envoy.filters.http.upstream_codec
                            typed_config:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.upstream_codec.v3.UpstreamCodec


      secrets:
      - name: credential-bearer
        generic_secret:
          secret:
            filename: /var/run/secrets/kubernetes.io/serviceaccount/token

      clusters:
        - name: local_service
          connect_timeout: 0.25s
          type: LOGICAL_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: local_service
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: localhost
                          port_value: 8443
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
