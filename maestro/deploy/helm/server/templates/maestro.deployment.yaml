kind: Deployment
apiVersion: apps/v1
metadata:
  name: maestro
  namespace: {{ .Release.Namespace }}
  labels:
    app: maestro
spec:
  selector:
    matchLabels:
      app: maestro
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: maestro
      annotations:
        checksum/credsstore: {{ include (print $.Template.BasePath "/maestro.secretproviderclass.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/maestro.secret.yaml") . | sha256sum }}
        checksum/db: {{ include (print $.Template.BasePath "/pg.secret.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ .Values.maestro.serviceAccount }}
      volumes:
      - name: db
        secret:
          secretName: maestro-db
      - name: maestro
        secret:
          secretName: maestro
      - name: mqtt-creds
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "maestro"
      initContainers:
      - name: migration
        image: "{{ .Values.image.base }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: db
          mountPath: /secrets/db
        command:
        - /usr/local/bin/maestro
        - migration
        - --db-host-file=/secrets/db/db.host
        - --db-port-file=/secrets/db/db.port
        - --db-user-file=/secrets/db/db.user
        - --db-password-file=/secrets/db/db.password
        - --db-name-file=/secrets/db/db.name
        - --db-sslmode={{ .Values.database.ssl }}
        - --alsologtostderr
        - -v={{ .Values.maestro.glog_v }}
      containers:
      - name: service
        image: "{{ .Values.image.base }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: db
          mountPath: /secrets/db
        - name: maestro
          mountPath: /secrets/maestro
        - name: mqtt-creds
          mountPath: /secrets/mqtt-creds
          readOnly: true
        env:
          - name: "AMS_ENV"
            value: "production"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
        command:
        - /usr/local/bin/maestro
        - server
        - --client-id=maestro-$(POD_NAME)
        - --subscription-type=broadcast
        - --db-host-file=/secrets/db/db.host
        - --db-port-file=/secrets/db/db.port
        - --db-user-file=/secrets/db/db.user
        - --db-password-file=/secrets/db/db.password
        - --db-name-file=/secrets/db/db.name
        - --db-rootcert=/secrets/db/db.ca_cert
        - --db-sslmode={{ .Values.database.ssl }}
        - --db-max-open-connections={{ .Values.database.maxOpenConnections }}
        - --message-broker-config-file=/secrets/maestro/config.yaml
        - --message-broker-type=mqtt
        - --enable-ocm-mock=true
        - --enable-jwt=false
        - --enable-https=false
        - --enable-grpc-server=true
        - --server-hostname=
        - --http-server-bindport={{ .Values.maestro.httpBindPort }}
        - --grpc-server-bindport={{ .Values.maestro.grpcBindPort }}
        - --health-check-server-bindport={{ .Values.maestro.healthCheckBindPort }}
        - --enable-health-check-https=false
        - --enable-authz=true
        - --enable-db-debug={{ .Values.database.debug }}
        - --enable-metrics-https=false
        - --enable-sentry=false
        - --http-read-timeout={{ .Values.maestro.httpReadTimeout }}
        - --http-write-timeout={{ .Values.maestro.httpWriteTimeout }}
        - --label-metrics-inclusion-duration={{ .Values.maestro.labelMetricsInclusionDuration }}
        - --alsologtostderr
        - -v={{ .Values.maestro.glog_v }}
        resources:
          requests:
            cpu: {{ .Values.deployment.requests.cpu }}
            memory: {{ .Values.deployment.requests.memory }}
          limits:
            cpu: {{ .Values.deployment.limits.cpu }}
            memory: {{ .Values.deployment.limits.memory }}
        livenessProbe:
          httpGet:
            path: /api/maestro
            port: {{ .Values.maestro.httpBindPort }}
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: {{ .Values.maestro.healthCheckBindPort }}
            scheme: HTTP
            httpHeaders:
            - name: User-Agent
              value: Probe
          initialDelaySeconds: 20
          periodSeconds: 10
