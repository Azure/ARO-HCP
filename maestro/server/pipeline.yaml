$schema: "pipeline.schema.v1"
serviceGroup: Microsoft.Azure.ARO.HCP.Maestro.Server
rolloutName: Maestro Server Rollout
resourceGroups:
- name: global
  resourceGroup: '{{ .global.rg }}'
  subscription: '{{ .global.subscription.key }}'
  steps:
  - name: output
    action: ARM
    template: templates/output-global.bicep
    parameters: ./../../dev-infrastructure/configurations/output-global.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
  - name: mirror-image
    action: ImageMirror
    targetACR:
      configRef: 'acr.svc.name'
    sourceRegistry:
      configRef: maestro.image.registry
    repository:
      configRef: maestro.image.repository
    digest:
      configRef: maestro.image.digest
    pullSecretKeyVault:
      configRef: global.keyVault.name
    pullSecretName:
      configRef: imageSync.ondemandSync.pullSecretName
    shellIdentity:
      input:
        resourceGroup: global
        step: output
        name: globalMSIId
- name: regional
  resourceGroup: '{{ .regionRG }}'
  subscription: '{{ .svc.subscription.key }}'
  steps:
  - name: output
    action: ARM
    template: ../../dev-infrastructure/templates/output-region.bicep
    parameters: ../../dev-infrastructure/configurations/output-region.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
- name: service
  resourceGroup: '{{ .svc.rg }}'
  subscription: '{{ .svc.subscription.key }}'
  steps:
  - name: output
    action: ARM
    template: ../../dev-infrastructure/templates/maestro/maestro-server-lookup.bicep
    parameters: ../../dev-infrastructure/configurations/maestro-server-lookup.tmpl.bicepparam
    deploymentLevel: ResourceGroup
    outputOnly: true
  - name: deploy
    aksCluster: '{{ .svc.aks.name }}'
    action: Helm
    releaseName: 'maestro-server'
    releaseNamespace: '{{ .maestro.server.k8s.namespace }}'
    chartDir: ./deploy
    valuesFile: ./values.yaml
    namespaceFiles:
    - namespace.yaml
    inputVariables:
      tenantId:
        resourceGroup: service
        step: output
        name: tenantId
      maestroMsiClientId:
        resourceGroup: service
        step: output
        name: maestroMsiClientId
      imagePullerMsiClientId:
        resourceGroup: service
        step: output
        name: imagePullerMsiClientId
      databaseHost:
        resourceGroup: regional
        step: output
        name: databaseHost
      brokerHost:
        resourceGroup: regional
        step: output
        name: maestroEventGridNamespacesHostname
    dependsOn:
    - resourceGroup: global
      step: mirror-image
    identityFrom:
      resourceGroup: global
      step: output
      name: globalMSIId
